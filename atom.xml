<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>我的梦想是星辰大海</title>
  
  <subtitle>知识源于积累,登峰造极源于自律</subtitle>
  <link href="http://xubatian.cn/atom.xml" rel="self"/>
  
  <link href="http://xubatian.cn/"/>
  <updated>2022-02-19T12:58:13.572Z</updated>
  <id>http://xubatian.cn/</id>
  
  <author>
    <name>xubatian</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Flink内存管理: 内存数据结构</title>
    <link href="http://xubatian.cn/Flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/"/>
    <id>http://xubatian.cn/Flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-%E5%86%85%E5%AD%98%E6%95%B0%E6%8D%AE%E7%BB%93%E6%9E%84/</id>
    <published>2022-02-19T11:45:46.000Z</published>
    <updated>2022-02-19T12:58:13.572Z</updated>
    
    <content type="html"><![CDATA[<h3 id="内存段"><a href="#内存段" class="headerlink" title="内存段"></a>内存段</h3><p>​        **内存段在 Flink 内部叫 MemorySegment，是 Flink 中最小的内存分配单元，默认大小32KB。Flink内存是区分堆内和堆外的,但是MemorySegment是最小单元,不区分堆内核堆外的.**它即可以是堆上内存（Java的byte数组），也可以是堆外内存（基于Netty的DirectByteBuffer），同时提供了对二进制数据进行读取和写入的方法。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219194503.png"></p><p><strong>HeapMemorySegment：用来分配堆上内存</strong><br><strong>HybridMemorySegment：用来分配堆外内存和堆上内存，2017年以后的版本实际上只使用了HybridMemo`rySegment。</strong></p><p>他有什么有点? 他为什么要设置这个抽象?</p><p>假设我们有一个Tuple3&lt;Integer,Double,Person&gt; 的数据.</p><p>如下图展示一个内嵌型的Tuple3&lt;Integer,Double,Person&gt; 对象的序列化过程：</p><p>Tuple3&lt;Integer,Double,Person&gt; 对象如果用java的JVM自己来管理就会出现密度不紧凑,散列的等情况.而Flink的内存段MemorySegment 他不是散列的,他是紧密连在一起的.</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219195326.png"></p><p>​        可以看出这种序列化方式存储密度是相当紧凑的。其中 int 占4字节，double 占8字节，POJO多个一个字节的header，PojoSerializer只负责将header序列化进去，并委托每个字段对应的serializer对字段进行序列化.</p><h3 id="内存页"><a href="#内存页" class="headerlink" title="内存页"></a>内存页</h3><p>​        内存页是内存段更高一层的封装.</p><p>​        内存页是MemorySegment之上的数据访问视图，数据<strong>读取</strong>抽象为DataInputView，数据<strong>写入</strong>抽象为DataOutputView。使用时就无需关心MemorySegment的细节，会自动处理跨MemorySegment的读取和写入。</p><p>​        有了内存页之后,我们就不需要关注,这一段是第几段了.只需要关注是第几页就ok了.</p><h3 id="Buffer"><a href="#Buffer" class="headerlink" title="Buffer"></a>Buffer</h3><p>​        <strong>一个Buffer对应一个内存段(MemorySegment)</strong></p><p>​        Buffer是网络缓冲内存.是数据传输的时候会用到的.</p><p>​        Task算子之间在网络层面上传输数据，使用的是Buffer，申请和释放由Flink<strong>自行管理</strong>,并不是由我们代码指定，实现类为NetworkBuffer。<strong>1个NetworkBuffer包装了1个MemorySegment</strong>。同时继承了AbstractReferenceCountedByteBuf，是Netty中的抽象类。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">public class NetworkBuffer extends AbstractReferenceCountedByteBuf implements Buffer &#123;</span><br><span class="line"></span><br><span class="line">/** The backing &#123;@link MemorySegment&#125; instance. */</span><br><span class="line">private final MemorySegment memorySegment;</span><br><span class="line"></span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Buffer资源池"><a href="#Buffer资源池" class="headerlink" title="Buffer资源池"></a>Buffer资源池</h3><p>​        Buffer资源池类似我们的连接池,比如说我们连接mysql.创建一次连接是一个连接对象,一个线程.但是我们通常会用一个链接池来管理.Buffer资源池和连接池其实是一样的.</p><p>​        BufferPool 用来管理Buffer，包含Buffer的申请、释放、销毁、可用Buffer通知等，实现类是LocalBufferPool，<strong>每个Task拥有自己的LocalBufferPool</strong>。</p><p>​        Buffer资源池是如何创建的呢?</p><p>​        他用了一个工厂. 设计模式的工厂模式创建的.</p><p>​        BufferPoolFactory 用来提供 BufferPool 的创建和销毁，唯一的实现类是NetworkBufferPool，每个TaskManager只有一个NetworkBufferPool。同一个TaskManager上的Task共享NetworkBufferPool，在TaskManager启动的时候创建并分配内存。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;内存段&quot;&gt;&lt;a href=&quot;#内存段&quot; class=&quot;headerlink&quot; title=&quot;内存段&quot;&gt;&lt;/a&gt;内存段&lt;/h3&gt;&lt;p&gt;​        **内存段在 Flink 内部叫 MemorySegment，是 Flink 中最小的内存分配单元，默认大小32K</summary>
      
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink内存管理: 内存模型</title>
    <link href="http://xubatian.cn/Flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/"/>
    <id>http://xubatian.cn/Flink%E5%86%85%E5%AD%98%E7%AE%A1%E7%90%86-%E5%86%85%E5%AD%98%E6%A8%A1%E5%9E%8B/</id>
    <published>2022-02-19T10:42:16.000Z</published>
    <updated>2022-02-19T11:15:20.584Z</updated>
    
    <content type="html"><![CDATA[<p>​        目前，大数据计算引擎主要用 Java 或是基于 JVM 的编程语言实现的，例如 Apache Hadoop、Apache Spark、Apache Drill、Apache Flink等。Java语言的好处在于程序员不需要太关注底层内存资源的管理，但同样会面临一个问题，就是如何在内存中存储大量的数据（包括缓存和高效处理）。Flink使用自主的内存管理，来避免这个问题。</p><p><strong>JVM内存管理的不足:</strong></p><p>​            1）<strong>Java 对象存储密度低</strong>。Java的对象在内存中存储包含3个主要部分：对象头、实例数据、对齐填充部分。例如，一个只包含 boolean 属性的对象占16byte：对象头占8byte，boolean 属性占1byte，为了对齐达到8的倍数额外占7byte。而实际上只需要一个bit（1/8字节）就够了。</p><span id="more"></span><p>​            2）<strong>Full GC 会极大地影响性能</strong>。尤其是为了处理更大数据而开了很大内存空间的JVM来说，GC 会达到秒级甚至分钟级。</p><p>​            3）<strong>OOM 问题影响稳定性</strong>。OutOfMemoryError是分布式计算框架经常会遇到的问题，当JVM中所有对象大小超过分配给JVM的内存大小时，就会发生OutOfMemoryError错误，导致JVM崩溃，分布式框架的健壮性和性能都会受到影响。</p><p>​            4）<strong>缓存未命中问题</strong>。CPU进行计算的时候，是从CPU缓存中获取数据。现代体系的CPU会有多级缓存，而加载的时候是以Cache Line为单位加载。如果能够将对象连续存储，这样就会大大降低Cache Miss。使得CPU集中处理业务，而不是空转。（Java对象在堆上存储的时候并不是连续的，所以从内存中读取Java对象时，缓存的邻近的内存区域的数据往往不是CPU下一步计算所需要的，这就是缓存未命中。此时CPU需要空转等待从内存中重新读取数据。）</p><p>​            Flink 并不是将大量对象存在堆内存上，而是将对象都序列化到一个预分配的内存块上，这个内存块叫做 MemorySegment，它代表了一段固定长度的内存（默认大小为 32KB），也是 Flink 中最小的内存分配单元，并且提供了非常高效的读写方法，很多运算可以直接操作二进制数据，不需要反序列化即可执行。每条记录都会以序列化的形式存储在一个或多个MemorySegment中。如果需要处理的数据多于可以保存在内存中的数据，Flink 的运算符会将部分数据溢出到磁盘。</p><!--more--><h1 id="内存模型"><a href="#内存模型" class="headerlink" title="内存模型"></a>内存模型</h1><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219184452.png"></p><h2 id="JobManager内存模型"><a href="#JobManager内存模型" class="headerlink" title="JobManager内存模型"></a>JobManager内存模型</h2><p><strong>JobManagerFlinkMemory.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="line"> * or more contributor license agreements.  See the NOTICE file</span><br><span class="line"> * distributed with this work for additional information</span><br><span class="line"> * regarding copyright ownership.  The ASF licenses this file</span><br><span class="line"> * to you under the Apache License, Version 2.0 (the</span><br><span class="line"> * &quot;License&quot;); you may not use this file except in compliance</span><br><span class="line"> * with the License.  You may obtain a copy of the License at</span><br><span class="line"> *</span><br><span class="line"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"> *</span><br><span class="line"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="line"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"> * See the License for the specific language governing permissions and</span><br><span class="line"> * limitations under the License.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">package org.apache.flink.runtime.util.config.memory.jobmanager;</span><br><span class="line"></span><br><span class="line">import org.apache.flink.annotation.VisibleForTesting;</span><br><span class="line">import org.apache.flink.configuration.MemorySize;</span><br><span class="line">import org.apache.flink.runtime.util.config.memory.FlinkMemory;</span><br><span class="line"></span><br><span class="line">import java.util.Objects;</span><br><span class="line"></span><br><span class="line">import static org.apache.flink.util.Preconditions.checkNotNull;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Flink internal memory components of Job Manager.</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt;A Job Manager&#x27;s internal Flink memory consists of the following components.</span><br><span class="line"> * &lt;ul&gt;</span><br><span class="line"> *     &lt;li&gt;JVM Heap Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Off-Heap Memory (also JVM Direct Memory)&lt;/li&gt;</span><br><span class="line"> * &lt;/ul&gt;</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt;The relationships of Job Manager Flink memory components are shown below.</span><br><span class="line"> * &lt;pre&gt;</span><br><span class="line"> *               ┌ ─ ─  Total Flink Memory - ─ ─ ┐</span><br><span class="line"> *                 ┌───────────────────────────┐</span><br><span class="line"> *               | │       JVM Heap Memory     │ |   TODO JVM 堆内存</span><br><span class="line"> *                 └───────────────────────────┘</span><br><span class="line"> *               │ ┌───────────────────────────┐ │</span><br><span class="line"> *                 |    Off-heap Heap Memory   │   -─ JVM Direct Memory  TODO JVM 堆外内存</span><br><span class="line"> *               │ └───────────────────────────┘ │</span><br><span class="line"> *               └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘</span><br><span class="line"> * &lt;/pre&gt;</span><br><span class="line"> */</span><br><span class="line">public class JobManagerFlinkMemory implements FlinkMemory &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">private final MemorySize jvmHeap;</span><br><span class="line">private final MemorySize offHeapMemory;</span><br><span class="line"></span><br><span class="line">@VisibleForTesting</span><br><span class="line">public JobManagerFlinkMemory(MemorySize jvmHeap, MemorySize offHeapMemory) &#123;</span><br><span class="line">this.jvmHeap = checkNotNull(jvmHeap);</span><br><span class="line">this.offHeapMemory = checkNotNull(offHeapMemory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getJvmHeapMemorySize() &#123;</span><br><span class="line">return jvmHeap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getJvmDirectMemorySize() &#123;</span><br><span class="line">return offHeapMemory;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getTotalFlinkMemorySize() &#123;</span><br><span class="line">return jvmHeap.add(offHeapMemory);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean equals(Object obj) &#123;</span><br><span class="line">if (obj == this) &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125; else if (obj instanceof JobManagerFlinkMemory) &#123;</span><br><span class="line">JobManagerFlinkMemory that = (JobManagerFlinkMemory) obj;</span><br><span class="line">return Objects.equals(this.jvmHeap, that.jvmHeap) &amp;&amp;</span><br><span class="line">Objects.equals(this.offHeapMemory, that.offHeapMemory);</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public int hashCode() &#123;</span><br><span class="line">return Objects.hash(</span><br><span class="line">jvmHeap,</span><br><span class="line">offHeapMemory);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219184654.png"></p><p>​        在1.10中，Flink 统一了 TM 端的内存管理和配置，相应的在1.11中，Flink 进一步对JM 端的内存配置进行了修改，使它的选项和配置方式与TM 端的配置方式保持一致。</p><p><strong>1.10版本</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># The heap size for the JobManager JVM</span><br><span class="line"></span><br><span class="line">jobmanager.heap.size: 1024m</span><br></pre></td></tr></table></figure><p><strong>1.11版本及以后</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"># The total process memory size for the JobManager.</span><br><span class="line">#</span><br><span class="line"># Note this accounts for all memory usage within the JobManager process, including JVM metaspace and other overhead.</span><br><span class="line"></span><br><span class="line">jobmanager.memory.process.size: 1600m</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219191433.png"></p><h2 id="TaskManager内存模型"><a href="#TaskManager内存模型" class="headerlink" title="TaskManager内存模型"></a>TaskManager内存模型</h2><p>​        Flink 1.10 对TaskManager的内存模型和Flink应用程序的配置选项进行了重大更改，让用户能够更加严格地控制其内存开销。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219184944.png"></p><p><strong>TaskExecutorFlinkMemory.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br></pre></td><td class="code"><pre><span class="line">/*</span><br><span class="line"> * Licensed to the Apache Software Foundation (ASF) under one</span><br><span class="line"> * or more contributor license agreements.  See the NOTICE file</span><br><span class="line"> * distributed with this work for additional information</span><br><span class="line"> * regarding copyright ownership.  The ASF licenses this file</span><br><span class="line"> * to you under the Apache License, Version 2.0 (the</span><br><span class="line"> * &quot;License&quot;); you may not use this file except in compliance</span><br><span class="line"> * with the License.  You may obtain a copy of the License at</span><br><span class="line"> *</span><br><span class="line"> *     http://www.apache.org/licenses/LICENSE-2.0</span><br><span class="line"> *</span><br><span class="line"> * Unless required by applicable law or agreed to in writing, software</span><br><span class="line"> * distributed under the License is distributed on an &quot;AS IS&quot; BASIS,</span><br><span class="line"> * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.</span><br><span class="line"> * See the License for the specific language governing permissions and</span><br><span class="line"> * limitations under the License.</span><br><span class="line"> */</span><br><span class="line"></span><br><span class="line">package org.apache.flink.runtime.util.config.memory.taskmanager;</span><br><span class="line"></span><br><span class="line">import org.apache.flink.configuration.MemorySize;</span><br><span class="line">import org.apache.flink.runtime.util.config.memory.FlinkMemory;</span><br><span class="line"></span><br><span class="line">import java.util.Objects;</span><br><span class="line"></span><br><span class="line">import static org.apache.flink.util.Preconditions.checkNotNull;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Flink internal memory components of Task Executor.</span><br><span class="line"> *</span><br><span class="line"> * &lt;p&gt;A TaskExecutor&#x27;s internal Flink memory consists of the following components.</span><br><span class="line"> * &lt;ul&gt;</span><br><span class="line"> *     &lt;li&gt;Framework Heap Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Framework Off-Heap Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Task Heap Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Task Off-Heap Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Network Memory&lt;/li&gt;</span><br><span class="line"> *     &lt;li&gt;Managed Memory&lt;/li&gt;</span><br><span class="line"> * &lt;/ul&gt;</span><br><span class="line"> *  TODO 这是Flink内存 不包含JVM本身的开销的</span><br><span class="line"> * &lt;p&gt;The relationships of TaskExecutor Flink memory components are shown below.</span><br><span class="line"> * &lt;pre&gt;</span><br><span class="line"> *               ┌ ─ ─  Total Flink Memory - ─ ─ ┐</span><br><span class="line"> *               |┌ ─ ─ - - - On-Heap - - - ─ ─ ┐|</span><br><span class="line"> *                 ┌───────────────────────────┐</span><br><span class="line"> *               |││   Framework Heap Memory   ││|</span><br><span class="line"> *                 └───────────────────────────┘</span><br><span class="line"> *               │ ┌───────────────────────────┐ │</span><br><span class="line"> *                ||      Task Heap Memory     ││</span><br><span class="line"> *               │ └───────────────────────────┘ │</span><br><span class="line"> *                └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘</span><br><span class="line"> *               |┌ ─ ─ - - - Off-Heap  - - ─ ─ ┐|</span><br><span class="line"> *                │┌───────────────────────────┐│</span><br><span class="line"> *               │ │ Framework Off-Heap Memory │ │ ─┐</span><br><span class="line"> *                │└───────────────────────────┘│   │</span><br><span class="line"> *               │ ┌───────────────────────────┐ │  │</span><br><span class="line"> *                ││   Task Off-Heap Memory    ││   ┼─ JVM Direct Memory</span><br><span class="line"> *               │ └───────────────────────────┘ │  │</span><br><span class="line"> *                │┌───────────────────────────┐│   │</span><br><span class="line"> *               │ │      Network Memory       │ │ ─┘</span><br><span class="line"> *                │└───────────────────────────┘│</span><br><span class="line"> *               │ ┌───────────────────────────┐ │</span><br><span class="line"> *                |│      Managed Memory       │|</span><br><span class="line"> *               │ └───────────────────────────┘ │</span><br><span class="line"> *                └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘</span><br><span class="line"> *               └ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ─ ┘</span><br><span class="line"> * &lt;/pre&gt;</span><br><span class="line"> */</span><br><span class="line">public class TaskExecutorFlinkMemory implements FlinkMemory &#123;</span><br><span class="line">private static final long serialVersionUID = 1L;</span><br><span class="line"></span><br><span class="line">private final MemorySize frameworkHeap;</span><br><span class="line">private final MemorySize frameworkOffHeap;</span><br><span class="line">private final MemorySize taskHeap;</span><br><span class="line">private final MemorySize taskOffHeap;</span><br><span class="line">private final MemorySize network;</span><br><span class="line">private final MemorySize managed;</span><br><span class="line"></span><br><span class="line">public TaskExecutorFlinkMemory(</span><br><span class="line">final MemorySize frameworkHeap,</span><br><span class="line">final MemorySize frameworkOffHeap,</span><br><span class="line">final MemorySize taskHeap,</span><br><span class="line">final MemorySize taskOffHeap,</span><br><span class="line">final MemorySize network,</span><br><span class="line">final MemorySize managed) &#123;</span><br><span class="line"></span><br><span class="line">this.frameworkHeap = checkNotNull(frameworkHeap);</span><br><span class="line">this.frameworkOffHeap = checkNotNull(frameworkOffHeap);</span><br><span class="line">this.taskHeap = checkNotNull(taskHeap);</span><br><span class="line">this.taskOffHeap = checkNotNull(taskOffHeap);</span><br><span class="line">this.network = checkNotNull(network);</span><br><span class="line">this.managed = checkNotNull(managed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getFrameworkHeap() &#123;</span><br><span class="line">return frameworkHeap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getFrameworkOffHeap() &#123;</span><br><span class="line">return frameworkOffHeap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getTaskHeap() &#123;</span><br><span class="line">return taskHeap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getTaskOffHeap() &#123;</span><br><span class="line">return taskOffHeap;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getNetwork() &#123;</span><br><span class="line">return network;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">public MemorySize getManaged() &#123;</span><br><span class="line">return managed;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getJvmHeapMemorySize() &#123;</span><br><span class="line">return frameworkHeap.add(taskHeap);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getJvmDirectMemorySize() &#123;</span><br><span class="line">return frameworkOffHeap.add(taskOffHeap).add(network);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public MemorySize getTotalFlinkMemorySize() &#123;</span><br><span class="line">return frameworkHeap.add(frameworkOffHeap).add(taskHeap).add(taskOffHeap).add(network).add(managed);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public boolean equals(Object obj) &#123;</span><br><span class="line">if (obj == this) &#123;</span><br><span class="line">return true;</span><br><span class="line">&#125; else if (obj instanceof TaskExecutorFlinkMemory) &#123;</span><br><span class="line">TaskExecutorFlinkMemory that = (TaskExecutorFlinkMemory) obj;</span><br><span class="line">return Objects.equals(this.frameworkHeap, that.frameworkHeap) &amp;&amp;</span><br><span class="line">Objects.equals(this.frameworkOffHeap, that.frameworkOffHeap) &amp;&amp;</span><br><span class="line">Objects.equals(this.taskHeap, that.taskHeap) &amp;&amp;</span><br><span class="line">Objects.equals(this.taskOffHeap, that.taskOffHeap) &amp;&amp;</span><br><span class="line">Objects.equals(this.network, that.network) &amp;&amp;</span><br><span class="line">Objects.equals(this.managed, that.managed);</span><br><span class="line">&#125;</span><br><span class="line">return false;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">@Override</span><br><span class="line">public int hashCode() &#123;</span><br><span class="line">return Objects.hash(</span><br><span class="line">frameworkHeap,</span><br><span class="line">frameworkOffHeap,</span><br><span class="line">taskHeap,</span><br><span class="line">taskOffHeap,</span><br><span class="line">network,</span><br><span class="line">managed);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219185043.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219185113.png"></p><h3 id="JVM-Heap：JVM堆上内存"><a href="#JVM-Heap：JVM堆上内存" class="headerlink" title="JVM Heap：JVM堆上内存"></a>JVM Heap：JVM堆上内存</h3><p>​        1、Framework Heap Memory：Flink框架本身使用的内存，即TaskManager本身所占用的堆上内存，不计入Slot的资源中。</p><p>配置参数：taskmanager.memory.framework.heap.size=128MB,默认128MB</p><p>​        2、Task Heap Memory：Task执行用户代码时所使用的堆上内存。</p><p>配置参数：taskmanager.memory.task.heap.size</p><h3 id="Off-Heap-Mempry：JVM堆外内存"><a href="#Off-Heap-Mempry：JVM堆外内存" class="headerlink" title="Off-Heap Mempry：JVM堆外内存"></a>Off-Heap Mempry：JVM堆外内存</h3><p>​        1、DirectMemory：JVM直接内存</p><p>​                1） Framework Off-Heap Memory：Flink框架本身所使用的内存，即TaskManager本身所占用的对外内存，不计入Slot资源。</p><p>​                        配置参数：taskmanager.memory.framework.off-heap.size=128MB,默认128MB</p><p>​                2）Task Off-Heap Memory：Task执行用户代码所使用的对外内存。</p><p>​                        配置参数：taskmanager.memory.task.off-heap.size=0,默认0</p><p>​                3）Network Memory：网络数据交换所使用的堆外内存大小，如网络数据交换缓冲区</p><p>​                        配置参数：</p><p>​                            taskmanager.memory.network.fraction: 0.1</p><p>​                            taskmanager.memory.network.min: 64mb</p><p>​                            taskmanager.memory.network.max: 1gb</p><p>​        2、Managed Memory：Flink管理的堆外内存，用于排序、哈希表、缓存中间结果及 RocksDB State Backend 的本地内存。</p><p>​              RocksDB就是存储RocksDB类型的状态后端的.状态后端关注两件事情①本地状态存在哪里. ②checkpoint存在哪里. 本地内存是存在RocksDB里面.RocksDB又用到了内存加磁盘.那RocksDB用到的内存就是这个Managed Memory.</p><p>​                        配置参数：</p><p>​                            taskmanager.memory.managed.fraction=0.4</p><p>​                            taskmanager.memory.managed.size</p><h3 id="JVM-specific-memory：JVM本身使用的内存"><a href="#JVM-specific-memory：JVM本身使用的内存" class="headerlink" title="JVM specific memory：JVM本身使用的内存"></a>JVM specific memory：JVM本身使用的内存</h3><p>​        1、JVM metaspace：JVM元空间</p><p>​        2、JVM over-head执行开销：JVM执行时自身所需要的内容，包括线程堆栈、IO、编译缓存等所使用的内存。</p><p>​                配置参数：</p><p>​                    taskmanager.memory.jvm-overhead.min=192mb</p><p>​                    taskmanager.memory.jvm-overhead.max=1gb</p><p>​                    taskmanager.memory.jvm-overhead.fraction=0.1</p><h3 id="总体内存"><a href="#总体内存" class="headerlink" title="总体内存"></a>总体内存</h3><p>​            1、总进程内存：Flink Java应用程序（包括用户代码）和JVM运行整个进程所消耗的总内存。</p><p>​                        <strong>总进程内存 = Flink使用内存 + JVM元空间 + JVM执行开销</strong></p><p>​                 配置项：taskmanager.memory.process.size: 1728m</p><p>​            2、Flink总内存：仅Flink Java应用程序消耗的内存，包括用户代码，但不包括JVM为其运行而分配的内存</p><p>​                        <strong>Flink使用内存：框架堆内外 + task堆内外 + network + manage</strong></p><p>​                    配置项：taskmanager.memory.flink.size: 1280m</p><p>​    <strong>说明：</strong>配置项详细信息查看如下链接</p><p><a href="https://ci.apache.org/projects/flink/flink-docs-release-1.14/deployment/config.html#memory-configuration">https://ci.apache.org/projects/flink/flink-docs-release-1.14/deployment/config.html#memory-configuration</a></p><h2 id="内存分配"><a href="#内存分配" class="headerlink" title="内存分配"></a>内存分配</h2><p>内存在配置文件内配置之后,在代码里面 是如何加载的呢?如何加载到配置项里面的.</p><h3 id="JobManager内存分配"><a href="#JobManager内存分配" class="headerlink" title="JobManager内存分配"></a>JobManager内存分配</h3><p><strong>YarnClusterDescriptor.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">private ApplicationReport startAppMaster( 集群描述器启动Applicationmaster.启动的时候封装了一些配置项.就是在这里做的.</span><br><span class="line">Configuration configuration,</span><br><span class="line">String applicationName,</span><br><span class="line">String yarnClusterEntrypoint,</span><br><span class="line">JobGraph jobGraph,</span><br><span class="line">YarnClient yarnClient,</span><br><span class="line">YarnClientApplication yarnApplication,</span><br><span class="line">ClusterSpecification clusterSpecification) throws Exception &#123;</span><br><span class="line"></span><br><span class="line">... ...</span><br><span class="line">final JobManagerProcessSpec processSpec = JobManagerProcessUtils.processSpecFromConfigWithNewOptionToInterpretLegacyHeap(</span><br><span class="line">flinkConfiguration,</span><br><span class="line">JobManagerOptions.TOTAL_PROCESS_MEMORY);</span><br><span class="line">final ContainerLaunchContext amContainer = setupApplicationMasterContainer(</span><br><span class="line">yarnClusterEntrypoint,</span><br><span class="line">hasKrb5,</span><br><span class="line">processSpec);</span><br><span class="line">... ...</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219190826.png"></p><p><strong>JobManagerProcessUtils.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">public static JobManagerProcessSpec processSpecFromConfigWithNewOptionToInterpretLegacyHeap(</span><br><span class="line">Configuration config,</span><br><span class="line">ConfigOption&lt;MemorySize&gt; newOptionToInterpretLegacyHeap) &#123;</span><br><span class="line">try &#123;</span><br><span class="line">return processSpecFromConfig(</span><br><span class="line">getConfigurationWithLegacyHeapSizeMappedToNewConfigOption(</span><br><span class="line">config,</span><br><span class="line">newOptionToInterpretLegacyHeap));</span><br><span class="line">&#125; catch (IllegalConfigurationException e) &#123;</span><br><span class="line">throw new IllegalConfigurationException(&quot;JobManager memory configuration failed: &quot; + e.getMessage(), e);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">static JobManagerProcessSpec processSpecFromConfig(Configuration config) &#123;</span><br><span class="line">return createMemoryProcessSpec(PROCESS_MEMORY_UTILS.memoryProcessSpecFromConfig(config));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>ProcessMemoryUtils.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">public CommonProcessMemorySpec&lt;FM&gt; memoryProcessSpecFromConfig(Configuration config) &#123;</span><br><span class="line">if (options.getRequiredFineGrainedOptions().stream().allMatch(config::contains)) &#123;</span><br><span class="line">// all internal memory options are configured, use these to derive total Flink and process memory</span><br><span class="line">return deriveProcessSpecWithExplicitInternalMemory(config);</span><br><span class="line">&#125; else if (config.contains(options.getTotalFlinkMemoryOption())) &#123;</span><br><span class="line">// internal memory options are not configured, total Flink memory is configured,</span><br><span class="line">// derive from total flink memory</span><br><span class="line">// 如果只配置了JM的Flink总内存，调用下面方法</span><br><span class="line">return deriveProcessSpecWithTotalFlinkMemory(config);</span><br><span class="line">&#125; else if (config.contains(options.getTotalProcessMemoryOption())) &#123;</span><br><span class="line">// total Flink memory is not configured, total process memory is configured,</span><br><span class="line">// derive from total process memory</span><br><span class="line">return deriveProcessSpecWithTotalProcessMemory(config);</span><br><span class="line">&#125;</span><br><span class="line">return failBecauseRequiredOptionsNotConfigured();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">private CommonProcessMemorySpec&lt;FM&gt; deriveProcessSpecWithTotalFlinkMemory(Configuration config) &#123;</span><br><span class="line">MemorySize totalFlinkMemorySize = getMemorySizeFromConfig(config, options.getTotalFlinkMemoryOption());</span><br><span class="line">// 获取JM的Flink总内存</span><br><span class="line">FM flinkInternalMemory = flinkMemoryUtils.deriveFromTotalFlinkMemory(config, totalFlinkMemorySize);</span><br><span class="line">// 获取JM的JVM元空间和执行开销</span><br><span class="line">JvmMetaspaceAndOverhead jvmMetaspaceAndOverhead = deriveJvmMetaspaceAndOverheadFromTotalFlinkMemory(config, totalFlinkMemorySize);</span><br><span class="line">return new CommonProcessMemorySpec&lt;&gt;(flinkInternalMemory, jvmMetaspaceAndOverhead);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>JobManagerFlinkMemoryUtils.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">public JobManagerFlinkMemory deriveFromTotalFlinkMemory(Configuration config, MemorySize totalFlinkMemorySize) &#123;</span><br><span class="line">MemorySize offHeapMemorySize = ProcessMemoryUtils.getMemorySizeFromConfig(config, JobManagerOptions.OFF_HEAP_MEMORY);</span><br><span class="line">if (totalFlinkMemorySize.compareTo(offHeapMemorySize) &lt; 1) &#123;</span><br><span class="line">throw new IllegalConfigurationException(</span><br><span class="line">&quot;The configured Total Flink Memory (%s) is less than the configured Off-heap Memory (%s).&quot;,</span><br><span class="line">totalFlinkMemorySize.toHumanReadableString(),</span><br><span class="line">offHeapMemorySize.toHumanReadableString());</span><br><span class="line">&#125;</span><br><span class="line">MemorySize derivedJvmHeapMemorySize = totalFlinkMemorySize.subtract(offHeapMemorySize);</span><br><span class="line">return createJobManagerFlinkMemory(derivedJvmHeapMemorySize, offHeapMemorySize);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">private static JobManagerFlinkMemory createJobManagerFlinkMemory(</span><br><span class="line">MemorySize jvmHeap,</span><br><span class="line">MemorySize offHeapMemory) &#123;</span><br><span class="line">verifyJvmHeapSize(jvmHeap);</span><br><span class="line">return new JobManagerFlinkMemory(jvmHeap, offHeapMemory);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="TaskManager内存分配"><a href="#TaskManager内存分配" class="headerlink" title="TaskManager内存分配"></a>TaskManager内存分配</h3><p><strong>ActiveResourceManager.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">private void requestNewWorker(WorkerResourceSpec workerResourceSpec) &#123;</span><br><span class="line">final TaskExecutorProcessSpec taskExecutorProcessSpec =</span><br><span class="line">TaskExecutorProcessUtils.processSpecFromWorkerResourceSpec(flinkConfig, workerResourceSpec);</span><br><span class="line">... ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><strong>TaskExecutorProcessUtils.java</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">public static TaskExecutorProcessSpec processSpecFromWorkerResourceSpec(</span><br><span class="line">final Configuration config, final WorkerResourceSpec workerResourceSpec) &#123;</span><br><span class="line"></span><br><span class="line">final MemorySize frameworkHeapMemorySize = TaskExecutorFlinkMemoryUtils.getFrameworkHeapMemorySize(config);</span><br><span class="line">final MemorySize frameworkOffHeapMemorySize = TaskExecutorFlinkMemoryUtils.getFrameworkOffHeapMemorySize(config);</span><br><span class="line"></span><br><span class="line">final TaskExecutorFlinkMemory flinkMemory = new TaskExecutorFlinkMemory(</span><br><span class="line">frameworkHeapMemorySize,</span><br><span class="line">frameworkOffHeapMemorySize,</span><br><span class="line">workerResourceSpec.getTaskHeapSize(),</span><br><span class="line">workerResourceSpec.getTaskOffHeapSize(),</span><br><span class="line">workerResourceSpec.getNetworkMemSize(),</span><br><span class="line">workerResourceSpec.getManagedMemSize());</span><br><span class="line"></span><br><span class="line">final JvmMetaspaceAndOverhead jvmMetaspaceAndOverhead =</span><br><span class="line">PROCESS_MEMORY_UTILS.deriveJvmMetaspaceAndOverheadFromTotalFlinkMemory(</span><br><span class="line">config, flinkMemory.getTotalFlinkMemorySize());</span><br><span class="line"></span><br><span class="line">return new TaskExecutorProcessSpec(workerResourceSpec.getCpuCores(), flinkMemory, jvmMetaspaceAndOverhead);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;​        目前，大数据计算引擎主要用 Java 或是基于 JVM 的编程语言实现的，例如 Apache Hadoop、Apache Spark、Apache Drill、Apache Flink等。Java语言的好处在于程序员不需要太关注底层内存资源的管理，但同样会面临一个问题，就是如何在内存中存储大量的数据（包括缓存和高效处理）。Flink使用自主的内存管理，来避免这个问题。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;JVM内存管理的不足:&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​            1）&lt;strong&gt;Java 对象存储密度低&lt;/strong&gt;。Java的对象在内存中存储包含3个主要部分：对象头、实例数据、对齐填充部分。例如，一个只包含 boolean 属性的对象占16byte：对象头占8byte，boolean 属性占1byte，为了对齐达到8的倍数额外占7byte。而实际上只需要一个bit（1/8字节）就够了。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink源码分析: Flink on yarn 的 per-job-cluster模式及提交流程</title>
    <link href="http://xubatian.cn/Flink%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-Flink-on-yarn-%E7%9A%84-per-job-cluster%E6%A8%A1%E5%BC%8F%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B/"/>
    <id>http://xubatian.cn/Flink%E6%BA%90%E7%A0%81%E5%88%86%E6%9E%90-Flink-on-yarn-%E7%9A%84-per-job-cluster%E6%A8%A1%E5%BC%8F%E5%8F%8A%E6%8F%90%E4%BA%A4%E6%B5%81%E7%A8%8B/</id>
    <published>2022-02-19T06:57:08.000Z</published>
    <updated>2022-02-19T07:36:46.363Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Flink-on-Yarn"><a href="#Flink-on-Yarn" class="headerlink" title="Flink on Yarn"></a>Flink on Yarn</h3><p>​        Flink提供了两种在yarn上运行的模式，分别为<strong>Session-Cluster和Per-Job-Cluster模式</strong>.</p><p>​        Application就是我们的JobManager.</p><p>什么是Session-Cluster呢?</p><p>​        就是多个job或者多个application共享一份集群资源,共享一份yarn session的进程或者共用一个进程中的资源,那个进程叫yarn session<br>什么是Per-Job-Cluster呢?<br>每一个job对应一个yarn session</p><span id="more"></span><p><strong>如图:</strong></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150143.png"></p><h4 id="Session-cluster-模式：（一个作业是失败很可能影响下一个作业的提交）"><a href="#Session-cluster-模式：（一个作业是失败很可能影响下一个作业的提交）" class="headerlink" title="Session-cluster 模式：（一个作业是失败很可能影响下一个作业的提交）"></a>Session-cluster 模式：（一个作业是失败很可能影响下一个作业的提交）</h4><p>yarn session模式<br>一个作业的失败很可能会影响下一个作业的正常提交，因为他一个作业的失败很可能他把所有的资源都占完了，占完了而且你一直都没有停止，没有停止那么其他的作业就无法提交了<br><strong>如图所示:</strong><br>五个Flink Job都是跑在一个Flink的yarn session当中的,这个Flink yarn session可以理解为就是一份资源,这个资源从哪里生成来的呢?是从我们的yarn的ResourceManager中生成来的,生成过来之后他启动一个进程,这个进程我们把它称之为叫yarn session的进程,这个yarn session中包含了一些资源,这些资源允许我们的多个flink job共享这个里面的资源去运行;但是有这种情况,什么情况呢?<br>假设我提交两个flink job提交给这一个yarn session之后,发现我yarn session中的共享资源被占完了,就是满了.什么叫满了呢?就是没有空余的slot(因为我们flink的任务是运行在slot上面的),如图所示:</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150251.png"></p><p>所以,如果我当前yarn session中运行了两个job之后已经没有剩余的slot了,请问后面五个flink job还能提交上去吗?不能,他们会在等待,等待有人释放了slot,然后他们在去抢这些资源======&gt;这就是Session-cluster 模式</p><h4 id="Per-Job-Cluster模式-（一个作业的失败不会影响下一个作业的提交）"><a href="#Per-Job-Cluster模式-（一个作业的失败不会影响下一个作业的提交）" class="headerlink" title="Per-Job-Cluster模式:（一个作业的失败不会影响下一个作业的提交）"></a>Per-Job-Cluster模式:（一个作业的失败不会影响下一个作业的提交）</h4><p>​        这种模式是每一个job会对应一个yarn session集群,所以这个job所对应的yarn session集群他不会和其他的job共享的,他是相互独立的,只要你这台集群总的资源是够大的,那么你就可以源源不断的一直提交新的job,所以两种模式,这一种用的最多,也是最方便的,如图所示:</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150435.png"></p><p><strong>为什么说Per-Job-Cluster模式最方便呢?</strong><br>        因为session-cluster模式在flink job没提交之前我得先把yarn session集群准备好,(多个flink共享一个yarn session集群)所以我在flink job集群提交之前就得把yarn session集群准备好,或者说他早就存在已经有了,我再提交    ;所以一般来说session-cluster这种模式我首先得启动yarn session这个集群<br>   <strong>什么是yarn session集群呢?</strong><br>        Yarn session集群就是由yarn管理的一个flink的包含了JobManager,TaskManager的这么一个集群,如图所示:</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150527.png"></p><p>我独立模式下,一个JobManager里面包含了三个TaskManager,那为什么是三个TaskManager呢?</p><p>因为我的每台机器上都只有一个TaskManager呀!<br>请问这些TaskManager跟Hadoop的yarn有关系吗?<br>没有关系.他被yarn管理吗?<br>不会.他的资源来自于yarn吗?<br>不是,是直接来自于操作系统<br>所以什么叫yarn session的集群?<br><strong>yarn session集群就是由yarn来管理的一个在hadoop内部的一个小的Flink的运行集群,包含了JobManager和多个TaskManager</strong></p><h3 id="简要记录源码阅读过程"><a href="#简要记录源码阅读过程" class="headerlink" title="简要记录源码阅读过程"></a>简要记录源码阅读过程</h3><div style="position: relative; padding: 30% 45%;"><iframe style="position: absolute; width: 100%; height: 100%; left: 0; top: 0;" src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/2022-02-19_15-25-23.mp4" frameborder="no" scrolling="no"></iframe></div> <h3 id="总结per-job-cluster模式及提交流程"><a href="#总结per-job-cluster模式及提交流程" class="headerlink" title="总结per-job-cluster模式及提交流程"></a>总结per-job-cluster模式及提交流程</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150738.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220219150939.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;Flink-on-Yarn&quot;&gt;&lt;a href=&quot;#Flink-on-Yarn&quot; class=&quot;headerlink&quot; title=&quot;Flink on Yarn&quot;&gt;&lt;/a&gt;Flink on Yarn&lt;/h3&gt;&lt;p&gt;​        Flink提供了两种在yarn上运行的模式，分别为&lt;strong&gt;Session-Cluster和Per-Job-Cluster模式&lt;/strong&gt;.&lt;/p&gt;
&lt;p&gt;​        Application就是我们的JobManager.&lt;/p&gt;
&lt;p&gt;什么是Session-Cluster呢?&lt;/p&gt;
&lt;p&gt;​        就是多个job或者多个application共享一份集群资源,共享一份yarn session的进程或者共用一个进程中的资源,那个进程叫yarn session&lt;br&gt;什么是Per-Job-Cluster呢?&lt;br&gt;每一个job对应一个yarn session&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink SQL 案例代码: 使用连接器的方式读取Kafka的数据</title>
    <link href="http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E5%99%A8%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AF%BB%E5%8F%96Kafka%E7%9A%84%E6%95%B0%E6%8D%AE/"/>
    <id>http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E4%BD%BF%E7%94%A8%E8%BF%9E%E6%8E%A5%E5%99%A8%E7%9A%84%E6%96%B9%E5%BC%8F%E8%AF%BB%E5%8F%96Kafka%E7%9A%84%E6%95%B0%E6%8D%AE/</id>
    <published>2022-02-17T10:31:22.000Z</published>
    <updated>2022-02-17T10:32:31.431Z</updated>
    
    <content type="html"><![CDATA[<p>注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。<br>         只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.demo.FlinkDemo10;</span><br><span class="line"></span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.table.api.DataTypes;</span><br><span class="line">import org.apache.flink.table.api.Table;</span><br><span class="line">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br><span class="line">import org.apache.flink.table.descriptors.Json;</span><br><span class="line">import org.apache.flink.table.descriptors.Kafka;</span><br><span class="line">import org.apache.flink.table.descriptors.Schema;</span><br><span class="line">import org.apache.flink.types.Row;</span><br><span class="line">import org.apache.kafka.clients.consumer.ConsumerConfig;</span><br><span class="line"></span><br><span class="line">import static org.apache.flink.table.api.Expressions.$;</span><br><span class="line">/**</span><br><span class="line"> * 表到流的转换:</span><br><span class="line"> * Append-only 流（追加流）</span><br><span class="line"> * Retract 流（撤回流，使用聚合操作，count，sum等）</span><br><span class="line"> * Upsert 流(更新流,直接更新)</span><br><span class="line"> *</span><br><span class="line"> * 注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。</span><br><span class="line"> * 只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</span><br><span class="line"> * Author: shangbaishuyao</span><br><span class="line"> * Date: 13:29 2021/4/23</span><br><span class="line"> * Desc:</span><br><span class="line"> */</span><br><span class="line">public class FlinkSQL04_Source_Kafka &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //1.获取执行环境</span><br><span class="line">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        env.setParallelism(1);</span><br><span class="line">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br><span class="line">        //2.使用连接器的方式读取Kafka的数据</span><br><span class="line">        tableEnv.connect(new Kafka()</span><br><span class="line">                .version(&quot;universal&quot;)</span><br><span class="line">                .topic(&quot;test&quot;)</span><br><span class="line">                .startFromLatest()</span><br><span class="line">                .property(ConsumerConfig.BOOTSTRAP_SERVERS_CONFIG, &quot;hadoop102:9092&quot;)</span><br><span class="line">                .property(ConsumerConfig.GROUP_ID_CONFIG, &quot;shangbaishuyao&quot;))</span><br><span class="line">                .withSchema(new Schema()</span><br><span class="line">                        .field(&quot;id&quot;, DataTypes.STRING())</span><br><span class="line">                        .field(&quot;ts&quot;, DataTypes.BIGINT())</span><br><span class="line">                        .field(&quot;vc&quot;, DataTypes.INT()))</span><br><span class="line">                .withFormat(new Json())</span><br><span class="line">//                .withFormat(new Csv())</span><br><span class="line">                .createTemporaryTable(&quot;sensor&quot;);</span><br><span class="line">        //3.使用连接器创建表</span><br><span class="line">        Table sensor = tableEnv.from(&quot;sensor&quot;);</span><br><span class="line">        //4.查询数据</span><br><span class="line">        Table resultTable = sensor.groupBy($(&quot;id&quot;))</span><br><span class="line">                .select($(&quot;id&quot;), $(&quot;id&quot;).count());</span><br><span class="line">        //6.将表转换为流进行输出</span><br><span class="line">        tableEnv.toRetractStream(resultTable, Row.class).print();</span><br><span class="line">        //7.执行任务</span><br><span class="line">        env.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。&lt;br&gt;         只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink SQL 案例代码: 使用Connect方式读取文本数据</title>
    <link href="http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E4%BD%BF%E7%94%A8Connect%E6%96%B9%E5%BC%8F%E8%AF%BB%E5%8F%96%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE/"/>
    <id>http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E4%BD%BF%E7%94%A8Connect%E6%96%B9%E5%BC%8F%E8%AF%BB%E5%8F%96%E6%96%87%E6%9C%AC%E6%95%B0%E6%8D%AE/</id>
    <published>2022-02-17T10:29:50.000Z</published>
    <updated>2022-02-18T12:31:28.531Z</updated>
    
    <content type="html"><![CDATA[<p>注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。<br>     只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.demo.FlinkDemo10;</span><br><span class="line"></span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStream;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.table.api.DataTypes;</span><br><span class="line">import org.apache.flink.table.api.Table;</span><br><span class="line">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br><span class="line">import org.apache.flink.table.descriptors.Csv;</span><br><span class="line">import org.apache.flink.table.descriptors.FileSystem;</span><br><span class="line">import org.apache.flink.table.descriptors.Schema;</span><br><span class="line">import org.apache.flink.types.Row;</span><br><span class="line"></span><br><span class="line">import static org.apache.flink.table.api.Expressions.$;</span><br><span class="line">/*</span><br><span class="line"> * 表到流的转换:</span><br><span class="line"> * Append-only 流（追加流）</span><br><span class="line"> * Retract 流（撤回流，使用聚合操作，count，sum等）</span><br><span class="line"> * Upsert 流(更新流,直接更新)</span><br><span class="line"> *</span><br><span class="line"> * 注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。</span><br><span class="line"> * 只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</span><br><span class="line"> * Author: shangbaishuyao</span><br><span class="line"> * Date: 13:28 2021/4/23</span><br><span class="line"> * Desc:  使用Connect方式读取文本数据</span><br><span class="line"> */</span><br><span class="line">public class FlinkSQL03_Source_File &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //1.获取执行环境</span><br><span class="line">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        env.setParallelism(1);</span><br><span class="line">        //1.创建表的执行环境</span><br><span class="line">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br><span class="line">        //2.使用Connect方式读取文本数据</span><br><span class="line">        tableEnv.connect(new FileSystem().path(&quot;/Users/shangbaishuyao/warehouse/IDEA_WorkSpace/Flink_WorkSpace/flink-learning-from-zhisheng/flink-1.12.0-Demo/input/sensor.txt&quot;))</span><br><span class="line">                .withSchema(new Schema()</span><br><span class="line">                        .field(&quot;id&quot;, DataTypes.STRING())</span><br><span class="line">                        .field(&quot;ts&quot;, DataTypes.BIGINT())</span><br><span class="line">                        .field(&quot;vc&quot;, DataTypes.INT()))</span><br><span class="line">                .withFormat(new Csv().fieldDelimiter(&#x27;,&#x27;).lineDelimiter(&quot;\n&quot;))</span><br><span class="line">                .createTemporaryTable(&quot;sensor&quot;);</span><br><span class="line">        //3.将连接器应用,转换为表</span><br><span class="line">        Table sensor = tableEnv.from(&quot;sensor&quot;);</span><br><span class="line">        //4.查询</span><br><span class="line">        Table resultTable = sensor.groupBy($(&quot;id&quot;))</span><br><span class="line">                .select($(&quot;id&quot;), $(&quot;id&quot;).count().as(&quot;ct&quot;));</span><br><span class="line">        //5.转换为流进行输出</span><br><span class="line">        DataStream&lt;Tuple2&lt;Boolean, Row&gt;&gt; tuple2DataStream = tableEnv.toRetractStream(resultTable, Row.class);</span><br><span class="line">        //6.打印数据</span><br><span class="line">        tuple2DataStream.print();</span><br><span class="line">        //7.执行任务</span><br><span class="line">        env.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。&lt;br&gt;     只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink SQL 案例代码: 将Stream流转化成Table聚合操作, 求总和,某个count或者sum将转为Stream打印</title>
    <link href="http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E5%B0%86Stream%E6%B5%81%E8%BD%AC%E5%8C%96%E6%88%90Table%E8%81%9A%E5%90%88%E6%93%8D%E4%BD%9C-%E6%B1%82%E6%80%BB%E5%92%8C-%E6%9F%90%E4%B8%AAcount%E6%88%96%E8%80%85sum%E5%B0%86%E8%BD%AC%E4%B8%BAStream%E6%89%93%E5%8D%B0/"/>
    <id>http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E5%B0%86Stream%E6%B5%81%E8%BD%AC%E5%8C%96%E6%88%90Table%E8%81%9A%E5%90%88%E6%93%8D%E4%BD%9C-%E6%B1%82%E6%80%BB%E5%92%8C-%E6%9F%90%E4%B8%AAcount%E6%88%96%E8%80%85sum%E5%B0%86%E8%BD%AC%E4%B8%BAStream%E6%89%93%E5%8D%B0/</id>
    <published>2022-02-17T10:24:06.000Z</published>
    <updated>2022-02-17T10:27:09.377Z</updated>
    
    <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">表到流的转换:</span><br><span class="line"> Append-only 流（追加流）</span><br><span class="line"> Retract 流（撤回流，使用聚合操作，count，sum等）</span><br><span class="line"> Upsert 流(更新流,直接更新)</span><br><span class="line">注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。</span><br><span class="line">  只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</span><br><span class="line">  注意: 聚合操作需要使用撤回流,不能使用追加流</span><br></pre></td></tr></table></figure><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.demo.FlinkDemo10;</span><br><span class="line"></span><br><span class="line">import com.shangbaishuyao.demo.bean.WaterSensor;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStream;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.table.api.Table;</span><br><span class="line">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br><span class="line">import org.apache.flink.types.Row;</span><br><span class="line">/**</span><br><span class="line"> * 表到流的转换:</span><br><span class="line"> * Append-only 流（追加流）</span><br><span class="line"> * Retract 流（撤回流，使用聚合操作，count，sum等）</span><br><span class="line"> * Upsert 流(更新流,直接更新)</span><br><span class="line"> *</span><br><span class="line"> * 注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。</span><br><span class="line"> * 只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.</span><br><span class="line"> *</span><br><span class="line"> * Author: shangbaishuyao</span><br><span class="line"> * Date: 13:28 2021/4/23</span><br><span class="line"> * Desc: 聚合操作, 求总和,某个count或者sum</span><br><span class="line"> * 注意: 聚合操作需要使用撤回流,不能使用追加流</span><br><span class="line"> */</span><br><span class="line">public class FlinkSQL02_StreamToTable_Agg &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //1.获取流执行环境</span><br><span class="line">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        env.setParallelism(1);</span><br><span class="line">        //2.读取端口数据创建流并装换为JavaBean</span><br><span class="line">        SingleOutputStreamOperator&lt;WaterSensor&gt; waterSensorDS = env.socketTextStream(&quot;hadoop102&quot;, 9999)</span><br><span class="line">                .map(data -&gt; &#123;</span><br><span class="line">                    String[] split = data.split(&quot;,&quot;);</span><br><span class="line">                    return new WaterSensor(split[0],</span><br><span class="line">                            Long.parseLong(split[1]),</span><br><span class="line">                            Integer.parseInt(split[2]));</span><br><span class="line">                &#125;);</span><br><span class="line">        //3.创建表执行环境</span><br><span class="line">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br><span class="line">        //4.将流转换为动态表</span><br><span class="line">        Table sensorTable = tableEnv.fromDataStream(waterSensorDS);</span><br><span class="line">        //5.使用TableAPI 实现 : select id,sum(vc) from sensor where vc&gt;=20 group by id;</span><br><span class="line">        //TODO Flink V1.12.0新版本的写法</span><br><span class="line">//        Table selectTable = sensorTable</span><br><span class="line">//                .where($(&quot;vc&quot;).isGreaterOrEqual(20)) //水位线大于等于20的</span><br><span class="line">//                .groupBy($(&quot;id&quot;))                    //做聚合操作肯定是要分组</span><br><span class="line">//                .aggregate($(&quot;vc&quot;).sum().as(&quot;sum_vc&quot;)) //聚合vc 按照sum聚合,区别名sum_vc</span><br><span class="line">//                .select($(&quot;id&quot;), $(&quot;sum_vc&quot;));       //查询数据, id可以查,但是ts不能查询,因为我并没有按照ts进行聚合</span><br><span class="line">        //TODO 老版本的写法</span><br><span class="line">        Table selectTable = sensorTable</span><br><span class="line">                .groupBy(&quot;id&quot;)</span><br><span class="line">                .select(&quot;id,id.sum&quot;);</span><br><span class="line">        //6.将selectTable转换为流进行输出</span><br><span class="line">        // toAppendStream: 追加. 来一条数据往动态表里面去追加,来一条追加一条. 但是涉及到一个问题, 第一条数据20则输出20,第二条数据20,应该输出40,但是以前的20怎么办呢?</span><br><span class="line">        // 会报错. toAppendStream 追加流. 聚合操作本来是20, 但是追加后是40, 这个40能聚合进去吗?不能,不然我同一个id出现了多次.</span><br><span class="line">        // 所以我们使用toRetractStream 撤回流. 这个Boolean是干什么用的呢? 是问你要不要撤回.</span><br><span class="line">        DataStream&lt;Tuple2&lt;Boolean, Row&gt;&gt; rowDataStream = tableEnv.toRetractStream(selectTable, Row.class);</span><br><span class="line">        rowDataStream.print();</span><br><span class="line">        //7.执行任务</span><br><span class="line">        env.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>源码地址: <a href="https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/flink-1.12.0-Demo/src/main/java/com/shangbaishuyao/demo/FlinkDemo10/FlinkSQL02_StreamToTable_Agg.java">https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/flink-1.12.0-Demo/src/main/java/com/shangbaishuyao/demo/FlinkDemo10/FlinkSQL02_StreamToTable_Agg.java</a></p>]]></content>
    
    
    <summary type="html">&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;表到流的转换:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Append-only 流（追加流）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Retract 流（撤回流，使用聚合操作，count，sum等）&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; Upsert 流(更新流,直接更新)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;注意: 在将动态表转换为 DataStream 时，只支持 append 流和 retract 流。&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		 只有当我们对接Hbase,ES等这些外部系统的时候才会有upsert模式.&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		 注意: 聚合操作需要使用撤回流,不能使用追加流&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>Flink SQL 案例代码: 将Stream流转化成Table</title>
    <link href="http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E5%B0%86Stream%E6%B5%81%E8%BD%AC%E5%8C%96%E6%88%90Table/"/>
    <id>http://xubatian.cn/Flink-SQL-%E6%A1%88%E4%BE%8B%E4%BB%A3%E7%A0%81-%E5%B0%86Stream%E6%B5%81%E8%BD%AC%E5%8C%96%E6%88%90Table/</id>
    <published>2022-02-17T10:13:46.000Z</published>
    <updated>2022-02-17T10:26:36.966Z</updated>
    
    <content type="html"><![CDATA[<p>将流转换成表,再将表转换成流打印</p><span id="more"></span><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.demo.FlinkDemo10;</span><br><span class="line"></span><br><span class="line">import com.shangbaishuyao.demo.bean.WaterSensor;</span><br><span class="line">import org.apache.flink.api.java.tuple.Tuple2;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStream;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.SingleOutputStreamOperator;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.table.api.Table;</span><br><span class="line">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br><span class="line">import org.apache.flink.types.Row;</span><br><span class="line"></span><br><span class="line">import static org.apache.flink.table.api.Expressions.$;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Author: shangbaishuyao</span><br><span class="line"> * Date: 21:53 2021/4/23</span><br><span class="line"> * Desc: 测试Flink SQL: 由Stream流转化成Table</span><br><span class="line"> * 将流转换成表,再将表转换成流打印</span><br><span class="line"> */</span><br><span class="line">public class FlinkSQL01_StreamToTable_Test &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //1.获取流执行环境</span><br><span class="line">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        //设置并行度</span><br><span class="line">        env.setParallelism(1);</span><br><span class="line">        //2.读取端口数据创建流并装换为JavaBean</span><br><span class="line">        SingleOutputStreamOperator&lt;WaterSensor&gt; waterSensorDS = env.socketTextStream(&quot;hadoop102&quot;, 9999)</span><br><span class="line">                .map(data -&gt; &#123;</span><br><span class="line">                    String[] split = data.split(&quot;,&quot;);</span><br><span class="line">                    return new WaterSensor(split[0],</span><br><span class="line">                            Long.parseLong(split[1]),</span><br><span class="line">                            Integer.parseInt(split[2]));</span><br><span class="line">                &#125;);</span><br><span class="line"></span><br><span class="line">        //3.创建表执行环境</span><br><span class="line">//        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br><span class="line">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env);</span><br><span class="line">//        tableEnv.sqlQuery();</span><br><span class="line">        //4.将流转换为动态表</span><br><span class="line">//        Table sensorTable = tableEnv.fromDataStream(waterSensorDS);</span><br><span class="line">        Table sensorTable = tableEnv.fromDataStream(waterSensorDS);</span><br><span class="line">        //5.使用TableAPI过滤出&quot;ws_001&quot;的数据,其他字段都保留</span><br><span class="line">        //TODO Flink V1.12.0写法</span><br><span class="line">        Table selectTable = sensorTable</span><br><span class="line">                .where($(&quot;id&quot;).isEqual(&quot;ws_001&quot;)) //过滤</span><br><span class="line">                .select($(&quot;id&quot;), $(&quot;ts&quot;), $(&quot;vc&quot;)); //过滤完后你要查什么东西</span><br><span class="line">        //TODO 老版本写法.</span><br><span class="line">//        Table selectTable = sensorTable</span><br><span class="line">//                .where(&quot;id =&#x27;ws_001&#x27;&quot;)</span><br><span class="line">//                .select(&quot;id,ts,vc&quot;);</span><br><span class="line">        //6.将selectTable转换为流进行输出</span><br><span class="line">//        DataStream&lt;Row&gt; rowDataStream = tableEnv.toAppendStream(selectTable, Row.class);</span><br><span class="line">        DataStream&lt;Tuple2&lt;Boolean, Row&gt;&gt; rowDataStream = tableEnv.toRetractStream(selectTable, Row.class);//Row.class这是通用的类</span><br><span class="line">        rowDataStream.print();</span><br><span class="line">        //7.执行任务</span><br><span class="line">        env.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>代码地址: <a href="https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/flink-1.12.0-Demo/src/main/java/com/shangbaishuyao/demo/FlinkDemo10/FlinkSQL01_StreamToTable_Test.java">https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/flink-1.12.0-Demo/src/main/java/com/shangbaishuyao/demo/FlinkDemo10/FlinkSQL01_StreamToTable_Test.java</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;将流转换成表,再将表转换成流打印&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>kafka3.0.0之kafka概述</title>
    <link href="http://xubatian.cn/kafka3-0-0%E4%B9%8Bkafka%E6%A6%82%E8%BF%B0/"/>
    <id>http://xubatian.cn/kafka3-0-0%E4%B9%8Bkafka%E6%A6%82%E8%BF%B0/</id>
    <published>2022-02-17T04:53:43.000Z</published>
    <updated>2022-02-17T06:43:43.999Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217124445.png"></p><span id="more"></span><h2 id="Kafka-概述"><a href="#Kafka-概述" class="headerlink" title="Kafka 概述"></a><strong>Kafka</strong> <strong>概述</strong></h2><h3 id="kafka定义"><a href="#kafka定义" class="headerlink" title="kafka定义"></a>kafka定义</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217125929.png"></p><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><p>​            目 前企 业中比 较常 见的 消息 队列产 品主 要有 Kafka、ActiveMQ 、RabbitMQ 、RocketMQ 等。<br>​            在大数据场景主要采用 Kafka 作为消息队列。在 JavaEE 开发中主要采用 ActiveMQ、RabbitMQ、RocketMQ。</p><h3 id="传统消息队列的应用场景"><a href="#传统消息队列的应用场景" class="headerlink" title="传统消息队列的应用场景"></a>传统消息队列的应用场景</h3><p>​        传统的消息队列的主要应用场景包括：缓存/消峰、解耦和异步通信。</p><h4 id="消息队列的应用场景——缓冲-消峰"><a href="#消息队列的应用场景——缓冲-消峰" class="headerlink" title="消息队列的应用场景——缓冲/消峰"></a>消息队列的应用场景——缓冲/消峰</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130109.png"></p><h4 id="消息队列的应用场景——解耦"><a href="#消息队列的应用场景——解耦" class="headerlink" title="消息队列的应用场景——解耦"></a>消息队列的应用场景——解耦</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130150.png"></p><h4 id="消息队列的应用场景——异步通信"><a href="#消息队列的应用场景——异步通信" class="headerlink" title="消息队列的应用场景——异步通信"></a>消息队列的应用场景——异步通信</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130231.png"></p><h3 id="消息队列的两种模式-Rabbit-MQ-Active-MQ-kafka"><a href="#消息队列的两种模式-Rabbit-MQ-Active-MQ-kafka" class="headerlink" title="消息队列的两种模式(Rabbit MQ,Active MQ,kafka)"></a>消息队列的两种模式(Rabbit MQ,Active MQ,kafka)</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130446.png"></p><h3 id="Kafka-基础架构"><a href="#Kafka-基础架构" class="headerlink" title="Kafka 基础架构"></a>Kafka 基础架构</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130607.png"></p><p>100T的数据存储到一台服务器上,一台服务器一般是8-90T. 所以不能存下. 所以,遇到海量数据分而治之. 把100T数据切分成几块来处理.</p><p>​    kafka也是采用这种思想. 把100T的数据切割成几块来处理. 就是把一个主题的数据分割成多个partition分区. 100T的数据存到一个主题里面,但是因为数据太大. 我们把这个主题又分为多个分区. 即,100T的数据发往topicA主题当中, 但是我每一台服务器都无法同时存储下这100T数据. 所以我们把这100T数据切割成n份分区.每一个服务器只存储30多T的数据.(broker0,broker1,broker2代表hadoop101,102,103对应的主题名称,即三台服务器)</p><p>​    既然生产切分了,消费要并行消费才会很快. 所以就有消费者组的概念, 消费者组里面有n个消费者,每一个人负责对应的分区. 消费者组就消费你这个topic主题.这样消费就很快. <strong>一个分区的数据只能由一个消费者来消费.</strong></p><h4 id="如果一个分区挂了怎么办呢"><a href="#如果一个分区挂了怎么办呢" class="headerlink" title="如果一个分区挂了怎么办呢?"></a>如果一个分区挂了怎么办呢?</h4><p>​        考虑到可靠性,kafka可以增加副本. hadoop里面的副本是一样的.但是kafka里面的副本分为 leader和 follower.</p><p>无论是生产者和消费者,生产消费的时候只针对leader这个副本进行生产和消费. follower的作用就是,当你的leader挂掉之后,follower有条件成为新的leader.</p><h4 id="zookeeper上存了kafka的那些信息"><a href="#zookeeper上存了kafka的那些信息" class="headerlink" title="zookeeper上存了kafka的那些信息?"></a>zookeeper上存了kafka的那些信息?</h4><p>​      kafka有一部分信息存在zookeeper里面的.他帮kafka来存储整个集群中那些服务器上线了.也就是记录服务器运行的节点状态.zookeeper还会帮你记录每一个分区谁是leader. 这样后续生产和消费的时候直接找leader. Kafka2.8.0之前,kafka必须要有zookeeper进行配合使用.2.8.0之后就不是必须的了.他是可选的.</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217130719.png"></p><p>​    </p>]]></content>
    
    
    <summary type="html">&lt;p&gt;&lt;img src=&quot;https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217124445.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Kafka" scheme="http://xubatian.cn/tags/Kafka/"/>
    
  </entry>
  
  <entry>
    <title>Flink写入clickhouse案例</title>
    <link href="http://xubatian.cn/Flink%E5%86%99%E5%85%A5clickhouse%E6%A1%88%E4%BE%8B/"/>
    <id>http://xubatian.cn/Flink%E5%86%99%E5%85%A5clickhouse%E6%A1%88%E4%BE%8B/</id>
    <published>2022-02-16T17:40:56.000Z</published>
    <updated>2022-02-16T17:46:30.467Z</updated>
    
    <content type="html"><![CDATA[<p>Flink写入clickhouse案例</p><p>源码地址: </p><p><a href="https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/app/DWS/KeywordStats4ProductApp.java">https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/app/DWS/KeywordStats4ProductApp.java</a></p><p><a href="https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/utils/ClickHouseUtil.java">https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/utils/ClickHouseUtil.java</a></p><span id="more"></span><p>主程序:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.gmall.realtime.app.DWS;</span><br><span class="line"></span><br><span class="line">import com.shangbaishuyao.gmall.realtime.app.Function.KeywordUDTF;</span><br><span class="line">import com.shangbaishuyao.gmall.realtime.bean.KeywordStats;</span><br><span class="line">import com.shangbaishuyao.gmall.realtime.utils.ClickHouseUtil;</span><br><span class="line">import com.shangbaishuyao.gmall.realtime.utils.MyKafkaUtil;</span><br><span class="line">import org.apache.flink.streaming.api.datastream.DataStream;</span><br><span class="line">import org.apache.flink.streaming.api.environment.StreamExecutionEnvironment;</span><br><span class="line">import org.apache.flink.table.api.EnvironmentSettings;</span><br><span class="line">import org.apache.flink.table.api.Table;</span><br><span class="line">import org.apache.flink.table.api.bridge.java.StreamTableEnvironment;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Author: shangbaishuyao</span><br><span class="line"> * Date: 2021/3/1</span><br><span class="line"> * Desc:  从商品统计中获取关键词</span><br><span class="line"> */</span><br><span class="line">public class KeywordStats4ProductApp &#123;</span><br><span class="line">    public static void main(String[] args) throws Exception &#123;</span><br><span class="line">        //TODO 0.基本环境准备</span><br><span class="line">        StreamExecutionEnvironment env = StreamExecutionEnvironment.getExecutionEnvironment();</span><br><span class="line">        //设置并行度</span><br><span class="line">        env.setParallelism(4);</span><br><span class="line">        /*</span><br><span class="line">        //CK相关设置</span><br><span class="line">        env.enableCheckpointing(5000, CheckpointingMode.AT_LEAST_ONCE);</span><br><span class="line">        env.getCheckpointConfig().setCheckpointTimeout(60000);</span><br><span class="line">        StateBackend fsStateBackend = new FsStateBackend(</span><br><span class="line">                &quot;hdfs://hadoop202:8020/gmall/flink/checkpoint/ProvinceStatsSqlApp&quot;);</span><br><span class="line">        env.setStateBackend(fsStateBackend);</span><br><span class="line">        System.setProperty(&quot;HADOOP_USER_NAME&quot;,&quot;shangbaishuyao&quot;);</span><br><span class="line">        */</span><br><span class="line">        //TODO 1.定义Table流环境</span><br><span class="line">        EnvironmentSettings settings = EnvironmentSettings</span><br><span class="line">            .newInstance()</span><br><span class="line">            .inStreamingMode()</span><br><span class="line">            .build();</span><br><span class="line"></span><br><span class="line">        StreamTableEnvironment tableEnv = StreamTableEnvironment.create(env, settings);</span><br><span class="line"></span><br><span class="line">        //TODO 2.注册自定义函数</span><br><span class="line">        tableEnv.createTemporarySystemFunction(&quot;ik_analyze&quot;,  KeywordUDTF.class);</span><br><span class="line">        tableEnv.createTemporarySystemFunction(&quot;keywordProductC2R&quot;,  KeywordProductC2RUDTF.class);</span><br><span class="line"></span><br><span class="line">        //TODO 3.将数据源定义为动态表</span><br><span class="line">        String groupId = &quot;keyword_stats_app&quot;;</span><br><span class="line">        String productStatsSourceTopic =&quot;dws_product_stats&quot;;</span><br><span class="line"></span><br><span class="line">        tableEnv.executeSql(&quot;CREATE TABLE product_stats (spu_name STRING, &quot; +</span><br><span class="line">            &quot;click_ct BIGINT,&quot; +</span><br><span class="line">            &quot;cart_ct BIGINT,&quot; +</span><br><span class="line">            &quot;order_ct BIGINT ,&quot; +</span><br><span class="line">            &quot;stt STRING,edt STRING ) &quot; +</span><br><span class="line">            &quot;  WITH (&quot;+ MyKafkaUtil.getKafkaDDL(productStatsSourceTopic,groupId)+&quot;)&quot;);</span><br><span class="line"></span><br><span class="line">        //TODO 6.聚合计数</span><br><span class="line">        Table keywordStatsProduct = tableEnv.sqlQuery(&quot;select keyword,ct,source, &quot; +</span><br><span class="line">            &quot;DATE_FORMAT(stt,&#x27;yyyy-MM-dd HH:mm:ss&#x27;)  stt,&quot; +</span><br><span class="line">            &quot;DATE_FORMAT(edt,&#x27;yyyy-MM-dd HH:mm:ss&#x27;) as edt, &quot; +</span><br><span class="line">            &quot;UNIX_TIMESTAMP()*1000 ts from product_stats  , &quot; +</span><br><span class="line">            &quot;LATERAL TABLE(ik_analyze(spu_name)) as T(keyword) ,&quot; +</span><br><span class="line">            &quot;LATERAL TABLE(keywordProductC2R( click_ct ,cart_ct,order_ct)) as T2(ct,source)&quot;);</span><br><span class="line"></span><br><span class="line">        //TODO 7.转换为数据流</span><br><span class="line">        DataStream&lt;KeywordStats&gt; keywordStatsProductDataStream =</span><br><span class="line">            tableEnv.&lt;KeywordStats&gt;toAppendStream(keywordStatsProduct, KeywordStats.class);</span><br><span class="line"></span><br><span class="line">        keywordStatsProductDataStream.print();</span><br><span class="line">        //TODO 8.写入到ClickHouse</span><br><span class="line">        keywordStatsProductDataStream.addSink(</span><br><span class="line">            ClickHouseUtil.&lt;KeywordStats&gt;getJdbcSink(</span><br><span class="line">                &quot;insert into keyword_stats(keyword,ct,source,stt,edt,ts) values(?,?,?,?,?,?)&quot;</span><br><span class="line">            )</span><br><span class="line">        );</span><br><span class="line">        env.execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>clickhouse工具类:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line">package com.shangbaishuyao.gmall.realtime.utils;</span><br><span class="line"></span><br><span class="line">import com.shangbaishuyao.gmall.realtime.bean.TransientSink;</span><br><span class="line">import com.shangbaishuyao.gmall.realtime.common.GmallConfig;</span><br><span class="line">import org.apache.flink.connector.jdbc.JdbcConnectionOptions;</span><br><span class="line">import org.apache.flink.connector.jdbc.JdbcExecutionOptions;</span><br><span class="line">import org.apache.flink.connector.jdbc.JdbcSink;</span><br><span class="line">import org.apache.flink.connector.jdbc.JdbcStatementBuilder;</span><br><span class="line">import org.apache.flink.streaming.api.functions.sink.SinkFunction;</span><br><span class="line"></span><br><span class="line">import java.lang.reflect.Field;</span><br><span class="line">import java.sql.PreparedStatement;</span><br><span class="line">import java.sql.SQLException;</span><br><span class="line"></span><br><span class="line">/**</span><br><span class="line"> * Author: 上白书妖</span><br><span class="line"> * Date: 2021/2/23</span><br><span class="line"> * Desc: 操作ClickHouse的工具类</span><br><span class="line"> *</span><br><span class="line"> * 其中flink-connector-jdbc 是官方通用的jdbcSink包。</span><br><span class="line"> * 只要引入对应的jdbc驱动，flink可以用它应对各种支持jdbc的数据库，</span><br><span class="line"> * 比如phoenix也可以用它。但是这个jdbc-sink只支持数据流对应一张数据表。</span><br><span class="line"> * 如果是一流对多表，就必须通过自定义的方式实现了，比如之前的维度数据。</span><br><span class="line"> * 虽然这种jdbc-sink只能一流对一表，但是由于内部使用了预编译器，</span><br><span class="line"> * 所以可以实现批量提交以优化写入速度。</span><br><span class="line"> *</span><br><span class="line"> * A.JdbcSink.&lt;T&gt;sink( )的四个参数说明</span><br><span class="line"> * 参数1： 传入Sql，格式如：insert into xxx values(?,?,?,?)</span><br><span class="line"> * 参数2:  可以用lambda表达实现(jdbcPreparedStatement, t) -&gt; t为数据对象，要装配到语句预编译器的参数中。</span><br><span class="line"> * 参数3：设定一些执行参数，比如重试次数，批次大小。</span><br><span class="line"> * 参数4：设定连接参数，比如地址，端口，驱动名。</span><br><span class="line"> */</span><br><span class="line">public class ClickHouseUtil &#123;</span><br><span class="line">    /**</span><br><span class="line">     * 获取向Clickhouse中写入数据的SinkFunction</span><br><span class="line">     *</span><br><span class="line">     * @param sql</span><br><span class="line">     * @param &lt;T&gt;</span><br><span class="line">     * @return</span><br><span class="line">     */</span><br><span class="line">    public static &lt;T&gt; SinkFunction getJdbcSink(String sql) &#123;</span><br><span class="line">        SinkFunction&lt;T&gt; sinkFunction = JdbcSink.&lt;T&gt;sink(</span><br><span class="line">            //要执行的SQL语句</span><br><span class="line">            sql,</span><br><span class="line">            //执行写入操作   就是将当前流中的对象属性赋值给SQL的占位符 insert into visitor_stats values(?,?,?,?,?,?,?,?,?,?,?,?)</span><br><span class="line">            new JdbcStatementBuilder&lt;T&gt;() &#123;</span><br><span class="line">                //obj  就是流中的一条数据对象</span><br><span class="line">                //我要想实现通用型的话,这个当前流的类型就不能固定,只能使用泛型.T. 可以用反射拿到属性.</span><br><span class="line">                @Override</span><br><span class="line">                public void accept(PreparedStatement ps, T obj) throws SQLException &#123;</span><br><span class="line">                    //insert into visitor_stats values(?,?,?,?,?,?,?,?,?,?,?,?)</span><br><span class="line">                    //获取当前类中  所有的属性</span><br><span class="line">                    Field[] fields = obj.getClass().getDeclaredFields();//这个可以获取私有的.</span><br><span class="line">                    //跳过的属性计数    insert into visitor_stats values(?,?,?,?,跳过,?,?,?,?,?,?,?)</span><br><span class="line">                    int skipOffset = 0;</span><br><span class="line"></span><br><span class="line">                    for (int i = 0; i &lt; fields.length; i++) &#123;</span><br><span class="line">                        Field field = fields[i];</span><br><span class="line">                        //通过属性对象获取属性上是否有@TransientSink注解</span><br><span class="line">                        TransientSink transientSink = field.getAnnotation(TransientSink.class);</span><br><span class="line">                        //如果transientSink不为空，说明属性上有@TransientSink标记，那么在给?占位符赋值的时候，应该跳过当前属性</span><br><span class="line">                        if (transientSink != null) &#123;</span><br><span class="line">                            skipOffset++;</span><br><span class="line">                            continue;</span><br><span class="line">                        &#125;</span><br><span class="line">                        //设置私有属性可访问</span><br><span class="line">                        field.setAccessible(true);</span><br><span class="line">                        try &#123;</span><br><span class="line">                            //获取属性值</span><br><span class="line">                            Object o = field.get(obj);</span><br><span class="line">                            ps.setObject(i + 1 - skipOffset, o);</span><br><span class="line">                        &#125; catch (IllegalAccessException e) &#123;</span><br><span class="line">                            e.printStackTrace();</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            //构建者设计模式，创建JdbcExecutionOptions对象，给batchSize属性赋值，执行执行批次大小</span><br><span class="line">            new JdbcExecutionOptions.Builder().withBatchSize(5).build(),</span><br><span class="line">            //构建者设计模式，JdbcConnectionOptions，给连接相关的属性进行赋值</span><br><span class="line">            new JdbcConnectionOptions.JdbcConnectionOptionsBuilder()</span><br><span class="line">                .withUrl(GmallConfig.CLICKHOUSE_URL)</span><br><span class="line">                .withDriverName(&quot;ru.yandex.clickhouse.ClickHouseDriver&quot;)</span><br><span class="line">                .build()</span><br><span class="line">        );</span><br><span class="line">        return sinkFunction;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Flink写入clickhouse案例&lt;/p&gt;
&lt;p&gt;源码地址: &lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/app/DWS/KeywordStats4ProductApp.java&quot;&gt;https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/app/DWS/KeywordStats4ProductApp.java&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/utils/ClickHouseUtil.java&quot;&gt;https://github.com/ShangBaiShuYao/flink-learning-from-zhisheng/blob/main/Flink-shangbaishuyao-RTDW-gmall-realtime/src/main/java/com/shangbaishuyao/gmall/realtime/utils/ClickHouseUtil.java&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
    <category term="clickhouse" scheme="http://xubatian.cn/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse的副本和分片集群</title>
    <link href="http://xubatian.cn/ClickHouse%E7%9A%84%E5%89%AF%E6%9C%AC%E5%92%8C%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/"/>
    <id>http://xubatian.cn/ClickHouse%E7%9A%84%E5%89%AF%E6%9C%AC%E5%92%8C%E5%88%86%E7%89%87%E9%9B%86%E7%BE%A4/</id>
    <published>2022-02-16T17:25:15.000Z</published>
    <updated>2022-02-16T17:32:26.811Z</updated>
    
    <content type="html"><![CDATA[<h3 id="副本"><a href="#副本" class="headerlink" title="副本"></a>副本</h3><p>​        副本的目的主要是保障数据的高可用性，即使一台ClickHouse节点宕机，那么也可以从其他服务器获得相同的数据。<br>高可用: 包括数据的高可用 , 服务的高可用(HA)</p><h4 id="副本写入流程"><a href="#副本写入流程" class="headerlink" title="副本写入流程"></a>副本写入流程</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012620.png"></p><span id="more"></span><p><strong>副本只能同步数据，不能同步表结构，所以我们需要在每台机器上自己手动建表</strong></p><p>建表语句案例:</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012717.png"></p><p><strong>参数解释</strong><br>ReplicatedMergeTree 中，<br>第一个参数是分片的zk_path一般按照： /clickhouse/table/{shard}/{table_name} 的格式写，如果只有一个分片就写01即可。<br>第二个参数是副本名称，相同的分片副本名称不能相同。</p><h3 id="分片集群"><a href="#分片集群" class="headerlink" title="分片集群"></a>分片集群</h3><p>​        <strong>副本虽然能够提高数据的可用性，降低丢失风险，但是每台服务器实际上必须容纳全量数据，对数据的横向扩容没有解决。</strong><br>​        要解决数据水平切分的问题，需要引入分片的概念。通过分片把一份完整的数据进行切分，不同的分片分布到不同的节点上，再通过Distributed表引擎把数据拼接起来一同使用。<br>​        Distributed表引擎本身不存储数据，有点类似于MyCat之于MySql，成为一种中间件，通过分布式逻辑表来写入、分发、路由来操作多台节点不同分片的分布式数据。<br><strong>注意：ClickHouse的集群是表级别的，实际企业中，大部分做了高可用，但是没有用分片，避免降低查询性能以及操作集群的复杂性。</strong></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012912.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012932.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012940.png"></p><h4 id="集群写入流程（3分片2副本共6个节点）"><a href="#集群写入流程（3分片2副本共6个节点）" class="headerlink" title="集群写入流程（3分片2副本共6个节点）"></a>集群写入流程（3分片2副本共6个节点）</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217013014.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217013035.png"></p><h4 id="集群读取流程（3分片2副本共6个节点）"><a href="#集群读取流程（3分片2副本共6个节点）" class="headerlink" title="集群读取流程（3分片2副本共6个节点）"></a>集群读取流程（3分片2副本共6个节点）</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217013054.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217013117.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;副本&quot;&gt;&lt;a href=&quot;#副本&quot; class=&quot;headerlink&quot; title=&quot;副本&quot;&gt;&lt;/a&gt;副本&lt;/h3&gt;&lt;p&gt;​        副本的目的主要是保障数据的高可用性，即使一台ClickHouse节点宕机，那么也可以从其他服务器获得相同的数据。&lt;br&gt;高可用: 包括数据的高可用 , 服务的高可用(HA)&lt;/p&gt;
&lt;h4 id=&quot;副本写入流程&quot;&gt;&lt;a href=&quot;#副本写入流程&quot; class=&quot;headerlink&quot; title=&quot;副本写入流程&quot;&gt;&lt;/a&gt;副本写入流程&lt;/h4&gt;&lt;p&gt;&lt;img src=&quot;https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217012620.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="clickhouse" scheme="http://xubatian.cn/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse表引擎</title>
    <link href="http://xubatian.cn/ClickHouse%E8%A1%A8%E5%BC%95%E6%93%8E/"/>
    <id>http://xubatian.cn/ClickHouse%E8%A1%A8%E5%BC%95%E6%93%8E/</id>
    <published>2022-02-16T16:46:52.000Z</published>
    <updated>2022-02-16T17:20:05.097Z</updated>
    
    <content type="html"><![CDATA[<h3 id="表引擎的使用"><a href="#表引擎的使用" class="headerlink" title="表引擎的使用"></a>表引擎的使用</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004854.png"></p><span id="more"></span><h3 id="TinyLog"><a href="#TinyLog" class="headerlink" title="TinyLog"></a>TinyLog</h3><p>​            以列文件的形式保存在磁盘上，不支持索引，没有并发控制。一般保存少量数据的小表，生产环境上作用有限。可以用于<strong>平时练习测试</strong>用。如：</p><pre><code>create table t_tinylog ( id String, name String) engine=TinyLog;</code></pre><h3 id="Memory"><a href="#Memory" class="headerlink" title="Memory"></a>Memory</h3><p>​            内存引擎，数据以未压缩的原始形式直接保存在内存当中，服务器重启数据就会消失。读写操作不会相互阻塞，不支持索引。简单查询下有非常非常高的性能表现（超过10G/s）。<br>​            一般用到它的地方不多，除了用来测试，就是在需要非常高的性能，同时数据量又不太大（上限大概 1 亿行）的场景。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">数据保存在内存中,但是内存数据不稳定,一旦服务器重启,数据消失.除非你对查询的性能有非常高的要求.但是这种情况很少.</span><br></pre></td></tr></table></figure><h3 id="MergeTree-最强大的表引擎"><a href="#MergeTree-最强大的表引擎" class="headerlink" title="MergeTree(最强大的表引擎)"></a>MergeTree(最强大的表引擎)</h3><p>​            <strong>ClickHouse中最强大的表引擎当属MergeTree（合并树）引擎及该系列（MergeTree）中的其他引擎，支持索引和分区， 地位可以相当于innodb之于Mysql</strong>。 而且基于MergeTree，还衍生除了很多小弟，也是非常有特色的引擎。</p><p><strong>建表语句</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table t_order_mt(</span><br><span class="line">    id UInt32,</span><br><span class="line">    sku_id String,</span><br><span class="line">    total_amount Decimal(16,2),</span><br><span class="line">    create_time  Datetime                      </span><br><span class="line"> ) engine =MergeTree</span><br><span class="line">   partition by toYYYYMMDD(create_time)      </span><br><span class="line">   primary key (id)</span><br><span class="line">   order by (id,sku_id);</span><br></pre></td></tr></table></figure><p><strong>Partition</strong>:  分区,假如我Datetime设置的是2020-12-12 12:12 但是我的分区是按照2020-12-12来分区的转换成年月日的形式.<br><strong>primary key</strong>:  主键,以前的主键是数据看看表中字段的唯一标记. 现在在clickhouse中主键没有唯一标记.它主要做的就是提升我们的查询效率.他其实就是为了建我们的查询索引的.<br><strong>order by</strong>:  排序,在clickhouse中,order by不仅仅是排序,去重等也是依靠order by来做的</p><p><strong>插入数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_mt values</span><br><span class="line">(101,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-01 12:00:00&#x27;) ,</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 11:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_004&#x27;,2500.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,12000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,600.00,&#x27;2020-06-02 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><p><strong>MergeTree其实还有很多参数(绝大多数用默认值即可)，但是三个参数是更加重要的，也涉及了关于MergeTree的很多概念。</strong></p><h4 id="partition-by-分区-（可选项-不填的话数据在一个分区）"><a href="#partition-by-分区-（可选项-不填的话数据在一个分区）" class="headerlink" title="partition by 分区 （可选项,不填的话数据在一个分区）"></a>partition by 分区 （可选项,不填的话数据在一个分区）</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005428.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005448.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005514.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">optimize table xxxx final;</span><br></pre></td></tr></table></figure><p>Ø 例如</p><p>再次执行上面的插入操作</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_mt values</span><br><span class="line">(101,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-01 12:00:00&#x27;) ,</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 11:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_004&#x27;,2500.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,12000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,600.00,&#x27;2020-06-02 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><p>查看数据并没有纳入任何分区</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005604.png"></p><p>看到分成了四块,按照create_time分区.</p><p>手动optimize之后</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) optimize table t_order_mt final;</span><br></pre></td></tr></table></figure><p>再次查询</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005655.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005736.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">插入数据不会立马合并,要不然就是你插入的数据量足够大,要不然就是你插入的数据时间足够长,要不然就是你手动合并.</span><br></pre></td></tr></table></figure><h4 id="primary-key主键-可选"><a href="#primary-key主键-可选" class="headerlink" title="primary key主键(可选)"></a>primary key主键(可选)</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005829.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005847.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005857.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005917.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217005939.png"></p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010017.png" style="zoom:200%;" /><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010059.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">稀疏索引的好处就是可以用很少的索引数据，定位更多的数据，代价就是只能定位到索引粒度的第一行，然后再进行进行一点扫描。</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010125.png"></p><h4 id="order-by（必选-作用-分区内排序）"><a href="#order-by（必选-作用-分区内排序）" class="headerlink" title="order by（必选,作用:分区内排序）"></a>order by（必选,作用:分区内排序）</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010152.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010213.png"></p><h3 id="二级索引"><a href="#二级索引" class="headerlink" title="二级索引"></a>二级索引</h3><p>​        目前在ClickHouse的官网上二级索引的功能是被标注为实验性的。即不稳定,还有很大的发展空间.</p><h4 id="1-使用二级索引前需要增加设置"><a href="#1-使用二级索引前需要增加设置" class="headerlink" title="(1)使用二级索引前需要增加设置"></a>(1)使用二级索引前需要增加设置</h4><p>是否允许使用实验性的二级索引,开启二级索引:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">set allow_experimental_data_skipping_indices=1;</span><br></pre></td></tr></table></figure><h4 id="2-创建测试表"><a href="#2-创建测试表" class="headerlink" title="(2)创建测试表"></a>(2)创建测试表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">create table t_order_mt2(</span><br><span class="line">    id UInt32,</span><br><span class="line">    sku_id String,</span><br><span class="line">    total_amount Decimal(16,2),</span><br><span class="line">    create_time  Datetime,</span><br><span class="line">INDEX a total_amount TYPE minmax GRANULARITY 5</span><br><span class="line"> ) engine =MergeTree</span><br><span class="line">   partition by toYYYYMMDD(create_time)</span><br><span class="line">   primary key (id)</span><br><span class="line">   order by (id, sku_id);</span><br></pre></td></tr></table></figure><p>其中<strong>GRANULARITY N</strong> 是设定二级索引对于一级索引粒度的粒度。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010335.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010442.png"><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010500.png"></p><h4 id="3-插入数据"><a href="#3-插入数据" class="headerlink" title="(3)插入数据"></a>(3)插入数据</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_mt2 values</span><br><span class="line">(101,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-01 12:00:00&#x27;) ,</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 11:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_004&#x27;,2500.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,12000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,600.00,&#x27;2020-06-02 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><h4 id="4-对比效果"><a href="#4-对比效果" class="headerlink" title="(4)对比效果"></a>(4)对比效果</h4><p>那么在使用下面语句进行测试，可以看出二级索引能够为非主键字段的查询发挥作用。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[shangbaishuyao@hadoop202 lib]$ clickhouse-client  --send_logs_level=trace &lt;&lt;&lt; &#x27;select * from t_order_mt2  where total_amount &gt; toDecimal32(900., 2)&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010727.png"></p><h3 id="数据TTL"><a href="#数据TTL" class="headerlink" title="数据TTL"></a>数据TTL</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010904.png"></p><h4 id="1-列级别TTL（执行整个列的失效时间）"><a href="#1-列级别TTL（执行整个列的失效时间）" class="headerlink" title="(1)列级别TTL（执行整个列的失效时间）"></a>(1)列级别TTL（执行整个列的失效时间）</h4><p><strong>创建测试表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table t_order_mt3(</span><br><span class="line">    id UInt32,</span><br><span class="line">    sku_id String,</span><br><span class="line">    total_amount Decimal(16,2)  TTL create_time+interval 10 SECOND, //表示当前这一列数值的存活时间.就是在你创建</span><br><span class="line">    create_time  Datetime                                           //时间过了十秒之后,这一列数据就失效了</span><br><span class="line"> ) engine =MergeTree</span><br><span class="line"> partition by toYYYYMMDD(create_time)</span><br><span class="line">   primary key (id)</span><br><span class="line">   order by (id, sku_id);</span><br></pre></td></tr></table></figure><p><strong>插入数据</strong>（注意：根据实际时间改变）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_mt3 values</span><br><span class="line">(106,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-12 22:52:30&#x27;),</span><br><span class="line">(107,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-12 22:52:30&#x27;),</span><br><span class="line">(110,&#x27;sku_003&#x27;,600.00,&#x27;2020-06-13 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><p><strong>手动合并，查看效果  到期后，指定的字段数据归0</strong></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011106.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217010933.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">其实这个TTL这个手动合并，其实不是帮你解决业务上的合并的。 其实他是从本身优化的角度来考虑的。 比如： 加入我有些数据，数据量比较大， 但是这些数据我执行完成后就不需要了， 那我可以设置一个失效时间。 在长时间后数据失效。 设置完失效时间后，虽然不能到了指定时间后，马上将这个字段重置为0. 但是他会过一段时间后，后台看到这个标记，后台会自动帮你进行合并。这样就相当于把空间释放掉了。这是Clickhouse自己做的一个优化。</span><br></pre></td></tr></table></figure><h4 id="2-表级TTL（指定整个表的失效时间）"><a href="#2-表级TTL（指定整个表的失效时间）" class="headerlink" title="(2)表级TTL（指定整个表的失效时间）"></a>(2)表级TTL（指定整个表的失效时间）</h4><p>下面的这条语句是数据会在create_time 之后10秒丢失</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table t_order_mt3 MODIFY TTL create_time + INTERVAL 10 SECOND;</span><br></pre></td></tr></table></figure><p>涉及判断的字段必须是Date或者Datetime类型，推荐使用分区的日期字段。<br>能够使用的时间周期：</p><ul><li>SECOND</li><li>MINUTE</li><li>HOUR</li><li>DAY</li><li>WEEK</li><li>MONTH</li><li>QUARTER</li><li>YEAR </li></ul><h2 id="ReplacingMergeTree"><a href="#ReplacingMergeTree" class="headerlink" title="ReplacingMergeTree"></a>ReplacingMergeTree</h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011322.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">去重不是业务上的去重,而是Clickhouse本身为了去优化做的去重.所以说,clickhouse是可以去重,但是什么时间去重,我们不确定. 所以说你给Clickhouse的数据应该是在你在前台已经去重的数据这更合适</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011346.png"></p><p><strong>案例演示</strong></p><p><strong>创建表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table t_order_rmt(</span><br><span class="line">    id UInt32,</span><br><span class="line">    sku_id String,</span><br><span class="line">    total_amount Decimal(16,2) ,</span><br><span class="line">    create_time  Datetime </span><br><span class="line"> ) engine =ReplacingMergeTree(create_time)</span><br><span class="line">   partition by toYYYYMMDD(create_time)</span><br><span class="line">   primary key (id)</span><br><span class="line">   order by (id, sku_id);</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011431.png"></p><p><strong>向表中插入数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_rmt values</span><br><span class="line">(101,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-01 12:00:00&#x27;) ,</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 11:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_004&#x27;,2500.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,12000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,600.00,&#x27;2020-06-02 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><p><strong>执行第一次查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) select * from t_order_rmt;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011516.png"></p><p><strong>手动合并</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OPTIMIZE TABLE t_order_rmt FINAL;</span><br></pre></td></tr></table></figure><p><strong>再执行一次查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) select * from t_order_rmt;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011601.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011624.png"></p><h2 id="SummingMergeTree-提供预聚合的作用"><a href="#SummingMergeTree-提供预聚合的作用" class="headerlink" title="SummingMergeTree(提供预聚合的作用)"></a>SummingMergeTree(提供预聚合的作用)</h2><pre><code>    对于不查询明细，只关心以维度进行汇总聚合结果的场景。如果只使用普通的MergeTree的话，无论是存储空间的开销，还是查询时临时聚合的开销都比较大。    ClickHouse 为了这种场景，提供了一种能够“预聚合”的引擎SummingMergeTree</code></pre><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011728.png"></p><p><strong>案例演示</strong></p><p><strong>创建表</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">create table t_order_smt(</span><br><span class="line">    id UInt32,</span><br><span class="line">    sku_id String,</span><br><span class="line">    total_amount Decimal(16,2) ,</span><br><span class="line">    create_time  Datetime </span><br><span class="line"> ) engine =SummingMergeTree(total_amount)</span><br><span class="line">   partition by toYYYYMMDD(create_time)</span><br><span class="line">   primary key (id)</span><br><span class="line">   order by (id,sku_id );</span><br></pre></td></tr></table></figure><p><strong>插入数据</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">insert into  t_order_smt values</span><br><span class="line">(101,&#x27;sku_001&#x27;,1000.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 11:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_004&#x27;,2500.00,&#x27;2020-06-01 12:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,2000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,12000.00,&#x27;2020-06-01 13:00:00&#x27;),</span><br><span class="line">(102,&#x27;sku_002&#x27;,600.00,&#x27;2020-06-02 12:00:00&#x27;);</span><br></pre></td></tr></table></figure><p><strong>执行第一次查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) select * from t_order_smt;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011833.png"></p><p><strong>手动合并</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OPTIMIZE TABLE t_order_smt FINAL;</span><br></pre></td></tr></table></figure><p><strong>再执行一次查询</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) select * from t_order_smt;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011907.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217011935.png"></p>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;表引擎的使用&quot;&gt;&lt;a href=&quot;#表引擎的使用&quot; class=&quot;headerlink&quot; title=&quot;表引擎的使用&quot;&gt;&lt;/a&gt;表引擎的使用&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004854.png&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="clickhouse" scheme="http://xubatian.cn/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse数据类型</title>
    <link href="http://xubatian.cn/ClickHouse%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/"/>
    <id>http://xubatian.cn/ClickHouse%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/</id>
    <published>2022-02-16T16:34:28.000Z</published>
    <updated>2022-02-16T16:46:30.504Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="https://clickhouse.yandex/docs/zh/data_types/">https://clickhouse.yandex/docs/zh/data_types/</a></p><h3 id="整型-主要用到"><a href="#整型-主要用到" class="headerlink" title="整型(主要用到)"></a>整型(主要用到)</h3><p>固定长度的整型，包括有符号整型或无符号整型。</p><p>整型范围（-2n-1~2n-1-1）：</p><p>Int8 - [-128 : 127]</p><p>Int16 - [-32768 : 32767]</p><p>Int32 - [-2147483648 : 2147483647]</p><p>Int64 - [-9223372036854775808 : 9223372036854775807]</p><span id="more"></span><p>无符号整型范围（0~2n-1）：</p><p>UInt8 - [0 : 255]</p><p>UInt16 - [0 : 65535]</p><p>UInt32 - [0 : 4294967295]</p><p>UInt64 - [0 : 18446744073709551615]</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用场景： 个数、数量、也可以存储型id</span><br></pre></td></tr></table></figure><h3 id="浮点型"><a href="#浮点型" class="headerlink" title="浮点型"></a>浮点型</h3><p>Float32 - float</p><p>Float64 – double</p><p>建议尽可能以整数形式存储数据。例如，将固定精度的数字转换为整数值，如时间用毫秒为单位表示，因为浮点型进行计算时可能引起四舍五入的误差。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217003813.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用场景：一般数据值比较小，不涉及大量的统计计算，精度要求不高的时候。比如保存商品的重量。</span><br></pre></td></tr></table></figure><h3 id="布尔型"><a href="#布尔型" class="headerlink" title="布尔型"></a>布尔型</h3><p>​        没有单独的类型来存储布尔值。可以使用 UInt8 类型，取值限制为 0 或 1。</p><h3 id="Decimal-型-主要用到-对精度要求高用Decimal"><a href="#Decimal-型-主要用到-对精度要求高用Decimal" class="headerlink" title="Decimal 型((主要用到)对精度要求高用Decimal)"></a>Decimal 型((主要用到)对精度要求高用Decimal)</h3><p>​        有符号的浮点数，可在加、减和乘法运算过程中保持精度。对于除法，最低有效数字会被丢弃（不舍入）。        </p><p>有三种声明：(32,64,128表示分配的空间大小)(表示有效位数是9,s是小数位)</p><ul><li>​            Decimal32(s)，相当于Decimal(9-s,s)，有效位数为1~9</li><li>​            Decimal64(s)，相当于Decimal(18-s,s)，有效位数为1~18</li><li>​            Decimal128(s)，相当于Decimal(38-s,s)，有效位数为1~38</li></ul><p>s标识小数位</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用场景： 一般金额字段、汇率、利率等字段为了保证小数点精度，都使用Decimal进行存储。</span><br></pre></td></tr></table></figure><h3 id="字符串"><a href="#字符串" class="headerlink" title="字符串"></a>字符串</h3><ul><li><p>​    String</p><p>​        字符串可以任意长度的。它可以包含任意的字节集，包含空字节。</p></li><li><p>​    FixedString(N)</p></li></ul><p>​                固定长度 N 的字符串，N 必须是严格的正自然数。当服务端读取长度小于 N 的字符串时候，通过在字符串末尾添加空字节来达到 N 字节长度。 当服务端读取长度大于 N 的字符串时候，将返回错误消息。<br>​          与String相比，极少会使用FixedString，因为使用起来不是很方便。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用场景：名称、文字描述、字符型编码。 固定长度的可以保存一些定长的内容，比如一些编码，性别等但是考虑到一定的变化风险，带来收益不够明显，所以定长字符串使用意义有限。</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004107.png"></p><h3 id="枚举类型-枚举-一个类它创建对象的个数是固定的叫枚举-比如季节-星期"><a href="#枚举类型-枚举-一个类它创建对象的个数是固定的叫枚举-比如季节-星期" class="headerlink" title="枚举类型(枚举: 一个类它创建对象的个数是固定的叫枚举,比如季节,星期)"></a>枚举类型(枚举: 一个类它创建对象的个数是固定的叫枚举,比如季节,星期)</h3><p>包括 Enum8 和 Enum16 类型。Enum 保存 ‘string’= integer 的对应关系。</p><p>Enum8 用 ‘String’= Int8 对描述。</p><p>Enum16 用 ‘String’= Int16 对描述。</p><p><strong>用法演示</strong></p><p>创建一个带有一个枚举 Enum8(‘hello’ = 1, ‘world’ = 2) 类型的列</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">CREATE TABLE t_enum</span><br><span class="line">(</span><br><span class="line">    x Enum8(&#x27;hello&#x27; = 1, &#x27;world&#x27; = 2)</span><br><span class="line">)</span><br><span class="line">ENGINE = TinyLog;  //这个是引擎</span><br></pre></td></tr></table></figure><p>这个 x 列只能存储类型定义中列出的值：’hello’或’world’</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) INSERT INTO t_enum VALUES (&#x27;hello&#x27;), (&#x27;world&#x27;), (&#x27;hello&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004225.png"></p><p>如果尝试保存任何其他值，ClickHouse 抛出异常</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) insert into t_enum values(&#x27;a&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004247.png"></p><p>如果需要看到对应行的数值，则必须将 Enum 值转换为整数类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hadoop202 :) SELECT CAST(x, &#x27;Int8&#x27;) FROM t_enum;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004318.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">使用场景：对一些状态、类型的字段算是一种空间优化，也算是一种数据约束。但是实际使用中往往因为一些数据内容的变化增加一定的维护成本，甚至是数据丢失问题。所以谨慎使用。</span><br></pre></td></tr></table></figure><h3 id="时间类型-主要用到"><a href="#时间类型-主要用到" class="headerlink" title="时间类型(主要用到)"></a>时间类型(主要用到)</h3><p><strong>目前ClickHouse 有三种时间类型</strong><br>    Date接受年-月-日的字符串比如 ‘2019-12-16’<br>    Datetime接受年-月-日 时:分:秒的字符串比如 ‘2019-12-16 20:50:10’<br>    Datetime64接受年-月-日 时:分:秒.亚秒的字符串比如‘2019-12-16 20:50:10.66’</p><p>日期类型，用两个字节存储，表示从 1970-01-01 (无符号) 到当前的日期值。</p><p>还有很多数据结构，可以参考官方文档：<a href="https://clickhouse.yandex/docs/zh/data_types/">https://clickhouse.yandex/docs/zh/data_types/</a></p><h3 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h3><p>​        Array(T)：由 T 类型元素组成的数组。<br>​        T 可以是任意类型，包含数组类型。 但不推荐使用多维数组，ClickHouse 对多维数组的支持有限。例如，不能在MergeTree表中存储多维数组。<br><strong>创建数组方式1，使用array函数</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">array(T)</span><br><span class="line">hadoop202 :) SELECT array(1, 2) AS x, toTypeName(x) ;</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004531.png"></p><p><strong>创建数组方式2：使用方括号</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[]</span><br><span class="line">hadoop202 :) SELECT [1, 2] AS x, toTypeName(x);</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217004600.png"></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;官方文档：&lt;a href=&quot;https://clickhouse.yandex/docs/zh/data_types/&quot;&gt;https://clickhouse.yandex/docs/zh/data_types/&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;整型-主要用到&quot;&gt;&lt;a href=&quot;#整型-主要用到&quot; class=&quot;headerlink&quot; title=&quot;整型(主要用到)&quot;&gt;&lt;/a&gt;整型(主要用到)&lt;/h3&gt;&lt;p&gt;固定长度的整型，包括有符号整型或无符号整型。&lt;/p&gt;
&lt;p&gt;整型范围（-2n-1~2n-1-1）：&lt;/p&gt;
&lt;p&gt;Int8 - [-128 : 127]&lt;/p&gt;
&lt;p&gt;Int16 - [-32768 : 32767]&lt;/p&gt;
&lt;p&gt;Int32 - [-2147483648 : 2147483647]&lt;/p&gt;
&lt;p&gt;Int64 - [-9223372036854775808 : 9223372036854775807]&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="clickhouse" scheme="http://xubatian.cn/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>ClickHouse入门</title>
    <link href="http://xubatian.cn/ClickHouse%E5%85%A5%E9%97%A8/"/>
    <id>http://xubatian.cn/ClickHouse%E5%85%A5%E9%97%A8/</id>
    <published>2022-02-16T16:19:36.000Z</published>
    <updated>2022-02-16T16:44:32.002Z</updated>
    
    <content type="html"><![CDATA[<h1 id="ClickHouse入门"><a href="#ClickHouse入门" class="headerlink" title="ClickHouse入门"></a>ClickHouse入门</h1><p>​        ClickHouse 是俄罗斯的Yandex于2016年开源的列式存储数据库（DBMS），使用C++语言编写，主要用于<strong>在线分析处理查询（OLAP），能够使用SQL查询实时生成分析数据报告。</strong>  </p><p>官方文档：<a href="https://clickhouse.yandex/docs/zh/data_types/">https://clickhouse.yandex/docs/zh/data_types/</a></p><span id="more"></span><h2 id="ClickHouse的特点"><a href="#ClickHouse的特点" class="headerlink" title="ClickHouse的特点"></a>ClickHouse的特点</h2><h3 id="列式存储"><a href="#列式存储" class="headerlink" title="列式存储"></a>列式存储</h3><p>以下面的表为例：</p><table><thead><tr><th><strong>Id</strong></th><th><strong>Name</strong></th><th><strong>Age</strong></th></tr></thead><tbody><tr><td>1</td><td>张三</td><td>18</td></tr><tr><td>2</td><td>李四</td><td>22</td></tr><tr><td>3</td><td>王五</td><td>34</td></tr></tbody></table><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217002324.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217002355.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217002441.png"></p><p><strong>OALP: 可以做查询,插入,但是不擅长删除和修改操作. 其实这个也可以理解. 因为我大数据拿到数据,会有对数据进行删除和修改的场景吗? 基本没有.</strong></p><h3 id="DBMS的功能"><a href="#DBMS的功能" class="headerlink" title="DBMS的功能"></a>DBMS的功能</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">几乎覆盖了标准SQL的大部分语法，包括 DDL和 DML(crud)，以及配套的各种函数，用户管理及权限管理，数据的备份与恢复</span><br></pre></td></tr></table></figure><h3 id="多样化引擎"><a href="#多样化引擎" class="headerlink" title="多样化引擎"></a>多样化引擎</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ClickHouse和MySQL类似，把表级的存储引擎插件化，根据表的不同需求可以设定不同的存储引擎。目前包括合并树、日志、接口和其他四大类20多种引擎。</span><br></pre></td></tr></table></figure><p><strong>表级的存储引擎插件化:</strong><br>        就是,这张表使用则引擎, 那张表使用那个引擎.<br>        可以根据本表的需求使用不同的引擎.<br>        目前包括树的,日志的,接口的,和其他四大类20多种引擎.<br>        Mysql有InnoDB和myISAM,InnoDB支持事务,myISQM不支持事务.</p><h3 id="高吞吐写入能力"><a href="#高吞吐写入能力" class="headerlink" title="高吞吐写入能力"></a>高吞吐写入能力</h3><p>​        ClickHouse采用类LSM Tree的结构，数据写入后定期在后台Compaction。通过类LSM tree的结构，<strong>ClickHouse在数据导入时全部是顺序append写，写入后数据段不可更改，在后台compaction(合并)时也是多个段merge sort后顺序写回磁盘</strong>。顺序写的特性，充分利用了磁盘的吞吐能力，即便在HDD上也有着优异的写入性能。<br>​        官方公开benchmark测试显示能够达到50MB-200MB/s的写入吞吐能力，按照每行100Byte估算，大约相当于50W-200W条/s的写入速度。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217002815.png"></p><h3 id="数据分区与线程级并行"><a href="#数据分区与线程级并行" class="headerlink" title="数据分区与线程级并行"></a>数据分区与线程级并行</h3><p>​        ClickHouse将数据划分为多个partition，每个partition再进一步划分为多个index granularity(索引力度)，然后通过多个CPU核心分别处理其中的一部分来实现并行数据处理。在这种设计下，单条Query就能利用整机所有CPU。极致的并行处理能力，极大的降低了查询延时。<br>​        所以，ClickHouse即使对于大量数据的查询也能够化整为零平行处理。但是有一个弊端就是对于单条查询使用多cpu，就不利于同时并发多条查询。所以对于高qps的查询业务，ClickHouse并不是强项。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217002917.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217003005.png"></p><h3 id="性能对比"><a href="#性能对比" class="headerlink" title="性能对比"></a>性能对比</h3><p>某网站精华帖，中对几款数据库做了性能对比。</p><h4 id="单表查询"><a href="#单表查询" class="headerlink" title="单表查询"></a>单表查询</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217003054.png"></p><h4 id="关联查询"><a href="#关联查询" class="headerlink" title="关联查询"></a>关联查询</h4><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217003115.png"></p><h4 id="结论"><a href="#结论" class="headerlink" title="结论"></a>结论</h4><p>​     ClickHouse像很多OLAP数据库一样，单表查询速度由于关联查询，而且ClickHouse的两者差距更为明显。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220217003219.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;ClickHouse入门&quot;&gt;&lt;a href=&quot;#ClickHouse入门&quot; class=&quot;headerlink&quot; title=&quot;ClickHouse入门&quot;&gt;&lt;/a&gt;ClickHouse入门&lt;/h1&gt;&lt;p&gt;​        ClickHouse 是俄罗斯的Yandex于2016年开源的列式存储数据库（DBMS），使用C++语言编写，主要用于&lt;strong&gt;在线分析处理查询（OLAP），能够使用SQL查询实时生成分析数据报告。&lt;/strong&gt;  &lt;/p&gt;
&lt;p&gt;官方文档：&lt;a href=&quot;https://clickhouse.yandex/docs/zh/data_types/&quot;&gt;https://clickhouse.yandex/docs/zh/data_types/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="clickhouse" scheme="http://xubatian.cn/tags/clickhouse/"/>
    
  </entry>
  
  <entry>
    <title>常用的shell脚本</title>
    <link href="http://xubatian.cn/%E5%B8%B8%E7%94%A8%E7%9A%84shell%E8%84%9A%E6%9C%AC/"/>
    <id>http://xubatian.cn/%E5%B8%B8%E7%94%A8%E7%9A%84shell%E8%84%9A%E6%9C%AC/</id>
    <published>2022-02-16T14:17:52.000Z</published>
    <updated>2022-02-16T14:58:13.787Z</updated>
    
    <content type="html"><![CDATA[<h1 id="myhadoop-sh"><a href="#myhadoop-sh" class="headerlink" title="myhadoop.sh"></a>myhadoop.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 hadoop集群 ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot; --------------- 启动 hdfs ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&quot;</span><br><span class="line">        echo &quot; --------------- 启动 yarn ---------------&quot;</span><br><span class="line">        ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&quot;</span><br><span class="line">        echo &quot; --------------- 启动 historyserver ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 hadoop集群 ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot; --------------- 关闭 historyserver ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&quot;</span><br><span class="line">        echo &quot; --------------- 关闭 yarn ---------------&quot;</span><br><span class="line">        ssh hadoop103 &quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&quot;</span><br><span class="line">        echo &quot; --------------- 关闭 hdfs ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><span id="more"></span><h1 id="myzookeeper-sh"><a href="#myzookeeper-sh" class="headerlink" title="myzookeeper.sh"></a>myzookeeper.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">for i in hadoop100 hadoop101 hadoop102 </span><br><span class="line">do</span><br><span class="line">        echo ---------- zookeeper $i 启动 ------------</span><br><span class="line">ssh $i &quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh start&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">for i in hadoop100 hadoop101 hadoop102 </span><br><span class="line">do</span><br><span class="line">        echo ---------- zookeeper $i 停止 ------------    </span><br><span class="line">ssh $i &quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh stop&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;status&quot;)&#123;</span><br><span class="line">for i in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">        echo ---------- zookeeper $i 状态 ------------    </span><br><span class="line">ssh $i &quot;/opt/module/zookeeper-3.5.7/bin/zkServer.sh status&quot;</span><br><span class="line">done</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="mykafka-sh"><a href="#mykafka-sh" class="headerlink" title="mykafka.sh"></a>mykafka.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">    for i in hadoop100 hadoop101 hadoop102</span><br><span class="line">    do</span><br><span class="line">        echo &quot; --------启动 $i Kafka-------&quot;</span><br><span class="line">        ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-server-start.sh -daemon /opt/module/kafka_2.11-2.4.1/config/server.properties&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">    for i in hadoop100 hadoop101 hadoop102</span><br><span class="line">    do</span><br><span class="line">        echo &quot; --------停止 $i Kafka-------&quot;</span><br><span class="line">        ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-server-stop.sh stop&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="mykafka-producer-sh"><a href="#mykafka-producer-sh" class="headerlink" title="mykafka_producer.sh"></a>mykafka_producer.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">topic=$1</span><br><span class="line"></span><br><span class="line">for i in hadoop102</span><br><span class="line">do</span><br><span class="line">    echo &quot;------------ 启动 kafka 生产者 , 生产者主题为: $1 ---------------&quot;</span><br><span class="line">    ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-console-producer.sh --broker-list hadoop102:9092 --topic $topic&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="mykafka-listTopic-sh"><a href="#mykafka-listTopic-sh" class="headerlink" title="mykafka_listTopic.sh"></a>mykafka_listTopic.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">for i in hadoop102</span><br><span class="line">do</span><br><span class="line">    echo &quot; ----------查看 kafka 主题--------&quot;</span><br><span class="line">    ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-topics.sh --zookeeper hadoop102:2181/kafka_2.11-2.4.1 --list&quot;</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="mykafka-deleteTopic-sh"><a href="#mykafka-deleteTopic-sh" class="headerlink" title="mykafka_deleteTopic.sh"></a>mykafka_deleteTopic.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">delete_topic=$1</span><br><span class="line"></span><br><span class="line">for i in hadoop102</span><br><span class="line">do</span><br><span class="line">    echo &quot;------------ 删除 kafka $1 主题 ---------------&quot;</span><br><span class="line">    ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-topics.sh --delete --zookeeper hadoop102:2181,hadoop103:2181,hadoop104:2181/kafka_2.11-2.4.1 --topic $delete_topic&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="mykafka-createTopic-sh"><a href="#mykafka-createTopic-sh" class="headerlink" title="mykafka_createTopic.sh"></a>mykafka_createTopic.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">#$1: 脚本的第一个参数 做非空判断</span><br><span class="line">if [ -n &quot;$1&quot; ] ;then</span><br><span class="line">   one=$1</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入副本数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#$2: 脚本的第二个参数 做非空判断</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">   two=$2</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入分区数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#$3: 脚本的第三个参数 做非空判断</span><br><span class="line">if [ -n &quot;$3&quot; ] ;then</span><br><span class="line">   topic=$3</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入需要创建的主题名称&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line"></span><br><span class="line">for i in hadoop102</span><br><span class="line">do</span><br><span class="line">    echo &quot;------------ 创建 kafka 主题 , 主题为: $topic ---------------&quot;</span><br><span class="line">    ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-topics.sh --zookeeper hadoop102:2181,hadoop103:2181,hadoop104:2181/kafka_2.11-2.4.1  --create --replication-factor $one --partitions $two --topic $topic&quot;</span><br><span class="line">done</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># bin/kafka-topics.sh --zookeeper hadoop102:2181,hadoop103:2181,hadoop104:2181/kafka_2.11-2.4.1  --create --replication-factor 1 --partitions 1 --topic topic_log</span><br></pre></td></tr></table></figure><h1 id="mykafka-consumer-sh"><a href="#mykafka-consumer-sh" class="headerlink" title="mykafka_consumer.sh"></a>mykafka_consumer.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">topic=$1</span><br><span class="line"></span><br><span class="line">for i in hadoop102</span><br><span class="line">do</span><br><span class="line">    echo &quot;------------ 启动 kafka 消费者 , 消费者主题为: $1 ---------------&quot;</span><br><span class="line">    ssh $i &quot;/opt/module/kafka_2.11-2.4.1/bin/kafka-console-consumer.sh --bootstrap-server hadoop102:9092 --from-beginning --topic $topic&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="mykylin-sh"><a href="#mykylin-sh" class="headerlink" title="mykylin.sh"></a>mykylin.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">    </span><br><span class="line">    for i in hadoop102</span><br><span class="line">    do</span><br><span class="line">        echo &quot; =================== 启动 kylin ===================&quot;</span><br><span class="line">        ssh $i &quot;/opt/module/kylin-3.0.2/bin/kylin.sh start&quot;</span><br><span class="line">    done</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        for i in hadoop102</span><br><span class="line">    do</span><br><span class="line">        echo &quot; =================== 关闭 kylin ===================&quot;</span><br><span class="line"></span><br><span class="line">        ssh $i &quot;/opt/module/kylin-3.0.2/bin/kylin.sh stop&quot;</span><br><span class="line">    done</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="kylin-build-cube-sh"><a href="#kylin-build-cube-sh" class="headerlink" title="kylin_build_cube.sh"></a>kylin_build_cube.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">cube_name=order_cube</span><br><span class="line">do_date=`date -d &#x27;-1 day&#x27; +%F`</span><br><span class="line"></span><br><span class="line">#获取00:00时间戳</span><br><span class="line">start_date_unix=`date -d &quot;$do_date 08:00:00&quot; +%s`</span><br><span class="line">start_date=$(($start_date_unix*1000))</span><br><span class="line"></span><br><span class="line">#获取24:00的时间戳</span><br><span class="line">stop_date=$(($start_date+86400000))</span><br><span class="line"></span><br><span class="line">curl -X PUT -H &quot;Authorization: Basic QURNSU46S1lMSU4=&quot; -H &#x27;Content-Type: application/json&#x27; -d &#x27;&#123;&quot;startTime&quot;:&#x27;$start_date&#x27;, &quot;endTime&quot;:&#x27;$stop_date&#x27;, &quot;buildType&quot;:&quot;BUILD&quot;&#125;&#x27; http://hadoop102:7070/kylin/api/cubes/$cube_name/build</span><br></pre></td></tr></table></figure><h1 id="mysolr-sh"><a href="#mysolr-sh" class="headerlink" title="mysolr.sh"></a>mysolr.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">    for i in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104</span><br><span class="line">    do</span><br><span class="line">        echo &quot; --------启动 $i solr-------&quot;</span><br><span class="line">        ssh $i &quot;/opt/module/solr-5.2.1/bin/solr start&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">    for i in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104</span><br><span class="line">    do</span><br><span class="line">        echo &quot; --------停止 $i solr-------&quot;</span><br><span class="line">        ssh $i &quot;/opt/module/solr-5.2.1/bin/solr stop&quot;</span><br><span class="line">    done</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="myzabbix-sh"><a href="#myzabbix-sh" class="headerlink" title="myzabbix.sh"></a>myzabbix.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 Zabbix ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop102==</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;sudo systemctl start zabbix-server zabbix-agent httpd rh-php72-php-fpm&quot;</span><br><span class="line"></span><br><span class="line">        # sleep 5</span><br><span class="line"></span><br><span class="line">        # ssh hadoop102 &quot;sudo systemctl enable zabbix-server zabbix-agent httpd rh-php72-php-fpm&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop100==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop100 &quot;sudo systemctl start zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop100 &quot;sudo systemctl enable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        echo ===hadoop101==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop101 &quot;sudo systemctl start zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop101 &quot;sudo systemctl enable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop103==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop103 &quot;sudo systemctl start zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop103 &quot;sudo systemctl enable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop104==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop104 &quot;sudo systemctl start zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop104 &quot;sudo systemctl enable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 Zabbix ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop102==</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;sudo systemctl stop zabbix-server zabbix-agent httpd rh-php72-php-fpm&quot;</span><br><span class="line"></span><br><span class="line">        # sleep 5</span><br><span class="line"></span><br><span class="line">        # ssh hadoop102 &quot;sudo systemctl disable zabbix-server zabbix-agent httpd rh-php72-php-fpm&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop100==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop100 &quot;sudo systemctl stop zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop100 &quot;sudo systemctl disable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        echo ===hadoop101==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop101 &quot;sudo systemctl stop zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop101 &quot;sudo systemctl disable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop103==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop103 &quot;sudo systemctl stop zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop103 &quot;sudo systemctl disable zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        echo ===hadoop104==</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop104 &quot;sudo systemctl stop zabbix-agent&quot;</span><br><span class="line"></span><br><span class="line">        sleep 5</span><br><span class="line"></span><br><span class="line">        ssh hadoop104 &quot;sudo systemctl disable zabbix-agent&quot;</span><br><span class="line">       </span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="ps-ef-sh"><a href="#ps-ef-sh" class="headerlink" title="ps-ef.sh"></a>ps-ef.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ================== 查看本机所有进程,为zabbix监控所需: ps -ef | grep $1==================</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...select All : ps -ef&quot;</span><br><span class="line">    ps -ef </span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line">ps -ef | grep $1</span><br></pre></td></tr></table></figure><h1 id="rpm-qa-sh"><a href="#rpm-qa-sh" class="headerlink" title="rpm-qa.sh"></a>rpm-qa.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ================== 查询系统当中是否有这个安装包:&quot;sudo rpm qa | grep&quot; $1 ==================</span><br><span class="line">sudo rpm -qa | grep $1</span><br></pre></td></tr></table></figure><h1 id="superset-sh"><a href="#superset-sh" class="headerlink" title="superset.sh"></a>superset.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo === 启动superset命令: gunicorn --workers 5 --timeout 120 --bind 0.0.0.0:8787  &#x27;&quot;superset.app:create_app()&quot;&#x27; --daemon  ===</span><br><span class="line">echo === 停止superset命令: &quot;ps -ef | awk &#x27;/superset/ &amp;&amp; !/awk/&#123;print $2&#125;&#x27; | xargs kill -9&quot; ====</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">superset_status()&#123;</span><br><span class="line">    result=`ps -ef | awk &#x27;/gunicorn/ &amp;&amp; !/awk/&#123;print $2&#125;&#x27; | wc -l`</span><br><span class="line">    if [[ $result -eq 0 ]]; then</span><br><span class="line">        return 0</span><br><span class="line">    else</span><br><span class="line">        return 1</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line">superset_start()&#123;</span><br><span class="line">        source ~/.bashrc</span><br><span class="line">        superset_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        if [[ $? -eq 0 ]]; then</span><br><span class="line">            conda activate superset ; gunicorn --workers 5 --timeout 120 --bind hadoop102:8787 --daemon &#x27;superset.app:create_app()&#x27;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;superset正在运行&quot;</span><br><span class="line">        fi</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">superset_stop()&#123;</span><br><span class="line">    source ~/.bashrc</span><br><span class="line">    superset_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">    if [[ $? -eq 0 ]]; then</span><br><span class="line">        echo &quot;superset未在运行&quot;</span><br><span class="line">    else</span><br><span class="line">        ps -ef | awk &#x27;/gunicorn/ &amp;&amp; !/awk/&#123;print $2&#125;&#x27; | xargs kill -9 ; conda deactivate</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    start )</span><br><span class="line">        echo &quot;启动Superset&quot;</span><br><span class="line">        superset_start</span><br><span class="line">    ;;</span><br><span class="line">    stop )</span><br><span class="line">        echo &quot;停止Superset&quot;</span><br><span class="line">        superset_stop</span><br><span class="line">    ;;</span><br><span class="line">    restart )</span><br><span class="line">        echo &quot;重启Superset&quot;</span><br><span class="line">        superset_stop</span><br><span class="line">        superset_start</span><br><span class="line">    ;;</span><br><span class="line">    status )</span><br><span class="line">        superset_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">        if [[ $? -eq 0 ]]; then</span><br><span class="line">            echo &quot;superset未在运行&quot;</span><br><span class="line">        else</span><br><span class="line">            echo &quot;superset正在运行&quot;</span><br><span class="line">        fi</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="conda-superset-sh"><a href="#conda-superset-sh" class="headerlink" title="conda-superset.sh"></a>conda-superset.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">echo === 使用conda的python环境管理更改节点的python环境为: Python 3.7.11  进入命令是:conda activate superset 退出命令是:conda deactivate ,因为superset仅支持Python 3.7.11及以上的版本 ===</span><br><span class="line"></span><br><span class="line"># if [ $# -lt 1 ]</span><br><span class="line"># then</span><br><span class="line">#     echo &quot;No Args Input...&quot;</span><br><span class="line">#     exit ;</span><br><span class="line"># fi</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"># conda_start()&#123;</span><br><span class="line">#         source ~/.bashrc</span><br><span class="line">#         # superset_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">#         if [[ $? -eq 0 ]]; then</span><br><span class="line">#             conda activate superset</span><br><span class="line">#         else</span><br><span class="line">#             echo &quot;conda_superset正在运行&quot;</span><br><span class="line">#         fi</span><br><span class="line"></span><br><span class="line"># &#125;</span><br><span class="line"></span><br><span class="line"># conda_stop()&#123;</span><br><span class="line">#     # superset_status &gt;/dev/null 2&gt;&amp;1</span><br><span class="line">#     if [[ $? -eq 0 ]]; then</span><br><span class="line">#         conda deactivate</span><br><span class="line">#     else</span><br><span class="line">#         conda deactivate</span><br><span class="line">#     fi</span><br><span class="line"># &#125;</span><br><span class="line"></span><br><span class="line"># case $1 in</span><br><span class="line">#     start )</span><br><span class="line">#         echo &quot;启动conda-superset&quot;</span><br><span class="line">#         conda_start</span><br><span class="line">#     ;;</span><br><span class="line">#     stop )</span><br><span class="line">#         echo &quot;停止conda-superset&quot;</span><br><span class="line">#         conda_stop</span><br><span class="line">#     ;;</span><br><span class="line"># esac</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="datax-import-config-py"><a href="#datax-import-config-py" class="headerlink" title="datax_import_config.py"></a>datax_import_config.py</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br></pre></td><td class="code"><pre><span class="line"># coding=utf-8</span><br><span class="line">import json</span><br><span class="line">import getopt</span><br><span class="line">import os</span><br><span class="line">import sys</span><br><span class="line">import MySQLdb</span><br><span class="line"></span><br><span class="line">#MySQL相关配置，需根据实际情况作出修改</span><br><span class="line">mysql_host = &quot;hadoop102&quot;</span><br><span class="line">mysql_port = &quot;3306&quot;</span><br><span class="line">mysql_user = &quot;root&quot;</span><br><span class="line">mysql_passwd = &quot;shangbaishuyao&quot;</span><br><span class="line"></span><br><span class="line">#HDFS NameNode相关配置，需根据实际情况作出修改</span><br><span class="line">hdfs_nn_host = &quot;hadoop102&quot;</span><br><span class="line">hdfs_nn_port = &quot;8020&quot;</span><br><span class="line"></span><br><span class="line">#生成配置文件的目标路径，可根据实际情况作出修改</span><br><span class="line">output_path = &quot;/opt/module/datax/job/mysql_import_hdfs_table_json_files&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_connection():</span><br><span class="line">    return MySQLdb.connect(host=mysql_host, port=int(mysql_port), user=mysql_user, passwd=mysql_passwd)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_mysql_meta(database, table):</span><br><span class="line">    connection = get_connection()</span><br><span class="line">    cursor = connection.cursor()</span><br><span class="line">    sql = &quot;SELECT COLUMN_NAME,DATA_TYPE from information_schema.COLUMNS WHERE TABLE_SCHEMA=%s AND TABLE_NAME=%s ORDER BY ORDINAL_POSITION&quot;</span><br><span class="line">    cursor.execute(sql, [database, table])</span><br><span class="line">    fetchall = cursor.fetchall()</span><br><span class="line">    cursor.close()</span><br><span class="line">    connection.close()</span><br><span class="line">    return fetchall</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_mysql_columns(database, table):</span><br><span class="line">    return map(lambda x: x[0], get_mysql_meta(database, table))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def get_hive_columns(database, table):</span><br><span class="line">    def type_mapping(mysql_type):</span><br><span class="line">        mappings = &#123;</span><br><span class="line">            &quot;bigint&quot;: &quot;bigint&quot;,</span><br><span class="line">            &quot;int&quot;: &quot;bigint&quot;,</span><br><span class="line">            &quot;smallint&quot;: &quot;bigint&quot;,</span><br><span class="line">            &quot;tinyint&quot;: &quot;bigint&quot;,</span><br><span class="line">            &quot;decimal&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;double&quot;: &quot;double&quot;,</span><br><span class="line">            &quot;float&quot;: &quot;float&quot;,</span><br><span class="line">            &quot;binary&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;char&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;varchar&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;datetime&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;time&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;timestamp&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;date&quot;: &quot;string&quot;,</span><br><span class="line">            &quot;text&quot;: &quot;string&quot;</span><br><span class="line">        &#125;</span><br><span class="line">        return mappings[mysql_type]</span><br><span class="line"></span><br><span class="line">    meta = get_mysql_meta(database, table)</span><br><span class="line">    return map(lambda x: &#123;&quot;name&quot;: x[0], &quot;type&quot;: type_mapping(x[1].lower())&#125;, meta)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def generate_json(source_database, source_table):</span><br><span class="line">    job = &#123;</span><br><span class="line">        &quot;job&quot;: &#123;</span><br><span class="line">            &quot;setting&quot;: &#123;</span><br><span class="line">                &quot;speed&quot;: &#123;</span><br><span class="line">                    &quot;channel&quot;: 3</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;errorLimit&quot;: &#123;</span><br><span class="line">                    &quot;record&quot;: 0,</span><br><span class="line">                    &quot;percentage&quot;: 0.02</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;,</span><br><span class="line">            &quot;content&quot;: [&#123;</span><br><span class="line">                &quot;reader&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;mysqlreader&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;username&quot;: mysql_user,</span><br><span class="line">                        &quot;password&quot;: mysql_passwd,</span><br><span class="line">                        &quot;column&quot;: get_mysql_columns(source_database, source_table),</span><br><span class="line">                        &quot;splitPk&quot;: &quot;&quot;,</span><br><span class="line">                        &quot;connection&quot;: [&#123;</span><br><span class="line">                            &quot;table&quot;: [source_table],</span><br><span class="line">                            &quot;jdbcUrl&quot;: [&quot;jdbc:mysql://&quot; + mysql_host + &quot;:&quot; + mysql_port + &quot;/&quot; + source_database]</span><br><span class="line">                        &#125;]</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;,</span><br><span class="line">                &quot;writer&quot;: &#123;</span><br><span class="line">                    &quot;name&quot;: &quot;hdfswriter&quot;,</span><br><span class="line">                    &quot;parameter&quot;: &#123;</span><br><span class="line">                        &quot;defaultFS&quot;: &quot;hdfs://&quot; + hdfs_nn_host + &quot;:&quot; + hdfs_nn_port,</span><br><span class="line">                        &quot;fileType&quot;: &quot;text&quot;,</span><br><span class="line">                        &quot;path&quot;: &quot;$&#123;targetdir&#125;&quot;,</span><br><span class="line">                        &quot;fileName&quot;: source_table,</span><br><span class="line">                        &quot;column&quot;: get_hive_columns(source_database, source_table),</span><br><span class="line">                        &quot;writeMode&quot;: &quot;append&quot;,</span><br><span class="line">                        &quot;fieldDelimiter&quot;: &quot;\t&quot;,</span><br><span class="line">                        &quot;compress&quot;: &quot;gzip&quot;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if not os.path.exists(output_path):</span><br><span class="line">        os.makedirs(output_path)</span><br><span class="line">    with open(os.path.join(output_path, &quot;.&quot;.join([source_database, source_table, &quot;json&quot;])), &quot;w&quot;) as f:</span><br><span class="line">        json.dump(job, f)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">def main(args):</span><br><span class="line">    source_database = &quot;&quot;</span><br><span class="line">    source_table = &quot;&quot;</span><br><span class="line"></span><br><span class="line">    options, arguments = getopt.getopt(args, &#x27;-d:-t:&#x27;, [&#x27;sourcedb=&#x27;, &#x27;sourcetbl=&#x27;])</span><br><span class="line">    for opt_name, opt_value in options:</span><br><span class="line">        if opt_name in (&#x27;-d&#x27;, &#x27;--sourcedb&#x27;):</span><br><span class="line">            source_database = opt_value</span><br><span class="line">        if opt_name in (&#x27;-t&#x27;, &#x27;--sourcetbl&#x27;):</span><br><span class="line">            source_table = opt_value</span><br><span class="line"></span><br><span class="line">    generate_json(source_database, source_table)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">if __name__ == &#x27;__main__&#x27;:</span><br><span class="line">    main(sys.argv[1:])</span><br></pre></td></tr></table></figure><h1 id="datax-import-config-sh"><a href="#datax-import-config-sh" class="headerlink" title="datax_import_config.sh"></a>datax_import_config.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t activity_info</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t activity_rule</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_category1</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_category2</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_category3</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_dic</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_province</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_region</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t base_trademark</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t cart_info</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t coupon_info</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t sku_attr_value</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t sku_info</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t sku_sale_attr_value</span><br><span class="line">python ~/bin/datax_import_config.py -d gmall -t spu_info</span><br></pre></td></tr></table></figure><h1 id="datax-import-config-files-sh"><a href="#datax-import-config-files-sh" class="headerlink" title="datax_import_config_files.sh"></a>datax_import_config_files.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#全量表数据同步脚本</span><br><span class="line"></span><br><span class="line">DATAX_HOME=/opt/module/datax</span><br><span class="line"></span><br><span class="line"># 如果传入日期则do_date等于传入的日期，否则等于前一天日期</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">    do_date=$2</span><br><span class="line">else</span><br><span class="line">    do_date=`date -d &quot;-1 day&quot; +%F`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#处理目标路径，此处的处理逻辑是，如果目标路径不存在，则创建；若存在，则清空，目的是保证同步任务可重复执行</span><br><span class="line">handle_targetdir() &#123;</span><br><span class="line">  hadoop fs -test -e $1</span><br><span class="line">  if [[ $? -eq 1 ]]; then</span><br><span class="line">    echo &quot;路径$1不存在，正在创建......&quot;</span><br><span class="line">    hadoop fs -mkdir -p $1</span><br><span class="line">  else</span><br><span class="line">    echo &quot;路径$1已经存在&quot;</span><br><span class="line">    fs_count=$(hadoop fs -count $1)</span><br><span class="line">    content_size=$(echo $fs_count | awk &#x27;&#123;print $3&#125;&#x27;)</span><br><span class="line">    if [[ $content_size -eq 0 ]]; then</span><br><span class="line">      echo &quot;路径$1为空&quot;</span><br><span class="line">    else</span><br><span class="line">      echo &quot;路径$1不为空，正在清空......&quot;</span><br><span class="line">      hadoop fs -rm -r -f $1/*</span><br><span class="line">    fi</span><br><span class="line">  fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">#数据同步</span><br><span class="line">import_data() &#123;</span><br><span class="line">  datax_config=$1</span><br><span class="line">  target_dir=$2</span><br><span class="line"></span><br><span class="line">  handle_targetdir $target_dir</span><br><span class="line">  python $DATAX_HOME/bin/datax.py -p&quot;-Dtargetdir=$target_dir&quot; $datax_config</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;activity_info&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.activity_info.json /origin_data/gmall/db/ods_activity_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;activity_rule&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.activity_rule.json /origin_data/gmall/db/ods_activity_rule/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_category1&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category1.json /origin_data/gmall/db/ods_base_category1/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_category2&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category2.json /origin_data/gmall/db/ods_base_category2/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_category3&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category3.json /origin_data/gmall/db/ods_base_category3/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_dic&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_dic.json /origin_data/gmall/db/ods_base_dic/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_province&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_province.json /origin_data/gmall/db/ods_base_province/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_region&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_region.json /origin_data/gmall/db/ods_base_region/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;base_trademark&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_trademark.json /origin_data/gmall/db/ods_base_trademark/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;cart_info&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.cart_info.json /origin_data/gmall/db/ods_cart_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;coupon_info&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.coupon_info.json /origin_data/gmall/db/ods_coupon_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;sku_attr_value&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_attr_value.json /origin_data/gmall/db/ods_sku_attr_value/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;sku_info&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_info.json /origin_data/gmall/db/ods_sku_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;sku_sale_attr_value&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_sale_attr_value.json /origin_data/gmall/db/ods_sku_sale_attr_value/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;spu_info&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.spu_info.json /origin_data/gmall/db/ods_spu_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">&quot;all&quot;)</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.activity_info.json /origin_data/gmall/db/ods_activity_info/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.activity_rule.json /origin_data/gmall/db/ods_activity_rule/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category1.json /origin_data/gmall/db/ods_base_category1/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category2.json /origin_data/gmall/db/ods_base_category2/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_category3.json /origin_data/gmall/db/ods_base_category3/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_dic.json /origin_data/gmall/db/ods_base_dic/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_province.json /origin_data/gmall/db/ods_base_province/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_region.json /origin_data/gmall/db/ods_base_region/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.base_trademark.json /origin_data/gmall/db/ods_base_trademark/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.cart_info.json /origin_data/gmall/db/ods_cart_info/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.coupon_info.json /origin_data/gmall/db/ods_coupon_info/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_attr_value.json /origin_data/gmall/db/ods_sku_attr_value/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_info.json /origin_data/gmall/db/ods_sku_info/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.sku_sale_attr_value.json /origin_data/gmall/db/ods_sku_sale_attr_value/$do_date</span><br><span class="line">  import_data /opt/module/datax/job/mysql_import_hdfs_table_json_files/gmall.spu_info.json /origin_data/gmall/db/ods_spu_info/$do_date</span><br><span class="line">  ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="db-maxwell-kafka-flume-hdfs-sh"><a href="#db-maxwell-kafka-flume-hdfs-sh" class="headerlink" title="db_maxwell_kafka_flume_hdfs.sh"></a>db_maxwell_kafka_flume_hdfs.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; --------启动 hadoop101上的flume采集maxwell传到kafka上的业务数据-------&quot;</span><br><span class="line">        ssh hadoop100 &quot;nohup /opt/module/flume-1.9.0/bin/flume-ng agent -n a1 -c /opt/module/flume-1.9.0/conf -f /opt/module/flume-1.9.0/db_maxwell_kafka_topic/db_maxwell_kafka_topic.conf &gt;/dev/null 2&gt;&amp;1 &amp;&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line"></span><br><span class="line">        echo &quot; --------停止 hadoop101上的flume采集maxwell传到kafka上的业务数据--------&quot;</span><br><span class="line">        ssh hadoop100 &quot;ps -ef | grep db_maxwell_kafka | grep -v grep |awk &#x27;&#123;print \$2&#125;&#x27; | xargs -n1 kill&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#说明1：nohup，该命令可以在你退出帐户/关闭终端之后继续运行相应的进程。nohup就是不挂起的意思，不挂断地运行命令。</span><br><span class="line">#说明2：awk 默认分隔符为空格</span><br><span class="line">#说明3：$2是在“”双引号内部会被解析为脚本的第二个参数，但是这里面想表达的含义是awk的第二个值，所以需要将他转义，用\$2表示。</span><br><span class="line">#说明4：xargs 表示取出前面命令运行的结果，作为后面命令的输入参数。</span><br></pre></td></tr></table></figure><h1 id="hdfs-to-ods-db-every-day-sh"><a href="#hdfs-to-ods-db-every-day-sh" class="headerlink" title="hdfs_to_ods_db_every_day.sh"></a>hdfs_to_ods_db_every_day.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">    do_date=$2</span><br><span class="line">else </span><br><span class="line">    do_date=`date -d &quot;-1 day&quot; +%F`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">ods_order_info=&quot; </span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_sku_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_user_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/user_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_user_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_payment_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/payment_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_payment_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category1=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category1/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category1 partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category2=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category2/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category2 partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category3=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category3/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category3 partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_base_trademark=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_trademark/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_trademark partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_activity_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/activity_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_activity_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_cart_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/cart_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_cart_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_comment_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/comment_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_comment_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_coupon_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/coupon_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_coupon_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_coupon_use=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/coupon_use/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_coupon_use partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_favor_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/favor_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_favor_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_refund_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_refund_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_refund_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_status_log=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_status_log/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_status_log partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_spu_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/spu_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_spu_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_activity_rule=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/activity_rule/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_activity_rule partition(dt=&#x27;$do_date&#x27;);&quot; </span><br><span class="line"></span><br><span class="line">ods_base_dic=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_dic/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_dic partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail_activity=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail_activity/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail_activity partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail_coupon=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail_coupon/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail_coupon partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_refund_payment=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/refund_payment/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_refund_payment partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_sku_attr_value=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_attr_value/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_attr_value partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_sku_sale_attr_value=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_sale_attr_value/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_sale_attr_value partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_base_province=&quot; </span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_province/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_province;&quot;</span><br><span class="line"></span><br><span class="line">ods_base_region=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_region/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_region;&quot;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    &quot;ods_order_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_user_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_user_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_payment_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_payment_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category1&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category1&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category2&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category2&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category3&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category3&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_trademark&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_trademark&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_activity_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_activity_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_cart_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_cart_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_comment_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_comment_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_coupon_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_coupon_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_coupon_use&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_coupon_use&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_favor_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_favor_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_refund_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_refund_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_status_log&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_status_log&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_spu_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_spu_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_activity_rule&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_activity_rule&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_dic&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_dic&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail_activity&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail_activity&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail_coupon&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail_coupon&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_refund_payment&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_refund_payment&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_attr_value&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_attr_value&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_sale_attr_value&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_sale_attr_value&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;all&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_info$ods_order_detail$ods_sku_info$ods_user_info$ods_payment_info$ods_base_category1$ods_base_category2$ods_base_category3$ods_base_trademark$ods_activity_info$ods_cart_info$ods_comment_info$ods_coupon_info$ods_coupon_use$ods_favor_info$ods_order_refund_info$ods_order_status_log$ods_spu_info$ods_activity_rule$ods_base_dic$ods_order_detail_activity$ods_order_detail_coupon$ods_refund_payment$ods_sku_attr_value$ods_sku_sale_attr_value&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="hdfs-to-ods-db-first-day-sh"><a href="#hdfs-to-ods-db-first-day-sh" class="headerlink" title="hdfs_to_ods_db_first_day.sh"></a>hdfs_to_ods_db_first_day.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">   do_date=$2</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入日期参数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">ods_order_info=&quot; </span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_sku_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_user_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/user_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_user_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_payment_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/payment_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_payment_info partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category1=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category1/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category1 partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category2=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category2/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category2 partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line"></span><br><span class="line">ods_base_category3=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_category3/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_category3 partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_base_trademark=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_trademark/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_trademark partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_activity_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/activity_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_activity_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_cart_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/cart_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_cart_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_comment_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/comment_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_comment_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_coupon_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/coupon_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_coupon_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_coupon_use=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/coupon_use/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_coupon_use partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_favor_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/favor_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_favor_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_refund_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_refund_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_refund_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_status_log=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_status_log/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_status_log partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_spu_info=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/spu_info/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_spu_info partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_activity_rule=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/activity_rule/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_activity_rule partition(dt=&#x27;$do_date&#x27;);&quot; </span><br><span class="line"></span><br><span class="line">ods_base_dic=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_dic/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_dic partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail_activity=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail_activity/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail_activity partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_order_detail_coupon=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/order_detail_coupon/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_order_detail_coupon partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_refund_payment=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/refund_payment/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_refund_payment partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_sku_attr_value=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_attr_value/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_attr_value partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_sku_sale_attr_value=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/sku_sale_attr_value/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_sku_sale_attr_value partition(dt=&#x27;$do_date&#x27;); &quot;</span><br><span class="line"></span><br><span class="line">ods_base_province=&quot; </span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_province/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_province;&quot;</span><br><span class="line"></span><br><span class="line">ods_base_region=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/db/base_region/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.ods_base_region;&quot;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    &quot;ods_order_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_user_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_user_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_payment_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_payment_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category1&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category1&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category2&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category2&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_category3&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_category3&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_trademark&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_trademark&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_activity_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_activity_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_cart_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_cart_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_comment_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_comment_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_coupon_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_coupon_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_coupon_use&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_coupon_use&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_favor_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_favor_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_refund_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_refund_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_status_log&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_status_log&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_spu_info&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_spu_info&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_activity_rule&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_activity_rule&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_dic&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_dic&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail_activity&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail_activity&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_order_detail_coupon&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_detail_coupon&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_refund_payment&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_refund_payment&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_attr_value&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_attr_value&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_sku_sale_attr_value&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_sku_sale_attr_value&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_province&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_province&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;ods_base_region&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_base_region&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">    &quot;all&quot;)&#123;</span><br><span class="line">        hive -e &quot;$ods_order_info$ods_order_detail$ods_sku_info$ods_user_info$ods_payment_info$ods_base_category1$ods_base_category2$ods_base_category3$ods_base_trademark$ods_activity_info$ods_cart_info$ods_comment_info$ods_coupon_info$ods_coupon_use$ods_favor_info$ods_order_refund_info$ods_order_status_log$ods_spu_info$ods_activity_rule$ods_base_dic$ods_order_detail_activity$ods_order_detail_coupon$ods_refund_payment$ods_sku_attr_value$ods_sku_sale_attr_value$ods_base_province$ods_base_region&quot;</span><br><span class="line">    &#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="ods-to-dim-db-every-day-sh"><a href="#ods-to-dim-db-every-day-sh" class="headerlink" title="ods_to_dim_db_every_day.sh"></a>ods_to_dim_db_every_day.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">    do_date=$2</span><br><span class="line">else </span><br><span class="line">    do_date=`date -d &quot;-1 day&quot; +%F`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">dim_user_info=&quot;</span><br><span class="line">set hive.exec.dynamic.partition.mode=nonstrict;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">with</span><br><span class="line">tmp as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        old.id old_id,</span><br><span class="line">        old.login_name old_login_name,</span><br><span class="line">        old.nick_name old_nick_name,</span><br><span class="line">        old.name old_name,</span><br><span class="line">        old.phone_num old_phone_num,</span><br><span class="line">        old.email old_email,</span><br><span class="line">        old.user_level old_user_level,</span><br><span class="line">        old.birthday old_birthday,</span><br><span class="line">        old.gender old_gender,</span><br><span class="line">        old.create_time old_create_time,</span><br><span class="line">        old.operate_time old_operate_time,</span><br><span class="line">        old.start_date old_start_date,</span><br><span class="line">        old.end_date old_end_date,</span><br><span class="line">        new.id new_id,</span><br><span class="line">        new.login_name new_login_name,</span><br><span class="line">        new.nick_name new_nick_name,</span><br><span class="line">        new.name new_name,</span><br><span class="line">        new.phone_num new_phone_num,</span><br><span class="line">        new.email new_email,</span><br><span class="line">        new.user_level new_user_level,</span><br><span class="line">        new.birthday new_birthday,</span><br><span class="line">        new.gender new_gender,</span><br><span class="line">        new.create_time new_create_time,</span><br><span class="line">        new.operate_time new_operate_time,</span><br><span class="line">        new.start_date new_start_date,</span><br><span class="line">        new.end_date new_end_date</span><br><span class="line">    from</span><br><span class="line">    (</span><br><span class="line">        select</span><br><span class="line">            id,</span><br><span class="line">            login_name,</span><br><span class="line">            nick_name,</span><br><span class="line">            name,</span><br><span class="line">            phone_num,</span><br><span class="line">            email,</span><br><span class="line">            user_level,</span><br><span class="line">            birthday,</span><br><span class="line">            gender,</span><br><span class="line">            create_time,</span><br><span class="line">            operate_time,</span><br><span class="line">            start_date,</span><br><span class="line">            end_date</span><br><span class="line">        from $&#123;APP&#125;.dim_user_info</span><br><span class="line">        where dt=&#x27;9999-99-99&#x27;</span><br><span class="line">        and start_date&lt;&#x27;$do_date&#x27;</span><br><span class="line">    )old</span><br><span class="line">    full outer join</span><br><span class="line">    (</span><br><span class="line">        select</span><br><span class="line">            id,</span><br><span class="line">            login_name,</span><br><span class="line">            nick_name,</span><br><span class="line">            md5(name) name,</span><br><span class="line">            md5(phone_num) phone_num,</span><br><span class="line">            md5(email) email,</span><br><span class="line">            user_level,</span><br><span class="line">            birthday,</span><br><span class="line">            gender,</span><br><span class="line">            create_time,</span><br><span class="line">            operate_time,</span><br><span class="line">            &#x27;$do_date&#x27; start_date,</span><br><span class="line">            &#x27;9999-99-99&#x27; end_date</span><br><span class="line">        from $&#123;APP&#125;.ods_user_info</span><br><span class="line">        where dt=&#x27;$do_date&#x27;</span><br><span class="line">    )new</span><br><span class="line">    on old.id=new.id</span><br><span class="line">)</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_user_info partition(dt)</span><br><span class="line">select</span><br><span class="line">    nvl(new_id,old_id),</span><br><span class="line">    nvl(new_login_name,old_login_name),</span><br><span class="line">    nvl(new_nick_name,old_nick_name),</span><br><span class="line">    nvl(new_name,old_name),</span><br><span class="line">    nvl(new_phone_num,old_phone_num),</span><br><span class="line">    nvl(new_email,old_email),</span><br><span class="line">    nvl(new_user_level,old_user_level),</span><br><span class="line">    nvl(new_birthday,old_birthday),</span><br><span class="line">    nvl(new_gender,old_gender),</span><br><span class="line">    nvl(new_create_time,old_create_time),</span><br><span class="line">    nvl(new_operate_time,old_operate_time),</span><br><span class="line">    nvl(new_start_date,old_start_date),</span><br><span class="line">    nvl(new_end_date,old_end_date),</span><br><span class="line">    nvl(new_end_date,old_end_date) dt</span><br><span class="line">from tmp</span><br><span class="line">union all</span><br><span class="line">select</span><br><span class="line">    old_id,</span><br><span class="line">    old_login_name,</span><br><span class="line">    old_nick_name,</span><br><span class="line">    old_name,</span><br><span class="line">    old_phone_num,</span><br><span class="line">    old_email,</span><br><span class="line">    old_user_level,</span><br><span class="line">    old_birthday,</span><br><span class="line">    old_gender,</span><br><span class="line">    old_create_time,</span><br><span class="line">    old_operate_time,</span><br><span class="line">    old_start_date,</span><br><span class="line">    cast(date_add(&#x27;$do_date&#x27;,-1) as string),</span><br><span class="line">    cast(date_add(&#x27;$do_date&#x27;,-1) as string) dt</span><br><span class="line">from tmp</span><br><span class="line">where new_id is not null and old_id is not null;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">dim_sku_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">with</span><br><span class="line">sku as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        price,</span><br><span class="line">        sku_name,</span><br><span class="line">        sku_desc,</span><br><span class="line">        weight,</span><br><span class="line">        is_sale,</span><br><span class="line">        spu_id,</span><br><span class="line">        category3_id,</span><br><span class="line">        tm_id,</span><br><span class="line">        create_time</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">spu as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        spu_name</span><br><span class="line">    from $&#123;APP&#125;.ods_spu_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c3 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name,</span><br><span class="line">        category2_id</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category3</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c2 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name,</span><br><span class="line">        category1_id</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category2</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c1 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category1</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">tm as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        tm_name</span><br><span class="line">    from $&#123;APP&#125;.ods_base_trademark</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">attr as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        sku_id,</span><br><span class="line">        collect_set(named_struct(&#x27;attr_id&#x27;,attr_id,&#x27;value_id&#x27;,value_id,&#x27;attr_name&#x27;,attr_name,&#x27;value_name&#x27;,value_name)) attrs</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_attr_value</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">    group by sku_id</span><br><span class="line">),</span><br><span class="line">sale_attr as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        sku_id,</span><br><span class="line">        collect_set(named_struct(&#x27;sale_attr_id&#x27;,sale_attr_id,&#x27;sale_attr_value_id&#x27;,sale_attr_value_id,&#x27;sale_attr_name&#x27;,sale_attr_name,&#x27;sale_attr_value_name&#x27;,sale_attr_value_name)) sale_attrs</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_sale_attr_value</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">    group by sku_id</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_sku_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    sku.id,</span><br><span class="line">    sku.price,</span><br><span class="line">    sku.sku_name,</span><br><span class="line">    sku.sku_desc,</span><br><span class="line">    sku.weight,</span><br><span class="line">    sku.is_sale,</span><br><span class="line">    sku.spu_id,</span><br><span class="line">    spu.spu_name,</span><br><span class="line">    sku.category3_id,</span><br><span class="line">    c3.name,</span><br><span class="line">    c3.category2_id,</span><br><span class="line">    c2.name,</span><br><span class="line">    c2.category1_id,</span><br><span class="line">    c1.name,</span><br><span class="line">    sku.tm_id,</span><br><span class="line">    tm.tm_name,</span><br><span class="line">    attr.attrs,</span><br><span class="line">    sale_attr.sale_attrs,</span><br><span class="line">    sku.create_time</span><br><span class="line">from sku</span><br><span class="line">left join spu on sku.spu_id=spu.id</span><br><span class="line">left join c3 on sku.category3_id=c3.id</span><br><span class="line">left join c2 on c3.category2_id=c2.id</span><br><span class="line">left join c1 on c2.category1_id=c1.id</span><br><span class="line">left join tm on sku.tm_id=tm.id</span><br><span class="line">left join attr on sku.id=attr.sku_id</span><br><span class="line">left join sale_attr on sku.id=sale_attr.sku_id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">dim_base_province=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_base_province</span><br><span class="line">select</span><br><span class="line">    bp.id,</span><br><span class="line">    bp.name,</span><br><span class="line">    bp.area_code,</span><br><span class="line">    bp.iso_code,</span><br><span class="line">    bp.iso_3166_2,</span><br><span class="line">    bp.region_id,</span><br><span class="line">    bp.name</span><br><span class="line">from $&#123;APP&#125;.ods_base_province bp</span><br><span class="line">join $&#123;APP&#125;.ods_base_region br on bp.region_id = br.id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">dim_coupon_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_coupon_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    id,</span><br><span class="line">    coupon_name,</span><br><span class="line">    coupon_type,</span><br><span class="line">    condition_amount,</span><br><span class="line">    condition_num,</span><br><span class="line">    activity_id,</span><br><span class="line">    benefit_amount,</span><br><span class="line">    benefit_discount,</span><br><span class="line">    create_time,</span><br><span class="line">    range_type,</span><br><span class="line">    limit_num,</span><br><span class="line">    taken_count,</span><br><span class="line">    start_time,</span><br><span class="line">    end_time,</span><br><span class="line">    operate_time,</span><br><span class="line">    expire_time</span><br><span class="line">from $&#123;APP&#125;.ods_coupon_info</span><br><span class="line">where dt=&#x27;$do_date&#x27;;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">dim_activity_rule_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_activity_rule_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    ar.id,</span><br><span class="line">    ar.activity_id,</span><br><span class="line">    ai.activity_name,</span><br><span class="line">    ar.activity_type,</span><br><span class="line">    ai.start_time,</span><br><span class="line">    ai.end_time,</span><br><span class="line">    ai.create_time,</span><br><span class="line">    ar.condition_amount,</span><br><span class="line">    ar.condition_num,</span><br><span class="line">    ar.benefit_amount,</span><br><span class="line">    ar.benefit_discount,</span><br><span class="line">    ar.benefit_level</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        activity_id,</span><br><span class="line">        activity_type,</span><br><span class="line">        condition_amount,</span><br><span class="line">        condition_num,</span><br><span class="line">        benefit_amount,</span><br><span class="line">        benefit_discount,</span><br><span class="line">        benefit_level</span><br><span class="line">    from $&#123;APP&#125;.ods_activity_rule</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">)ar</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        activity_name,</span><br><span class="line">        start_time,</span><br><span class="line">        end_time,</span><br><span class="line">        create_time</span><br><span class="line">    from $&#123;APP&#125;.ods_activity_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">)ai</span><br><span class="line">on ar.activity_id=ai.id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;dim_user_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_user_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_sku_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_sku_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_base_province&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_base_province&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_coupon_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_coupon_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_activity_rule_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_activity_rule_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;all&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_user_info$dim_sku_info$dim_coupon_info$dim_activity_rule_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="ods-to-dim-db-first-time-sh"><a href="#ods-to-dim-db-first-time-sh" class="headerlink" title="ods_to_dim_db_first_time.sh"></a>ods_to_dim_db_first_time.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">   do_date=$2</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入日期参数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line"># 用户维度表（拉链表）</span><br><span class="line">dim_user_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_user_info partition(dt=&#x27;9999-99-99&#x27;)</span><br><span class="line">select</span><br><span class="line">    id,</span><br><span class="line">    login_name,</span><br><span class="line">    nick_name,</span><br><span class="line">    md5(name),</span><br><span class="line">    md5(phone_num),</span><br><span class="line">    md5(email),</span><br><span class="line">    user_level,</span><br><span class="line">    birthday,</span><br><span class="line">    gender,</span><br><span class="line">    create_time,</span><br><span class="line">    operate_time,</span><br><span class="line">    &#x27;$do_date&#x27;,</span><br><span class="line">    &#x27;9999-99-99&#x27;</span><br><span class="line">from $&#123;APP&#125;.ods_user_info</span><br><span class="line">where dt=&#x27;$do_date&#x27;;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line"># 商品维度表（全量）</span><br><span class="line">dim_sku_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">with</span><br><span class="line">sku as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        price,</span><br><span class="line">        sku_name,</span><br><span class="line">        sku_desc,</span><br><span class="line">        weight,</span><br><span class="line">        is_sale,</span><br><span class="line">        spu_id,</span><br><span class="line">        category3_id,</span><br><span class="line">        tm_id,</span><br><span class="line">        create_time</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">spu as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        spu_name</span><br><span class="line">    from $&#123;APP&#125;.ods_spu_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c3 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name,</span><br><span class="line">        category2_id</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category3</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c2 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name,</span><br><span class="line">        category1_id</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category2</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">c1 as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        name</span><br><span class="line">    from $&#123;APP&#125;.ods_base_category1</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">tm as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        tm_name</span><br><span class="line">    from $&#123;APP&#125;.ods_base_trademark</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">),</span><br><span class="line">attr as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        sku_id,</span><br><span class="line">        collect_set(named_struct(&#x27;attr_id&#x27;,attr_id,&#x27;value_id&#x27;,value_id,&#x27;attr_name&#x27;,attr_name,&#x27;value_name&#x27;,value_name)) attrs</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_attr_value</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">    group by sku_id</span><br><span class="line">),</span><br><span class="line">sale_attr as</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        sku_id,</span><br><span class="line">        collect_set(named_struct(&#x27;sale_attr_id&#x27;,sale_attr_id,&#x27;sale_attr_value_id&#x27;,sale_attr_value_id,&#x27;sale_attr_name&#x27;,sale_attr_name,&#x27;sale_attr_value_name&#x27;,sale_attr_value_name)) sale_attrs</span><br><span class="line">    from $&#123;APP&#125;.ods_sku_sale_attr_value</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">    group by sku_id</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_sku_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    sku.id,</span><br><span class="line">    sku.price,</span><br><span class="line">    sku.sku_name,</span><br><span class="line">    sku.sku_desc,</span><br><span class="line">    sku.weight,</span><br><span class="line">    sku.is_sale,</span><br><span class="line">    sku.spu_id,</span><br><span class="line">    spu.spu_name,</span><br><span class="line">    sku.category3_id,</span><br><span class="line">    c3.name,</span><br><span class="line">    c3.category2_id,</span><br><span class="line">    c2.name,</span><br><span class="line">    c2.category1_id,</span><br><span class="line">    c1.name,</span><br><span class="line">    sku.tm_id,</span><br><span class="line">    tm.tm_name,</span><br><span class="line">    attr.attrs,</span><br><span class="line">    sale_attr.sale_attrs,</span><br><span class="line">    sku.create_time</span><br><span class="line">from sku</span><br><span class="line">left join spu on sku.spu_id=spu.id</span><br><span class="line">left join c3 on sku.category3_id=c3.id</span><br><span class="line">left join c2 on c3.category2_id=c2.id</span><br><span class="line">left join c1 on c2.category1_id=c1.id</span><br><span class="line">left join tm on sku.tm_id=tm.id</span><br><span class="line">left join attr on sku.id=attr.sku_id</span><br><span class="line">left join sale_attr on sku.id=sale_attr.sku_id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line"># 地区维度表（特殊）</span><br><span class="line">dim_base_province=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_base_province</span><br><span class="line">select</span><br><span class="line">    bp.id,</span><br><span class="line">    bp.name,</span><br><span class="line">    bp.area_code,</span><br><span class="line">    bp.iso_code,</span><br><span class="line">    bp.iso_3166_2,</span><br><span class="line">    bp.region_id,</span><br><span class="line">    br.region_name</span><br><span class="line">from $&#123;APP&#125;.ods_base_province bp</span><br><span class="line">join $&#123;APP&#125;.ods_base_region br on bp.region_id = br.id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line"># 优惠券维度表（全量）</span><br><span class="line">dim_coupon_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_coupon_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    id,</span><br><span class="line">    coupon_name,</span><br><span class="line">    coupon_type,</span><br><span class="line">    condition_amount,</span><br><span class="line">    condition_num,</span><br><span class="line">    activity_id,</span><br><span class="line">    benefit_amount,</span><br><span class="line">    benefit_discount,</span><br><span class="line">    create_time,</span><br><span class="line">    range_type,</span><br><span class="line">    limit_num,</span><br><span class="line">    taken_count,</span><br><span class="line">    start_time,</span><br><span class="line">    end_time,</span><br><span class="line">    operate_time,</span><br><span class="line">    expire_time</span><br><span class="line">from $&#123;APP&#125;.ods_coupon_info</span><br><span class="line">where dt=&#x27;$do_date&#x27;;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line"># 活动维度表（全量）</span><br><span class="line">dim_activity_rule_info=&quot;</span><br><span class="line">set hive.input.format=org.apache.hadoop.hive.ql.io.HiveInputFormat;</span><br><span class="line">insert overwrite table $&#123;APP&#125;.dim_activity_rule_info partition(dt=&#x27;$do_date&#x27;)</span><br><span class="line">select</span><br><span class="line">    ar.id,</span><br><span class="line">    ar.activity_id,</span><br><span class="line">    ai.activity_name,</span><br><span class="line">    ar.activity_type,</span><br><span class="line">    ai.start_time,</span><br><span class="line">    ai.end_time,</span><br><span class="line">    ai.create_time,</span><br><span class="line">    ar.condition_amount,</span><br><span class="line">    ar.condition_num,</span><br><span class="line">    ar.benefit_amount,</span><br><span class="line">    ar.benefit_discount,</span><br><span class="line">    ar.benefit_level</span><br><span class="line">from</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        activity_id,</span><br><span class="line">        activity_type,</span><br><span class="line">        condition_amount,</span><br><span class="line">        condition_num,</span><br><span class="line">        benefit_amount,</span><br><span class="line">        benefit_discount,</span><br><span class="line">        benefit_level</span><br><span class="line">    from $&#123;APP&#125;.ods_activity_rule</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">)ar</span><br><span class="line">left join</span><br><span class="line">(</span><br><span class="line">    select</span><br><span class="line">        id,</span><br><span class="line">        activity_name,</span><br><span class="line">        start_time,</span><br><span class="line">        end_time,</span><br><span class="line">        create_time</span><br><span class="line">    from $&#123;APP&#125;.ods_activity_info</span><br><span class="line">    where dt=&#x27;$do_date&#x27;</span><br><span class="line">)ai</span><br><span class="line">on ar.activity_id=ai.id;</span><br><span class="line">&quot;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;dim_user_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_user_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_sku_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_sku_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_base_province&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_base_province&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_coupon_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_coupon_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;dim_activity_rule_info&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_activity_rule_info&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">&quot;all&quot;)&#123;</span><br><span class="line">    hive -e &quot;$dim_user_info$dim_sku_info$dim_coupon_info$dim_activity_rule_info$dim_base_province&quot;</span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="tail-f-sh"><a href="#tail-f-sh" class="headerlink" title="tail-f.sh"></a>tail-f.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ================== 展示本地日志文件最后几行输出:tail -f ./$1 ==================</span><br><span class="line">tail -f ./$1</span><br></pre></td></tr></table></figure><h1 id="which-sh"><a href="#which-sh" class="headerlink" title="which.sh"></a>which.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ================== 查看 $1 文件位置的命令 :which $1 ==================</span><br><span class="line">which $1</span><br></pre></td></tr></table></figure><h1 id="azkaban-sh"><a href="#azkaban-sh" class="headerlink" title="azkaban.sh"></a>azkaban.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">start-web()&#123;</span><br><span class="line">        for i in hadoop102</span><br><span class="line">        do</span><br><span class="line">                ssh $i &quot;cd /opt/module/azkaban/azkaban-web-server-3.84.4;bin/start-web.sh&quot;</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop-web()&#123;</span><br><span class="line">        for i in hadoop102</span><br><span class="line">        do</span><br><span class="line">                ssh $i &quot;cd /opt/module/azkaban/azkaban-web-server-3.84.4;bin/shutdown-web.sh&quot;</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start-exec()&#123;</span><br><span class="line">        for i in hadoop100 hadoop101 hadoop102</span><br><span class="line">        do</span><br><span class="line">                ssh $i &quot;cd /opt/module/azkaban/azkaban-exec-server-3.84.4;bin/start-exec.sh&quot;</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">active-exec()&#123;</span><br><span class="line">        for i in hadoop100 hadoop101 hadoop102</span><br><span class="line">        do</span><br><span class="line">                ssh $i &quot;curl -G &#x27;$i:12321/executor?action=activate&#x27; &amp;&amp; echo&quot;</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">stop-exec()&#123;</span><br><span class="line">        for i in hadoop100 hadoop101 hadoop102</span><br><span class="line">        do</span><br><span class="line">                ssh $i &quot;cd /opt/module/azkaban/azkaban-exec-server-3.84.4;bin/shutdown-exec.sh&quot;</span><br><span class="line">        done</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case $1 in   </span><br><span class="line">        start-exec)</span><br><span class="line">                start-exec</span><br><span class="line">        ;;</span><br><span class="line">        active-exec)</span><br><span class="line">                active-exec</span><br><span class="line">        ;;</span><br><span class="line">        stop-exec)</span><br><span class="line">                stop-exec</span><br><span class="line">        ;;</span><br><span class="line">        start-web)</span><br><span class="line">                start-web</span><br><span class="line">        ;;</span><br><span class="line">        stop-web)</span><br><span class="line">                stop-web</span><br><span class="line">        ;;</span><br><span class="line">        </span><br><span class="line">        start)</span><br><span class="line">        echo &quot;=============== 启动executor ================&quot;</span><br><span class="line">                start-exec</span><br><span class="line">                sleep 10</span><br><span class="line">        echo &quot;=============== 激活executor ================&quot;</span><br><span class="line">                active-exec</span><br><span class="line">                sleep 5</span><br><span class="line">        echo &quot;=============== 启动webserver ===============&quot;</span><br><span class="line">                start-web</span><br><span class="line">        ;;</span><br><span class="line"></span><br><span class="line">        stop)</span><br><span class="line">        echo &quot;=============== 关闭executor ================&quot;</span><br><span class="line">                stop-exec</span><br><span class="line">                sleep 5</span><br><span class="line">        echo &quot;=============== 关闭webserver ===============&quot;</span><br><span class="line">                stop-web</span><br><span class="line">        ;;</span><br><span class="line">        *)</span><br><span class="line">        echo &#x27;Input args error...&#x27;</span><br><span class="line">esac</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="cluster5-0-all-sh"><a href="#cluster5-0-all-sh" class="headerlink" title="cluster5.0_all.sh"></a>cluster5.0_all.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)&#123;</span><br><span class="line">        echo ================== 启动 离线集群 ==================</span><br><span class="line"></span><br><span class="line">        #启动 Zookeeper集群</span><br><span class="line">        myzookeeper.sh start</span><br><span class="line"></span><br><span class="line">        #启动 Hadoop集群</span><br><span class="line">        myhadoop.sh start</span><br><span class="line"></span><br><span class="line">        #启动 Kafka采集集群</span><br><span class="line">        mykafka.sh start</span><br><span class="line"></span><br><span class="line">        #启动 Flume采集集群</span><br><span class="line">        applog-flume-kafka-topic_log.sh start</span><br><span class="line"></span><br><span class="line">        #启动 Flume消费集群</span><br><span class="line">        kafka-topic_log-hdfs-origin_data-gmall-log-topic_log.sh start</span><br><span class="line"></span><br><span class="line">        #启动flume消费maxwell传到kafka的数据</span><br><span class="line">        db_maxwell_kafka_flume_hdfs.sh start</span><br><span class="line"></span><br><span class="line">        #启动hive的metastore元数据服务</span><br><span class="line">        hive_metastore.sh start</span><br><span class="line"></span><br><span class="line">        #启动maxwell</span><br><span class="line">        maxwell.sh start</span><br><span class="line"></span><br><span class="line">        #启动hive的hiveserver2服务</span><br><span class="line">        hive_hiveserver2.sh start</span><br><span class="line"></span><br><span class="line">        &#125;;;</span><br><span class="line">&quot;stop&quot;)&#123;</span><br><span class="line">        echo ================== 停止 离线集群 ==================</span><br><span class="line"></span><br><span class="line">        #启动hive的hiveserver2服务</span><br><span class="line">        hive_hiveserver2.sh stop</span><br><span class="line"></span><br><span class="line">        #关闭maxwell</span><br><span class="line">        maxwell.sh stop</span><br><span class="line"></span><br><span class="line">        #启动hive的metastore元数据服务</span><br><span class="line">        hive_metastore.sh stop</span><br><span class="line"></span><br><span class="line">        #关闭flume消费maxwell传到kafka的数据</span><br><span class="line">        db_maxwell_kafka_flume_hdfs.sh stop</span><br><span class="line"></span><br><span class="line">        #停止 Flume消费集群</span><br><span class="line">        kafka-topic_log-hdfs-origin_data-gmall-log-topic_log.sh stop</span><br><span class="line"></span><br><span class="line">        #停止 Flume采集集群</span><br><span class="line">        applog-flume-kafka-topic_log.sh stop</span><br><span class="line"></span><br><span class="line">        #停止 Kafka采集集群</span><br><span class="line">        mykafka.sh stop</span><br><span class="line"></span><br><span class="line">        #停止 Hadoop集群</span><br><span class="line">        myhadoop.sh stop</span><br><span class="line"></span><br><span class="line">        #停止 Zookeeper集群</span><br><span class="line">        myzookeeper.sh stop</span><br><span class="line"></span><br><span class="line">&#125;;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="xcall-sh"><a href="#xcall-sh" class="headerlink" title="xcall.sh"></a>xcall.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">echo &quot;查看每台节点上内存使用情况的命令:  xcall.sh free -h &quot;</span><br><span class="line">echo &quot;jps -ml 显示更多进程的信息,防止重名进程傻傻分不清&quot;</span><br><span class="line">for i in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">    echo --------- $i ----------</span><br><span class="line">    ssh $i &quot;$*&quot;</span><br><span class="line">done</span><br></pre></td></tr></table></figure><h1 id="xsync"><a href="#xsync" class="headerlink" title="xsync"></a>xsync</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">#1. 判断参数个数</span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo Not Enough Arguement!</span><br><span class="line">    exit;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">#2. 遍历集群所有机器</span><br><span class="line">for host in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104</span><br><span class="line">do</span><br><span class="line">    echo ====================  $host  ====================</span><br><span class="line">    #3. 遍历所有目录，挨个发送</span><br><span class="line"></span><br><span class="line">    for file in $@</span><br><span class="line">    do</span><br><span class="line">        #4. 判断文件是否存在</span><br><span class="line">        if [ -e $file ]</span><br><span class="line">            then</span><br><span class="line">                #5. 获取父目录</span><br><span class="line">                pdir=$(cd -P $(dirname $file); pwd)</span><br><span class="line"></span><br><span class="line">                #6. 获取当前文件的名称</span><br><span class="line">                fname=$(basename $file)</span><br><span class="line">                ssh $host &quot;mkdir -p $pdir&quot;</span><br><span class="line">                rsync -av $pdir/$fname $host:$pdir</span><br><span class="line">            else</span><br><span class="line">                echo $file does not exists!</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="myhbase-sh"><a href="#myhbase-sh" class="headerlink" title="myhbase.sh"></a>myhbase.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 hbase ===================&quot;</span><br><span class="line"></span><br><span class="line">        # echo &quot; --------------- 启动 hdfs ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hbase-2.0.5/bin/start-hbase.sh&quot;</span><br><span class="line">        # sleep 5</span><br><span class="line">        # ssh hadoop102 &quot;/opt/module/hbase-2.0.5/bin/hbase-daemon.sh start regionserver&quot;</span><br><span class="line">        </span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 hbase ===================&quot;</span><br><span class="line"></span><br><span class="line">        # echo &quot; --------------- 关闭 historyserver ---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/hbase-2.0.5/bin/stop-hbase.sh&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="hive-load-hdfsDB-to-hiveHdfs5-0-sh"><a href="#hive-load-hdfsDB-to-hiveHdfs5-0-sh" class="headerlink" title="hive_load_hdfsDB_to_hiveHdfs5.0.sh"></a>hive_load_hdfsDB_to_hiveHdfs5.0.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">   do_date=$2</span><br><span class="line">else </span><br><span class="line">   do_date=`date -d &#x27;-1 day&#x27; +%F`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">load_data()&#123;</span><br><span class="line">    sql=&quot;&quot;</span><br><span class="line">    for i in $*; do</span><br><span class="line">        #判断路径是否存在</span><br><span class="line">        hadoop fs -test -e /origin_data/$APP/db/$&#123;i:4&#125;/$do_date</span><br><span class="line">        #路径存在方可装载数据</span><br><span class="line">        if [[ $? = 0 ]]; then</span><br><span class="line">            sql=$sql&quot;load data inpath &#x27;/origin_data/$APP/db/$&#123;i:4&#125;/$do_date&#x27; OVERWRITE into table $&#123;APP&#125;.$i partition(dt=&#x27;$do_date&#x27;);&quot;</span><br><span class="line">        fi</span><br><span class="line">    done</span><br><span class="line">    hive -e &quot;$sql&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    &quot;ods_activity_info_full&quot;)</span><br><span class="line">        load_data &quot;ods_activity_info_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_activity_rule_full&quot;)</span><br><span class="line">        load_data &quot;ods_activity_rule_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_category1_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_category1_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_category2_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_category2_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_category3_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_category3_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_dic_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_dic_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_province_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_province_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_region_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_region_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_base_trademark_full&quot;)</span><br><span class="line">        load_data &quot;ods_base_trademark_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_cart_info_full&quot;)</span><br><span class="line">        load_data &quot;ods_cart_info_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_coupon_info_full&quot;)</span><br><span class="line">        load_data &quot;ods_coupon_info_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_sku_attr_value_full&quot;)</span><br><span class="line">        load_data &quot;ods_sku_attr_value_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_sku_info_full&quot;)</span><br><span class="line">        load_data &quot;ods_sku_info_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_sku_sale_attr_value_full&quot;)</span><br><span class="line">        load_data &quot;ods_sku_sale_attr_value_full&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_spu_info_full&quot;)</span><br><span class="line">        load_data &quot;ods_spu_info_full&quot;</span><br><span class="line">    ;;</span><br><span class="line"></span><br><span class="line">    &quot;ods_cart_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_cart_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_comment_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_comment_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_coupon_use_inc&quot;)</span><br><span class="line">        load_data &quot;ods_coupon_use_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_favor_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_favor_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_detail_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_detail_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_detail_activity_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_detail_activity_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_detail_coupon_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_detail_coupon_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_refund_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_refund_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_order_status_log_inc&quot;)</span><br><span class="line">        load_data &quot;ods_order_status_log_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_payment_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_payment_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_refund_payment_inc&quot;)</span><br><span class="line">        load_data &quot;ods_refund_payment_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;ods_user_info_inc&quot;)</span><br><span class="line">        load_data &quot;ods_user_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">    &quot;all&quot;)</span><br><span class="line">        load_data &quot;ods_activity_info_full&quot; &quot;ods_activity_rule_full&quot; &quot;ods_base_category1_full&quot; &quot;ods_base_category2_full&quot; &quot;ods_base_category3_full&quot; &quot;ods_base_dic_full&quot; &quot;ods_base_province_full&quot; &quot;ods_base_region_full&quot; &quot;ods_base_trademark_full&quot; &quot;ods_cart_info_full&quot; &quot;ods_coupon_info_full&quot; &quot;ods_sku_attr_value_full&quot; &quot;ods_sku_info_full&quot; &quot;ods_sku_sale_attr_value_full&quot; &quot;ods_spu_info_full&quot; &quot;ods_cart_info_inc&quot; &quot;ods_comment_info_inc&quot; &quot;ods_coupon_use_inc&quot; &quot;ods_favor_info_inc&quot; &quot;ods_order_detail_inc&quot; &quot;ods_order_detail_activity_inc&quot; &quot;ods_order_detail_coupon_inc&quot; &quot;ods_order_info_inc&quot; &quot;ods_order_refund_info_inc&quot; &quot;ods_order_status_log_inc&quot; &quot;ods_payment_info_inc&quot; &quot;ods_refund_payment_inc&quot; &quot;ods_user_info_inc&quot;</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="hive-load-hdfsLog-to-hiveHdfs5-0-sh"><a href="#hive-load-hdfsLog-to-hiveHdfs5-0-sh" class="headerlink" title="hive_load_hdfsLog_to_hiveHdfs5.0.sh"></a>hive_load_hdfsLog_to_hiveHdfs5.0.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line"># 定义变量方便修改</span><br><span class="line">APP=gmall</span><br><span class="line"></span><br><span class="line"># 如果是输入的日期按照取输入日期；如果没输入日期取当前时间的前一天</span><br><span class="line">if [ -n &quot;$1&quot; ] ;then</span><br><span class="line">   do_date=$1</span><br><span class="line">else </span><br><span class="line">   do_date=`date -d &quot;-1 day&quot; +%F`</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">echo ================== 日志日期为 $do_date ==================</span><br><span class="line">#/origin_data/gmall/log/topic_log/2021-12-02</span><br><span class="line">sql=&quot;</span><br><span class="line">load data inpath &#x27;/origin_data/$APP/log/topic_log/$do_date&#x27; into table $&#123;APP&#125;.ods_log_inc partition(dt=&#x27;$do_date&#x27;);</span><br><span class="line">&quot;</span><br><span class="line">#第一步: 执行load data 将hdfs上的数据加载进hive里面</span><br><span class="line">hive -e &quot;$sql&quot;</span><br><span class="line"></span><br><span class="line">#第二步: 创建lzop索引   ------&gt; 数仓5.0使用的是gzip,所以不用建立索引</span><br><span class="line"># hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /warehouse/$APP/ods/ods_log/dt=$do_date</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="myjps-sh"><a href="#myjps-sh" class="headerlink" title="myjps.sh"></a>myjps.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">for host in hadoop100 hadoop101 hadoop102 hadoop103 hadoop104 </span><br><span class="line">do</span><br><span class="line">        echo =============== $host ===============</span><br><span class="line">        ssh $host jps </span><br><span class="line">done</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="hive-hiveserver2-sh"><a href="#hive-hiveserver2-sh" class="headerlink" title="hive_hiveserver2.sh"></a>hive_hiveserver2.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot;------------ 开启hive hiveserver2服务去连接mysql中的元数据,后台启动 ---------------&quot;</span><br><span class="line">        # echo &quot;------------ hive连接mysql中的元数据有2种方式: 1）直接连接：直接去mysql中连接metastore库；2）通过服务连：hive有2种服务分别是metastore和hiveserver2，hive通过metastore服务去连接mysql中的元数据。---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;nohup /opt/module/hive-3.1.2/bin/hiveserver2 1&gt;/dev/null 2&gt;&amp;1 &amp;&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; ----------- 关闭hive hiveserver2服务去连接mysql中的元数据,后台启动 --------&quot;</span><br><span class="line">        ssh hadoop102 &quot;ps -ef | grep hive_hiveserver2 | grep -v grep |awk &#x27;&#123;print \$2&#125;&#x27; | xargs -n1 kill&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="hive-metastore-sh"><a href="#hive-metastore-sh" class="headerlink" title="hive_metastore.sh"></a>hive_metastore.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot;------------ 开启hive metastore 服务去连接mysql中的元数据,后台启动 ---------------&quot;</span><br><span class="line">        # echo &quot;------------ hive连接mysql中的元数据有2种方式: 1）直接连接：直接去mysql中连接metastore库；2）通过服务连：hive有2种服务分别是metastore和hiveserver2，hive通过metastore服务去连接mysql中的元数据。---------------&quot;</span><br><span class="line">        ssh hadoop102 &quot;nohup /opt/module/hive-3.1.2/bin/hive --service metastore&gt;log.txt 2&gt;&amp;1 &amp;&quot;</span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; ----------- 关闭hive metastore 服务去连接mysql中的元数据,后台启动 --------&quot;</span><br><span class="line">        ssh hadoop102 &quot;ps -ef | grep hive | grep -v grep |awk &#x27;&#123;print \$2&#125;&#x27; | xargs -n1 kill&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="ls-al-sh"><a href="#ls-al-sh" class="headerlink" title="ls-al.sh"></a>ls-al.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">echo ================== 展示隐藏文件,Linux命令: ls - al ==================</span><br><span class="line">ls -al</span><br></pre></td></tr></table></figure><h1 id="ls-grep-sh"><a href="#ls-grep-sh" class="headerlink" title="ls-grep.sh"></a>ls-grep.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">#$1: 脚本的第一个参数 做非空判断</span><br><span class="line">if [ -n &quot;$1&quot; ] ;then</span><br><span class="line">   name=$1</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入一个查询参数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">echo ================== 查看文件夹下是否有包含 $name 名称的文件 ==================</span><br><span class="line">ls | grep $name</span><br></pre></td></tr></table></figure><h1 id="maxwell-sh"><a href="#maxwell-sh" class="headerlink" title="maxwell.sh"></a>maxwell.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">MAXWELL_HOME=/opt/module/maxwell-1.29.2</span><br><span class="line"></span><br><span class="line">status_maxwell()&#123;</span><br><span class="line">    result=`ps -ef | grep maxwell | grep -v grep | wc -l`</span><br><span class="line">    return $result</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">start_maxwell()&#123;</span><br><span class="line">    # status_maxwell</span><br><span class="line">    # if [[ $? -lt 1 ]]; then</span><br><span class="line">    #     echo &quot;启动Maxwell&quot;</span><br><span class="line">    #     $MAXWELL_HOME/bin/maxwell --config $MAXWELL_HOME/config.properties --daemon</span><br><span class="line">    # else</span><br><span class="line">    #     echo &quot;Maxwell正在运行&quot;</span><br><span class="line">    # fi</span><br><span class="line">    $MAXWELL_HOME/bin/maxwell --config $MAXWELL_HOME/config.properties --daemon</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">stop_maxwell()&#123;</span><br><span class="line">    status_maxwell</span><br><span class="line">    if [[ $? -gt 0 ]]; then</span><br><span class="line">        echo &quot;停止Maxwell&quot;</span><br><span class="line">        ps -ef | grep maxwell | grep -v grep | awk &#x27;&#123;print $2&#125;&#x27; | xargs kill -9</span><br><span class="line">    else</span><br><span class="line">        echo &quot;Maxwell未在运行&quot;</span><br><span class="line">    fi</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">    start )</span><br><span class="line">        start_maxwell</span><br><span class="line">    ;;</span><br><span class="line">    stop )</span><br><span class="line">        stop_maxwell</span><br><span class="line">    ;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="mydolphinscheduler-sh"><a href="#mydolphinscheduler-sh" class="headerlink" title="mydolphinscheduler.sh"></a>mydolphinscheduler.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 dolphinscheduler 集群 ===================&quot;</span><br><span class="line">        echo &quot;</span><br><span class="line">                1）一键启停所有服务</span><br><span class="line">                ./bin/start-all.sh</span><br><span class="line">                ./bin/stop-all.sh</span><br><span class="line">                2）启停 Master</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start master-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop master-server</span><br><span class="line">                3）启停 Worker</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start worker-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop worker-server</span><br><span class="line">                4）启停 Api</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start api-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop api-server</span><br><span class="line">                5）启停 Logger</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start logger-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop logger-server</span><br><span class="line">                6）启停 Alert</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start alert-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop alert-server</span><br><span class="line">            &quot;</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;/opt/module/dolphinscheduler-1.3.9/bin/start-all.sh&quot;</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 dolphinscheduler 集群 ===================&quot;</span><br><span class="line">        echo &quot;</span><br><span class="line">                1）一键启停所有服务</span><br><span class="line">                ./bin/start-all.sh</span><br><span class="line">                ./bin/stop-all.sh</span><br><span class="line">                2）启停 Master</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start master-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop master-server</span><br><span class="line">                3）启停 Worker</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start worker-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop worker-server</span><br><span class="line">                4）启停 Api</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start api-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop api-server</span><br><span class="line">                5）启停 Logger</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start logger-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop logger-server</span><br><span class="line">                6）启停 Alert</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start alert-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop alert-server</span><br><span class="line">            &quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/dolphinscheduler-1.3.9/bin/stop-all.sh&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="mydolphinscheduler-standalone-sh"><a href="#mydolphinscheduler-standalone-sh" class="headerlink" title="mydolphinscheduler-standalone.sh"></a>mydolphinscheduler-standalone.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 dolphinscheduler 单机模式(standalone) 单机模式内置zookeeper,所以必须关闭zookeeper===================&quot;</span><br><span class="line">        echo &quot;</span><br><span class="line">                1）一键启停所有服务</span><br><span class="line">                ./bin/start-all.sh</span><br><span class="line">                ./bin/stop-all.sh</span><br><span class="line">                2）启停 Master</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start master-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop master-server</span><br><span class="line">                3）启停 Worker</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start worker-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop worker-server</span><br><span class="line">                4）启停 Api</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start api-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop api-server</span><br><span class="line">                5）启停 Logger</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start logger-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop logger-server</span><br><span class="line">                6）启停 Alert</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start alert-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop alert-server</span><br><span class="line">            &quot;</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;/opt/module/dolphinscheduler-1.3.9/bin/dolphinscheduler-daemon.sh start standalone-server&quot;</span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 dolphinscheduler 单机模式(standalone) 单机模式内置zookeeper,所以必须关闭zookeeper===================&quot;</span><br><span class="line">        echo &quot;</span><br><span class="line">                1）一键启停所有服务</span><br><span class="line">                ./bin/start-all.sh</span><br><span class="line">                ./bin/stop-all.sh</span><br><span class="line">                2）启停 Master</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start master-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop master-server</span><br><span class="line">                3）启停 Worker</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start worker-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop worker-server</span><br><span class="line">                4）启停 Api</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start api-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop api-server</span><br><span class="line">                5）启停 Logger</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start logger-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop logger-server</span><br><span class="line">                6）启停 Alert</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh start alert-server</span><br><span class="line">                ./bin/dolphinscheduler-daemon.sh stop alert-server</span><br><span class="line">            &quot;</span><br><span class="line">        ssh hadoop102 &quot;/opt/module/dolphinscheduler-1.3.9/bin/dolphinscheduler-daemon.sh stop standalone-server&quot;</span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="mygrafana-sh"><a href="#mygrafana-sh" class="headerlink" title="mygrafana.sh"></a>mygrafana.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"></span><br><span class="line">if [ $# -lt 1 ]</span><br><span class="line">then</span><br><span class="line">    echo &quot;No Args Input...&quot;</span><br><span class="line">    exit ;</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">&quot;start&quot;)</span><br><span class="line">        echo &quot; =================== 启动 Grafana ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot; sudo systemctl start grafana-server &quot;</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;sudo systemctl start grafana-server&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">;;</span><br><span class="line">&quot;stop&quot;)</span><br><span class="line">        echo &quot; =================== 关闭 Grafana ===================&quot;</span><br><span class="line"></span><br><span class="line">        echo &quot; sudo systemctl stop grafana-server &quot;</span><br><span class="line"></span><br><span class="line">        ssh hadoop102 &quot;sudo systemctl stop grafana-server&quot;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">       </span><br><span class="line">;;</span><br><span class="line">*)</span><br><span class="line">    echo &quot;Input Args Error...&quot;</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="sqoop-import-mysql-to-hdfs-ods-every-day-sh"><a href="#sqoop-import-mysql-to-hdfs-ods-every-day-sh" class="headerlink" title="sqoop_import_mysql_to_hdfs_ods_every_day.sh"></a>sqoop_import_mysql_to_hdfs_ods_every_day.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">#每日同步脚本 , 需要考虑到新增及变化的 增量同步</span><br><span class="line">APP=gmall</span><br><span class="line">sqoop=/opt/module/sqoop-1.4.6/bin/sqoop</span><br><span class="line"></span><br><span class="line">#每天一天的日期</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">    do_date=$2</span><br><span class="line">else</span><br><span class="line">    do_date=`date -d &#x27;-1 day&#x27; +%F`</span><br><span class="line">fi</span><br><span class="line"></span><br><span class="line">import_data()&#123;</span><br><span class="line">$sqoop import \</span><br><span class="line">--connect jdbc:mysql://hadoop102:3306/$APP \</span><br><span class="line">--username root \</span><br><span class="line">--password shangbaishuyao \</span><br><span class="line">--target-dir /origin_data/$APP/db/$1/$do_date \</span><br><span class="line">--delete-target-dir \</span><br><span class="line">--query &quot;$2 and  \$CONDITIONS&quot; \</span><br><span class="line">--num-mappers 1 \</span><br><span class="line">--fields-terminated-by &#x27;\t&#x27; \</span><br><span class="line">--compress \</span><br><span class="line">--compression-codec lzop \</span><br><span class="line">--null-string &#x27;\\N&#x27; \</span><br><span class="line">--null-non-string &#x27;\\N&#x27;</span><br><span class="line"></span><br><span class="line">hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /origin_data/$APP/db/$1/$do_date</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 每日同步策略是新增及变化的 sqoop增量导入</span><br><span class="line">import_order_info()&#123;</span><br><span class="line">  import_data order_info &quot;select</span><br><span class="line">                            id, </span><br><span class="line">                            total_amount, </span><br><span class="line">                            order_status, </span><br><span class="line">                            user_id, </span><br><span class="line">                            payment_way,</span><br><span class="line">                            delivery_address,</span><br><span class="line">                            out_trade_no, </span><br><span class="line">                            create_time, </span><br><span class="line">                            operate_time,</span><br><span class="line">                            expire_time,</span><br><span class="line">                            tracking_no,</span><br><span class="line">                            province_id,</span><br><span class="line">                            activity_reduce_amount,</span><br><span class="line">                            coupon_reduce_amount,                            </span><br><span class="line">                            original_total_amount,</span><br><span class="line">                            feight_fee,</span><br><span class="line">                            feight_fee_reduce      </span><br><span class="line">                        from order_info</span><br><span class="line">                        where </span><br><span class="line">                        (date_format(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27; </span><br><span class="line">                        or date_format(operate_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;)&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_coupon_use()&#123;</span><br><span class="line">  import_data coupon_use &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          coupon_id,</span><br><span class="line">                          user_id,</span><br><span class="line">                          order_id,</span><br><span class="line">                          coupon_status,</span><br><span class="line">                          get_time,</span><br><span class="line">                          using_time,</span><br><span class="line">                          used_time,</span><br><span class="line">                          expire_time</span><br><span class="line">                        from coupon_use</span><br><span class="line">                        where (date_format(get_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;</span><br><span class="line">                        or date_format(using_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;</span><br><span class="line">                        or date_format(used_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;</span><br><span class="line">                        or date_format(expire_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;)&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_status_log()&#123;</span><br><span class="line">  import_data order_status_log &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  order_id,</span><br><span class="line">                                  order_status,</span><br><span class="line">                                  operate_time</span><br><span class="line">                                from order_status_log</span><br><span class="line">                                where date_format(operate_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_user_info()&#123;</span><br><span class="line">  import_data &quot;user_info&quot; &quot;select </span><br><span class="line">                            id,</span><br><span class="line">                            login_name,</span><br><span class="line">                            nick_name,</span><br><span class="line">                            name,</span><br><span class="line">                            phone_num,</span><br><span class="line">                            email,</span><br><span class="line">                            user_level, </span><br><span class="line">                            birthday,</span><br><span class="line">                            gender,</span><br><span class="line">                            create_time,</span><br><span class="line">                            operate_time</span><br><span class="line">                          from user_info </span><br><span class="line">                          where (DATE_FORMAT(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27; </span><br><span class="line">                          or DATE_FORMAT(operate_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;)&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_detail()&#123;</span><br><span class="line">  import_data order_detail &quot;select </span><br><span class="line">                              id,</span><br><span class="line">                              order_id, </span><br><span class="line">                              sku_id,</span><br><span class="line">                              sku_name,</span><br><span class="line">                              order_price,</span><br><span class="line">                              sku_num, </span><br><span class="line">                              create_time,</span><br><span class="line">                              source_type,</span><br><span class="line">                              source_id,</span><br><span class="line">                              split_total_amount,</span><br><span class="line">                              split_activity_amount,</span><br><span class="line">                              split_coupon_amount</span><br><span class="line">                            from order_detail </span><br><span class="line">                            where DATE_FORMAT(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_payment_info()&#123;</span><br><span class="line">  import_data &quot;payment_info&quot;  &quot;select </span><br><span class="line">                                id,  </span><br><span class="line">                                out_trade_no, </span><br><span class="line">                                order_id, </span><br><span class="line">                                user_id, </span><br><span class="line">                                payment_type, </span><br><span class="line">                                trade_no, </span><br><span class="line">                                total_amount,  </span><br><span class="line">                                subject, </span><br><span class="line">                                payment_status,</span><br><span class="line">                                create_time,</span><br><span class="line">                                callback_time </span><br><span class="line">                              from payment_info </span><br><span class="line">                              where (DATE_FORMAT(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27; </span><br><span class="line">                              or DATE_FORMAT(callback_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;)&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 同步策略是增量同步 创建时间是每天的</span><br><span class="line">import_comment_info()&#123;</span><br><span class="line">  import_data comment_info &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              user_id,</span><br><span class="line">                              sku_id,</span><br><span class="line">                              spu_id,</span><br><span class="line">                              order_id,</span><br><span class="line">                              appraise,</span><br><span class="line">                              create_time</span><br><span class="line">                            from comment_info</span><br><span class="line">                            where date_format(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_refund_info()&#123;</span><br><span class="line">  import_data order_refund_info &quot;select</span><br><span class="line">                                id,</span><br><span class="line">                                user_id,</span><br><span class="line">                                order_id,</span><br><span class="line">                                sku_id,</span><br><span class="line">                                refund_type,</span><br><span class="line">                                refund_num,</span><br><span class="line">                                refund_amount,</span><br><span class="line">                                refund_reason_type,</span><br><span class="line">                                refund_status,</span><br><span class="line">                                create_time</span><br><span class="line">                              from order_refund_info</span><br><span class="line">                              where date_format(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 同步策略是全量同步,理论上where1=1可以不用写,但是import_data 这个函数 最终执行的sql是 --query &quot;$2 and  \$CONDITIONS&quot; \ 这个 我们为了满足sql的语法要求,因为前面有个and所以我们必须有where 1=1</span><br><span class="line">import_sku_info()&#123;</span><br><span class="line">  import_data sku_info &quot;select </span><br><span class="line">                          id,</span><br><span class="line">                          spu_id,</span><br><span class="line">                          price,</span><br><span class="line">                          sku_name,</span><br><span class="line">                          sku_desc,</span><br><span class="line">                          weight,</span><br><span class="line">                          tm_id,</span><br><span class="line">                          category3_id,</span><br><span class="line">                          is_sale,</span><br><span class="line">                          create_time</span><br><span class="line">                        from sku_info where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category1()&#123;</span><br><span class="line">  import_data &quot;base_category1&quot; &quot;select </span><br><span class="line">                                  id,</span><br><span class="line">                                  name </span><br><span class="line">                                from base_category1 where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category2()&#123;</span><br><span class="line">  import_data &quot;base_category2&quot; &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  name,</span><br><span class="line">                                  category1_id </span><br><span class="line">                                from base_category2 where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category3()&#123;</span><br><span class="line">  import_data &quot;base_category3&quot; &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  name,</span><br><span class="line">                                  category2_id</span><br><span class="line">                                from base_category3 where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_province()&#123;</span><br><span class="line">  import_data base_province &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              name,</span><br><span class="line">                              region_id,</span><br><span class="line">                              area_code,</span><br><span class="line">                              iso_code,</span><br><span class="line">                              iso_3166_2</span><br><span class="line">                            from base_province</span><br><span class="line">                            where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_region()&#123;</span><br><span class="line">  import_data base_region &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              region_name</span><br><span class="line">                            from base_region</span><br><span class="line">                            where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_trademark()&#123;</span><br><span class="line">  import_data base_trademark &quot;select</span><br><span class="line">                                id,</span><br><span class="line">                                tm_name</span><br><span class="line">                              from base_trademark</span><br><span class="line">                              where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_spu_info()&#123;</span><br><span class="line">  import_data spu_info &quot;select</span><br><span class="line">                            id,</span><br><span class="line">                            spu_name,</span><br><span class="line">                            category3_id,</span><br><span class="line">                            tm_id</span><br><span class="line">                          from spu_info</span><br><span class="line">                          where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_favor_info()&#123;</span><br><span class="line">  import_data favor_info &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          user_id,</span><br><span class="line">                          sku_id,</span><br><span class="line">                          spu_id,</span><br><span class="line">                          is_cancel,</span><br><span class="line">                          create_time,</span><br><span class="line">                          cancel_time</span><br><span class="line">                        from favor_info</span><br><span class="line">                        where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_cart_info()&#123;</span><br><span class="line">  import_data cart_info &quot;select</span><br><span class="line">                        id,</span><br><span class="line">                        user_id,</span><br><span class="line">                        sku_id,</span><br><span class="line">                        cart_price,</span><br><span class="line">                        sku_num,</span><br><span class="line">                        sku_name,</span><br><span class="line">                        create_time,</span><br><span class="line">                        operate_time,</span><br><span class="line">                        is_ordered,</span><br><span class="line">                        order_time,</span><br><span class="line">                        source_type,</span><br><span class="line">                        source_id</span><br><span class="line">                      from cart_info</span><br><span class="line">                      where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_coupon_info()&#123;</span><br><span class="line">  import_data coupon_info &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          coupon_name,</span><br><span class="line">                          coupon_type,</span><br><span class="line">                          condition_amount,</span><br><span class="line">                          condition_num,</span><br><span class="line">                          activity_id,</span><br><span class="line">                          benefit_amount,</span><br><span class="line">                          benefit_discount,</span><br><span class="line">                          create_time,</span><br><span class="line">                          range_type,</span><br><span class="line">                          limit_num,</span><br><span class="line">                          taken_count,</span><br><span class="line">                          start_time,</span><br><span class="line">                          end_time,</span><br><span class="line">                          operate_time,</span><br><span class="line">                          expire_time</span><br><span class="line">                        from coupon_info</span><br><span class="line">                        where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_activity_info()&#123;</span><br><span class="line">  import_data activity_info &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              activity_name,</span><br><span class="line">                              activity_type,</span><br><span class="line">                              start_time,</span><br><span class="line">                              end_time,</span><br><span class="line">                              create_time</span><br><span class="line">                            from activity_info</span><br><span class="line">                            where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_activity_rule()&#123;</span><br><span class="line">    import_data activity_rule &quot;select</span><br><span class="line">                                    id,</span><br><span class="line">                                    activity_id,</span><br><span class="line">                                    activity_type,</span><br><span class="line">                                    condition_amount,</span><br><span class="line">                                    condition_num,</span><br><span class="line">                                    benefit_amount,</span><br><span class="line">                                    benefit_discount,</span><br><span class="line">                                    benefit_level</span><br><span class="line">                                from activity_rule</span><br><span class="line">                                where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_dic()&#123;</span><br><span class="line">    import_data base_dic &quot;select</span><br><span class="line">                            dic_code,</span><br><span class="line">                            dic_name,</span><br><span class="line">                            parent_code,</span><br><span class="line">                            create_time,</span><br><span class="line">                            operate_time</span><br><span class="line">                          from base_dic</span><br><span class="line">                          where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_order_detail_activity()&#123;</span><br><span class="line">    import_data order_detail_activity &quot;select</span><br><span class="line">                                                                id,</span><br><span class="line">                                                                order_id,</span><br><span class="line">                                                                order_detail_id,</span><br><span class="line">                                                                activity_id,</span><br><span class="line">                                                                activity_rule_id,</span><br><span class="line">                                                                sku_id,</span><br><span class="line">                                                                create_time</span><br><span class="line">                                                            from order_detail_activity</span><br><span class="line">                                                            where date_format(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_order_detail_coupon()&#123;</span><br><span class="line">    import_data order_detail_coupon &quot;select</span><br><span class="line">                                                                id,</span><br><span class="line">                                                order_id,</span><br><span class="line">                                                                order_detail_id,</span><br><span class="line">                                                                coupon_id,</span><br><span class="line">                                                                coupon_use_id,</span><br><span class="line">                                                                sku_id,</span><br><span class="line">                                                                create_time</span><br><span class="line">                                                            from order_detail_coupon</span><br><span class="line">                                                            where date_format(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_refund_payment()&#123;</span><br><span class="line">    import_data refund_payment &quot;select</span><br><span class="line">                                                        id,</span><br><span class="line">                                                        out_trade_no,</span><br><span class="line">                                                        order_id,</span><br><span class="line">                                                        sku_id,</span><br><span class="line">                                                        payment_type,</span><br><span class="line">                                                        trade_no,</span><br><span class="line">                                                        total_amount,</span><br><span class="line">                                                        subject,</span><br><span class="line">                                                        refund_status,</span><br><span class="line">                                                        create_time,</span><br><span class="line">                                                        callback_time</span><br><span class="line">                                                    from refund_payment</span><br><span class="line">                                                    where (DATE_FORMAT(create_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27; </span><br><span class="line">                                                    or DATE_FORMAT(callback_time,&#x27;%Y-%m-%d&#x27;)=&#x27;$do_date&#x27;)&quot;                                                    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_sku_attr_value()&#123;</span><br><span class="line">    import_data sku_attr_value &quot;select</span><br><span class="line">                                                    id,</span><br><span class="line">                                                    attr_id,</span><br><span class="line">                                                    value_id,</span><br><span class="line">                                                    sku_id,</span><br><span class="line">                                                    attr_name,</span><br><span class="line">                                                    value_name</span><br><span class="line">                                                from sku_attr_value</span><br><span class="line">                                                where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_sku_sale_attr_value()&#123;</span><br><span class="line">    import_data sku_sale_attr_value &quot;select</span><br><span class="line">                                                            id,</span><br><span class="line">                                                            sku_id,</span><br><span class="line">                                                            spu_id,</span><br><span class="line">                                                            sale_attr_value_id,</span><br><span class="line">                                                            sale_attr_id,</span><br><span class="line">                                                            sale_attr_name,</span><br><span class="line">                                                            sale_attr_value_name</span><br><span class="line">                                                        from sku_sale_attr_value</span><br><span class="line">                                                        where 1=1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">  &quot;order_info&quot;)</span><br><span class="line">     import_order_info</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category1&quot;)</span><br><span class="line">     import_base_category1</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category2&quot;)</span><br><span class="line">     import_base_category2</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category3&quot;)</span><br><span class="line">     import_base_category3</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail&quot;)</span><br><span class="line">     import_order_detail</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_info&quot;)</span><br><span class="line">     import_sku_info</span><br><span class="line">;;</span><br><span class="line">  &quot;user_info&quot;)</span><br><span class="line">     import_user_info</span><br><span class="line">;;</span><br><span class="line">  &quot;payment_info&quot;)</span><br><span class="line">     import_payment_info</span><br><span class="line">;;</span><br><span class="line">  &quot;base_province&quot;)</span><br><span class="line">     import_base_province</span><br><span class="line">;;</span><br><span class="line">  &quot;activity_info&quot;)</span><br><span class="line">      import_activity_info</span><br><span class="line">;;</span><br><span class="line">  &quot;cart_info&quot;)</span><br><span class="line">      import_cart_info</span><br><span class="line">;;</span><br><span class="line">  &quot;comment_info&quot;)</span><br><span class="line">      import_comment_info</span><br><span class="line">;;</span><br><span class="line">  &quot;coupon_info&quot;)</span><br><span class="line">      import_coupon_info</span><br><span class="line">;;</span><br><span class="line">  &quot;coupon_use&quot;)</span><br><span class="line">      import_coupon_use</span><br><span class="line">;;</span><br><span class="line">  &quot;favor_info&quot;)</span><br><span class="line">      import_favor_info</span><br><span class="line">;;</span><br><span class="line">  &quot;order_refund_info&quot;)</span><br><span class="line">      import_order_refund_info</span><br><span class="line">;;</span><br><span class="line">  &quot;order_status_log&quot;)</span><br><span class="line">      import_order_status_log</span><br><span class="line">;;</span><br><span class="line">  &quot;spu_info&quot;)</span><br><span class="line">      import_spu_info</span><br><span class="line">;;</span><br><span class="line">  &quot;activity_rule&quot;)</span><br><span class="line">      import_activity_rule</span><br><span class="line">;;</span><br><span class="line">  &quot;base_dic&quot;)</span><br><span class="line">      import_base_dic</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail_activity&quot;)</span><br><span class="line">      import_order_detail_activity</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail_coupon&quot;)</span><br><span class="line">      import_order_detail_coupon</span><br><span class="line">;;</span><br><span class="line">  &quot;refund_payment&quot;)</span><br><span class="line">      import_refund_payment</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_attr_value&quot;)</span><br><span class="line">      import_sku_attr_value</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_sale_attr_value&quot;)</span><br><span class="line">      import_sku_sale_attr_value</span><br><span class="line">;;</span><br><span class="line">&quot;all&quot;)</span><br><span class="line">   import_base_category1</span><br><span class="line">   import_base_category2</span><br><span class="line">   import_base_category3</span><br><span class="line">   import_order_info</span><br><span class="line">   import_order_detail</span><br><span class="line">   import_sku_info</span><br><span class="line">   import_user_info</span><br><span class="line">   import_payment_info</span><br><span class="line">   import_base_trademark</span><br><span class="line">   import_activity_info</span><br><span class="line">   import_cart_info</span><br><span class="line">   import_comment_info</span><br><span class="line">   import_coupon_use</span><br><span class="line">   import_coupon_info</span><br><span class="line">   import_favor_info</span><br><span class="line">   import_order_refund_info</span><br><span class="line">   import_order_status_log</span><br><span class="line">   import_spu_info</span><br><span class="line">   import_activity_rule</span><br><span class="line">   import_base_dic</span><br><span class="line">   import_order_detail_activity</span><br><span class="line">   import_order_detail_coupon</span><br><span class="line">   import_refund_payment</span><br><span class="line">   import_sku_attr_value</span><br><span class="line">   import_sku_sale_attr_value</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure><h1 id="sqoop-import-mysql-to-hdfs-ods-first-day-sh"><a href="#sqoop-import-mysql-to-hdfs-ods-first-day-sh" class="headerlink" title="sqoop_import_mysql_to_hdfs_ods_first_day.sh"></a>sqoop_import_mysql_to_hdfs_ods_first_day.sh</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br></pre></td><td class="code"><pre><span class="line">#! /bin/bash</span><br><span class="line">#mysql 业务数据库库名</span><br><span class="line">APP=gmall</span><br><span class="line">#sqoop命令的绝对路径</span><br><span class="line">sqoop=/opt/module/sqoop-1.4.6/bin/sqoop</span><br><span class="line"></span><br><span class="line">#$2: 脚本的第二个参数 做非空判断</span><br><span class="line">if [ -n &quot;$2&quot; ] ;then</span><br><span class="line">   do_date=$2</span><br><span class="line">else </span><br><span class="line">   echo &quot;请传入日期参数&quot;</span><br><span class="line">   exit</span><br><span class="line">fi </span><br><span class="line"></span><br><span class="line">#公用的函数 主要是sqoop的imoport命令</span><br><span class="line">import_data()&#123;</span><br><span class="line">$sqoop import \</span><br><span class="line">--connect jdbc:mysql://hadoop102:3306/$APP \</span><br><span class="line">--username root \</span><br><span class="line">--password shangbaishuyao \</span><br><span class="line">--target-dir /origin_data/$APP/db/$1/$do_date \</span><br><span class="line">--delete-target-dir \</span><br><span class="line">--query &quot;$2 where \$CONDITIONS&quot; \</span><br><span class="line">--num-mappers 1 \</span><br><span class="line">--fields-terminated-by &#x27;\t&#x27; \</span><br><span class="line">--compress \</span><br><span class="line">--compression-codec lzop \</span><br><span class="line">--null-string &#x27;\\N&#x27; \</span><br><span class="line">--null-non-string &#x27;\\N&#x27;</span><br><span class="line"></span><br><span class="line">hadoop jar /opt/module/hadoop-3.1.3/share/hadoop/common/hadoop-lzo-0.4.20.jar com.hadoop.compression.lzo.DistributedLzoIndexer /origin_data/$APP/db/$1/$do_date</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 通过创建时间和变化的时间获取每天新增及变化的数据 也就是  where 创建时间 = 今天 or 操作时间 = 今天</span><br><span class="line">import_order_info()&#123;</span><br><span class="line">  import_data order_info &quot;select</span><br><span class="line">                            id, </span><br><span class="line">                            total_amount, </span><br><span class="line">                            order_status, </span><br><span class="line">                            user_id, </span><br><span class="line">                            payment_way,</span><br><span class="line">                            delivery_address,</span><br><span class="line">                            out_trade_no, </span><br><span class="line">                            create_time, </span><br><span class="line">                            operate_time,</span><br><span class="line">                            expire_time,</span><br><span class="line">                            tracking_no,</span><br><span class="line">                            province_id,</span><br><span class="line">                            activity_reduce_amount,</span><br><span class="line">                            coupon_reduce_amount,                            </span><br><span class="line">                            original_total_amount,</span><br><span class="line">                            feight_fee,</span><br><span class="line">                            feight_fee_reduce      </span><br><span class="line">                        from order_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_coupon_use()&#123;</span><br><span class="line">  import_data coupon_use &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          coupon_id,</span><br><span class="line">                          user_id,</span><br><span class="line">                          order_id,</span><br><span class="line">                          coupon_status,</span><br><span class="line">                          get_time,</span><br><span class="line">                          using_time,</span><br><span class="line">                          used_time,</span><br><span class="line">                          expire_time</span><br><span class="line">                        from coupon_use&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_status_log()&#123;</span><br><span class="line">  import_data order_status_log &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  order_id,</span><br><span class="line">                                  order_status,</span><br><span class="line">                                  operate_time</span><br><span class="line">                                from order_status_log&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_user_info()&#123;</span><br><span class="line">  import_data &quot;user_info&quot; &quot;select </span><br><span class="line">                            id,</span><br><span class="line">                            login_name,</span><br><span class="line">                            nick_name,</span><br><span class="line">                            name,</span><br><span class="line">                            phone_num,</span><br><span class="line">                            email,</span><br><span class="line">                            user_level, </span><br><span class="line">                            birthday,</span><br><span class="line">                            gender,</span><br><span class="line">                            create_time,</span><br><span class="line">                            operate_time</span><br><span class="line">                          from user_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_detail()&#123;</span><br><span class="line">  import_data order_detail &quot;select </span><br><span class="line">                              id,</span><br><span class="line">                              order_id, </span><br><span class="line">                              sku_id,</span><br><span class="line">                              sku_name,</span><br><span class="line">                              order_price,</span><br><span class="line">                              sku_num, </span><br><span class="line">                              create_time,</span><br><span class="line">                              source_type,</span><br><span class="line">                              source_id,</span><br><span class="line">                              split_total_amount,</span><br><span class="line">                              split_activity_amount,</span><br><span class="line">                              split_coupon_amount</span><br><span class="line">                            from order_detail&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_payment_info()&#123;</span><br><span class="line">  import_data &quot;payment_info&quot;  &quot;select </span><br><span class="line">                                id,  </span><br><span class="line">                                out_trade_no, </span><br><span class="line">                                order_id, </span><br><span class="line">                                user_id, </span><br><span class="line">                                payment_type, </span><br><span class="line">                                trade_no, </span><br><span class="line">                                total_amount,  </span><br><span class="line">                                subject, </span><br><span class="line">                                payment_status,</span><br><span class="line">                                create_time,</span><br><span class="line">                                callback_time </span><br><span class="line">                              from payment_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_comment_info()&#123;</span><br><span class="line">  import_data comment_info &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              user_id,</span><br><span class="line">                              sku_id,</span><br><span class="line">                              spu_id,</span><br><span class="line">                              order_id,</span><br><span class="line">                              appraise,</span><br><span class="line">                              create_time</span><br><span class="line">                            from comment_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_order_refund_info()&#123;</span><br><span class="line">  import_data order_refund_info &quot;select</span><br><span class="line">                                id,</span><br><span class="line">                                user_id,</span><br><span class="line">                                order_id,</span><br><span class="line">                                sku_id,</span><br><span class="line">                                refund_type,</span><br><span class="line">                                refund_num,</span><br><span class="line">                                refund_amount,</span><br><span class="line">                                refund_reason_type,</span><br><span class="line">                                refund_status,</span><br><span class="line">                                create_time</span><br><span class="line">                              from order_refund_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_sku_info()&#123;</span><br><span class="line">  import_data sku_info &quot;select </span><br><span class="line">                          id,</span><br><span class="line">                          spu_id,</span><br><span class="line">                          price,</span><br><span class="line">                          sku_name,</span><br><span class="line">                          sku_desc,</span><br><span class="line">                          weight,</span><br><span class="line">                          tm_id,</span><br><span class="line">                          category3_id,</span><br><span class="line">                          is_sale,</span><br><span class="line">                          create_time</span><br><span class="line">                        from sku_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category1()&#123;</span><br><span class="line">  import_data &quot;base_category1&quot; &quot;select </span><br><span class="line">                                  id,</span><br><span class="line">                                  name </span><br><span class="line">                                from base_category1&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category2()&#123;</span><br><span class="line">  import_data &quot;base_category2&quot; &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  name,</span><br><span class="line">                                  category1_id </span><br><span class="line">                                from base_category2&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_category3()&#123;</span><br><span class="line">  import_data &quot;base_category3&quot; &quot;select</span><br><span class="line">                                  id,</span><br><span class="line">                                  name,</span><br><span class="line">                                  category2_id</span><br><span class="line">                                from base_category3&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_province()&#123;</span><br><span class="line">  import_data base_province &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              name,</span><br><span class="line">                              region_id,</span><br><span class="line">                              area_code,</span><br><span class="line">                              iso_code,</span><br><span class="line">                              iso_3166_2</span><br><span class="line">                            from base_province&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_region()&#123;</span><br><span class="line">  import_data base_region &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              region_name</span><br><span class="line">                            from base_region&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_trademark()&#123;</span><br><span class="line">  import_data base_trademark &quot;select</span><br><span class="line">                                id,</span><br><span class="line">                                tm_name</span><br><span class="line">                              from base_trademark&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_spu_info()&#123;</span><br><span class="line">  import_data spu_info &quot;select</span><br><span class="line">                            id,</span><br><span class="line">                            spu_name,</span><br><span class="line">                            category3_id,</span><br><span class="line">                            tm_id</span><br><span class="line">                          from spu_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_favor_info()&#123;</span><br><span class="line">  import_data favor_info &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          user_id,</span><br><span class="line">                          sku_id,</span><br><span class="line">                          spu_id,</span><br><span class="line">                          is_cancel,</span><br><span class="line">                          create_time,</span><br><span class="line">                          cancel_time</span><br><span class="line">                        from favor_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_cart_info()&#123;</span><br><span class="line">  import_data cart_info &quot;select</span><br><span class="line">                        id,</span><br><span class="line">                        user_id,</span><br><span class="line">                        sku_id,</span><br><span class="line">                        cart_price,</span><br><span class="line">                        sku_num,</span><br><span class="line">                        sku_name,</span><br><span class="line">                        create_time,</span><br><span class="line">                        operate_time,</span><br><span class="line">                        is_ordered,</span><br><span class="line">                        order_time,</span><br><span class="line">                        source_type,</span><br><span class="line">                        source_id</span><br><span class="line">                      from cart_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_coupon_info()&#123;</span><br><span class="line">  import_data coupon_info &quot;select</span><br><span class="line">                          id,</span><br><span class="line">                          coupon_name,</span><br><span class="line">                          coupon_type,</span><br><span class="line">                          condition_amount,</span><br><span class="line">                          condition_num,</span><br><span class="line">                          activity_id,</span><br><span class="line">                          benefit_amount,</span><br><span class="line">                          benefit_discount,</span><br><span class="line">                          create_time,</span><br><span class="line">                          range_type,</span><br><span class="line">                          limit_num,</span><br><span class="line">                          taken_count,</span><br><span class="line">                          start_time,</span><br><span class="line">                          end_time,</span><br><span class="line">                          operate_time,</span><br><span class="line">                          expire_time</span><br><span class="line">                        from coupon_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_activity_info()&#123;</span><br><span class="line">  import_data activity_info &quot;select</span><br><span class="line">                              id,</span><br><span class="line">                              activity_name,</span><br><span class="line">                              activity_type,</span><br><span class="line">                              start_time,</span><br><span class="line">                              end_time,</span><br><span class="line">                              create_time</span><br><span class="line">                            from activity_info&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_activity_rule()&#123;</span><br><span class="line">    import_data activity_rule &quot;select</span><br><span class="line">                                    id,</span><br><span class="line">                                    activity_id,</span><br><span class="line">                                    activity_type,</span><br><span class="line">                                    condition_amount,</span><br><span class="line">                                    condition_num,</span><br><span class="line">                                    benefit_amount,</span><br><span class="line">                                    benefit_discount,</span><br><span class="line">                                    benefit_level</span><br><span class="line">                                from activity_rule&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_base_dic()&#123;</span><br><span class="line">    import_data base_dic &quot;select</span><br><span class="line">                            dic_code,</span><br><span class="line">                            dic_name,</span><br><span class="line">                            parent_code,</span><br><span class="line">                            create_time,</span><br><span class="line">                            operate_time</span><br><span class="line">                          from base_dic&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_order_detail_activity()&#123;</span><br><span class="line">    import_data order_detail_activity &quot;select</span><br><span class="line">                                                                id,</span><br><span class="line">                                                                order_id,</span><br><span class="line">                                                                order_detail_id,</span><br><span class="line">                                                                activity_id,</span><br><span class="line">                                                                activity_rule_id,</span><br><span class="line">                                                                sku_id,</span><br><span class="line">                                                                create_time</span><br><span class="line">                                                            from order_detail_activity&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_order_detail_coupon()&#123;</span><br><span class="line">    import_data order_detail_coupon &quot;select</span><br><span class="line">                                                                id,</span><br><span class="line">                                                order_id,</span><br><span class="line">                                                                order_detail_id,</span><br><span class="line">                                                                coupon_id,</span><br><span class="line">                                                                coupon_use_id,</span><br><span class="line">                                                                sku_id,</span><br><span class="line">                                                                create_time</span><br><span class="line">                                                            from order_detail_coupon&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_refund_payment()&#123;</span><br><span class="line">    import_data refund_payment &quot;select</span><br><span class="line">                                                        id,</span><br><span class="line">                                                        out_trade_no,</span><br><span class="line">                                                        order_id,</span><br><span class="line">                                                        sku_id,</span><br><span class="line">                                                        payment_type,</span><br><span class="line">                                                        trade_no,</span><br><span class="line">                                                        total_amount,</span><br><span class="line">                                                        subject,</span><br><span class="line">                                                        refund_status,</span><br><span class="line">                                                        create_time,</span><br><span class="line">                                                        callback_time</span><br><span class="line">                                                    from refund_payment&quot;                                                    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">import_sku_attr_value()&#123;</span><br><span class="line">    import_data sku_attr_value &quot;select</span><br><span class="line">                                                    id,</span><br><span class="line">                                                    attr_id,</span><br><span class="line">                                                    value_id,</span><br><span class="line">                                                    sku_id,</span><br><span class="line">                                                    attr_name,</span><br><span class="line">                                                    value_name</span><br><span class="line">                                                from sku_attr_value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">import_sku_sale_attr_value()&#123;</span><br><span class="line">    import_data sku_sale_attr_value &quot;select</span><br><span class="line">                                                            id,</span><br><span class="line">                                                            sku_id,</span><br><span class="line">                                                            spu_id,</span><br><span class="line">                                                            sale_attr_value_id,</span><br><span class="line">                                                            sale_attr_id,</span><br><span class="line">                                                            sale_attr_name,</span><br><span class="line">                                                            sale_attr_value_name</span><br><span class="line">                                                        from sku_sale_attr_value&quot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">case $1 in</span><br><span class="line">  &quot;order_info&quot;)</span><br><span class="line">     import_order_info</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category1&quot;)</span><br><span class="line">     import_base_category1</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category2&quot;)</span><br><span class="line">     import_base_category2</span><br><span class="line">;;</span><br><span class="line">  &quot;base_category3&quot;)</span><br><span class="line">     import_base_category3</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail&quot;)</span><br><span class="line">     import_order_detail</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_info&quot;)</span><br><span class="line">     import_sku_info</span><br><span class="line">;;</span><br><span class="line">  &quot;user_info&quot;)</span><br><span class="line">     import_user_info</span><br><span class="line">;;</span><br><span class="line">  &quot;payment_info&quot;)</span><br><span class="line">     import_payment_info</span><br><span class="line">;;</span><br><span class="line">  &quot;base_province&quot;)</span><br><span class="line">     import_base_province</span><br><span class="line">;;</span><br><span class="line">  &quot;base_region&quot;)</span><br><span class="line">     import_base_region</span><br><span class="line">;;</span><br><span class="line">  &quot;base_trademark&quot;)</span><br><span class="line">     import_base_trademark</span><br><span class="line">;;</span><br><span class="line">  &quot;activity_info&quot;)</span><br><span class="line">      import_activity_info</span><br><span class="line">;;</span><br><span class="line">  &quot;cart_info&quot;)</span><br><span class="line">      import_cart_info</span><br><span class="line">;;</span><br><span class="line">  &quot;comment_info&quot;)</span><br><span class="line">      import_comment_info</span><br><span class="line">;;</span><br><span class="line">  &quot;coupon_info&quot;)</span><br><span class="line">      import_coupon_info</span><br><span class="line">;;</span><br><span class="line">  &quot;coupon_use&quot;)</span><br><span class="line">      import_coupon_use</span><br><span class="line">;;</span><br><span class="line">  &quot;favor_info&quot;)</span><br><span class="line">      import_favor_info</span><br><span class="line">;;</span><br><span class="line">  &quot;order_refund_info&quot;)</span><br><span class="line">      import_order_refund_info</span><br><span class="line">;;</span><br><span class="line">  &quot;order_status_log&quot;)</span><br><span class="line">      import_order_status_log</span><br><span class="line">;;</span><br><span class="line">  &quot;spu_info&quot;)</span><br><span class="line">      import_spu_info</span><br><span class="line">;;</span><br><span class="line">  &quot;activity_rule&quot;)</span><br><span class="line">      import_activity_rule</span><br><span class="line">;;</span><br><span class="line">  &quot;base_dic&quot;)</span><br><span class="line">      import_base_dic</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail_activity&quot;)</span><br><span class="line">      import_order_detail_activity</span><br><span class="line">;;</span><br><span class="line">  &quot;order_detail_coupon&quot;)</span><br><span class="line">      import_order_detail_coupon</span><br><span class="line">;;</span><br><span class="line">  &quot;refund_payment&quot;)</span><br><span class="line">      import_refund_payment</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_attr_value&quot;)</span><br><span class="line">      import_sku_attr_value</span><br><span class="line">;;</span><br><span class="line">  &quot;sku_sale_attr_value&quot;)</span><br><span class="line">      import_sku_sale_attr_value</span><br><span class="line">;;</span><br><span class="line">  &quot;all&quot;)</span><br><span class="line">   import_base_category1</span><br><span class="line">   import_base_category2</span><br><span class="line">   import_base_category3</span><br><span class="line">   import_order_info</span><br><span class="line">   import_order_detail</span><br><span class="line">   import_sku_info</span><br><span class="line">   import_user_info</span><br><span class="line">   import_payment_info</span><br><span class="line">   import_base_region</span><br><span class="line">   import_base_province</span><br><span class="line">   import_base_trademark</span><br><span class="line">   import_activity_info</span><br><span class="line">   import_cart_info</span><br><span class="line">   import_comment_info</span><br><span class="line">   import_coupon_use</span><br><span class="line">   import_coupon_info</span><br><span class="line">   import_favor_info</span><br><span class="line">   import_order_refund_info</span><br><span class="line">   import_order_status_log</span><br><span class="line">   import_spu_info</span><br><span class="line">   import_activity_rule</span><br><span class="line">   import_base_dic</span><br><span class="line">   import_order_detail_activity</span><br><span class="line">   import_order_detail_coupon</span><br><span class="line">   import_refund_payment</span><br><span class="line">   import_sku_attr_value</span><br><span class="line">   import_sku_sale_attr_value</span><br><span class="line">;;</span><br><span class="line">esac</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;myhadoop-sh&quot;&gt;&lt;a href=&quot;#myhadoop-sh&quot; class=&quot;headerlink&quot; title=&quot;myhadoop.sh&quot;&gt;&lt;/a&gt;myhadoop.sh&lt;/h1&gt;&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#!/bin/bash&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;if [ $# -lt 1 ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;then&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;No Args Input...&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    exit ;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;fi&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;case $1 in&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;start&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; =================== 启动 hadoop集群 ===================&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 启动 hdfs ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop102 &amp;quot;/opt/module/hadoop-3.1.3/sbin/start-dfs.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 启动 yarn ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop103 &amp;quot;/opt/module/hadoop-3.1.3/sbin/start-yarn.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 启动 historyserver ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop102 &amp;quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon start historyserver&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;quot;stop&amp;quot;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; =================== 关闭 hadoop集群 ===================&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 关闭 historyserver ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop102 &amp;quot;/opt/module/hadoop-3.1.3/bin/mapred --daemon stop historyserver&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 关闭 yarn ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop103 &amp;quot;/opt/module/hadoop-3.1.3/sbin/stop-yarn.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        echo &amp;quot; --------------- 关闭 hdfs ---------------&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ssh hadoop102 &amp;quot;/opt/module/hadoop-3.1.3/sbin/stop-dfs.sh&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;*)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    echo &amp;quot;Input Args Error...&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;esac&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="shell" scheme="http://xubatian.cn/tags/shell/"/>
    
  </entry>
  
  <entry>
    <title>数据仓库原理与实现: 维度建模理论之事实表</title>
    <link href="http://xubatian.cn/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-%E7%BB%B4%E5%BA%A6%E5%BB%BA%E6%A8%A1%E7%90%86%E8%AE%BA%E4%B9%8B%E4%BA%8B%E5%AE%9E%E8%A1%A8/"/>
    <id>http://xubatian.cn/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-%E7%BB%B4%E5%BA%A6%E5%BB%BA%E6%A8%A1%E7%90%86%E8%AE%BA%E4%B9%8B%E4%BA%8B%E5%AE%9E%E8%A1%A8/</id>
    <published>2022-02-16T05:30:32.000Z</published>
    <updated>2022-02-16T05:39:18.349Z</updated>
    
    <content type="html"><![CDATA[<h2 id="事实表概述"><a href="#事实表概述" class="headerlink" title="事实表概述"></a>事实表概述</h2><p>​        事实表作为数据仓库维度建模的核心，紧紧围绕着业务过程来设计。其包含与该业务过程有关的维度引用（维度表外键）以及该业务过程的度量（通常是可累加的数字类型字段）。</p><h3 id="事实表特点"><a href="#事实表特点" class="headerlink" title="事实表特点"></a><strong>事实表特点</strong></h3><p>​        事实表通常比较“细长”，即列较少，但行较多，且行的增速快。</p><h3 id="事实表分类"><a href="#事实表分类" class="headerlink" title="事实表分类"></a><strong>事实表分类</strong></h3><p>​        事实表有三种类型：分别是事务事实表、周期快照事实表和累积快照事实表，每种事实表都具有不同的特点和适用场景，下面逐个介绍。</p><span id="more"></span><h2 id="事务型事实表"><a href="#事务型事实表" class="headerlink" title="事务型事实表"></a>事务型事实表</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a><strong>概述</strong></h3><p>​        事务事实表用来记录各业务过程，它保存的是各业务过程的原子操作事件，即最细粒度的操作事件。粒度是指事实表中一行数据所表达的业务细节程度。</p><p>​        事务型事实表可用于分析与各业务过程相关的各项统计指标，由于其保存了最细粒度的记录，可以提供最大限度的灵活性，可以支持无法预期的各种细节层次的统计需求。</p><h3 id="设计流程"><a href="#设计流程" class="headerlink" title="设计流程"></a><strong>设计流程</strong></h3><p>​        设计事务事实表时一般可遵循以下四个步骤：</p><p>​        <strong>选择业务过程→声明粒度→确认维度→确认事实</strong></p><p><strong>1）选择业务过程</strong></p><p>​        在业务系统中，挑选我们感兴趣的业务过程，业务过程可以概括为一个个不可拆分的行为事件，例如电商交易中的下单，取消订单，付款，退单等，都是业务过程。通常情况下，一个业务过程对应一张事务型事实表。</p><p><strong>2）声明粒度</strong></p><p>​        业务过程确定后，需要为每个业务过程声明粒度。即精确定义每张事务型事实表的每行数据表示什么，应该尽可能选择最细粒度，以此来应各种细节程度的需求。</p><p><strong>典型的粒度声明如下：</strong></p><p>​        订单事实表中一行数据表示的是一个订单中的一个商品项。</p><p><strong>3）确定维度</strong></p><p>​        确定维度具体是指，确定与每张事务型事实表相关的维度有哪些。</p><p>​        确定维度时应尽量多的选择与业务过程相关的环境信息。因为维度的丰富程度就决定了维度模型能够支持的指标丰富程度。</p><p><strong>4）确定事实</strong></p><p>​        此处的“事实”一词，指的是每个业务过程的度量值（通常是可累加的数字类型的值，例如：次数、个数、件数、金额等）。</p><p>经过上述四个步骤，事务型事实表就基本设计完成了。第一步选择业务过程可以确定有哪些事务型事实表，第二步可以确定每张事务型事实表的每行数据是什么，第三步可以确定每张事务型事实表的维度外键，第四步可以确定每张事务型事实表的度量值字段。</p><h3 id="不足"><a href="#不足" class="headerlink" title="不足"></a><strong>不足</strong></h3><p>​        事务型事实表可以保存所有业务过程的最细粒度的操作事件，故理论上其可以支撑与各业务过程相关的各种统计粒度的需求。但对于某些特定类型的需求，其逻辑可能会比较复杂，或者效率会比较低下。例如：</p><p><strong>1）存量型指标</strong></p><p>​        例如商品库存，账户余额等。此处以电商中的虚拟货币为例，虚拟货币业务包含的业务过程主要包括获取货币和使用货币，两个业务过程各自对应一张事务型事实表，一张存储所有的获取货币的原子操作事件，另一张存储所有使用货币的原子操作事件。</p><p>假定现有一个需求，要求统计截至当日的各用户虚拟货币余额。由于获取货币和使用货币均会影响到余额，故需要对两张事务型事实表进行聚合，且需要区分两者对余额的影响（加或减），另外需要对两张表的全表数据聚合才能得到统计结果。</p><p>可以看到，不论是从逻辑上还是效率上考虑，这都不是一个好的方案。</p><p><strong>2）多事务关联统计</strong></p><p>​        例如，现需要统计最近30天，用户下单到支付的时间间隔的平均值。统计思路应该是找到下单事务事实表和支付事务事实表，过滤出最近30天的记录，然后按照订单id对两张事实表进行关联，之后用支付时间减去下单时间，然后再求平均值。</p><p>逻辑上虽然并不复杂，但是其效率较低，应为下单事务事实表和支付事务事实表均为大表，大表join大表的操作应尽量避免。</p><p>可以看到，在上述两种场景下事务型事实表的表现并不理想。下面要介绍的另外两种类型的事实表就是为了弥补事务型事实表的不足的。</p><h2 id="周期型快照事实表"><a href="#周期型快照事实表" class="headerlink" title="周期型快照事实表"></a><strong>周期型快照事实表</strong></h2><h3 id="概述-1"><a href="#概述-1" class="headerlink" title="概述"></a><strong>概述</strong></h3><p>​        周期快照事实表以具有规律性的、可预见的时间间隔来记录事实，主要用于分析一些存量型（例如商品库存，账户余额）或者状态型（空气温度，行驶速度）指标。</p><p>​        对于商品库存、账户余额这些存量型指标，业务系统中通常就会计算并保存最新结果，所以定期同步一份全量数据到数据仓库，构建周期型快照事实表，就能轻松应对此类统计需求，而无需再对事务型事实表中大量的历史记录进行聚合了。</p><p>对于空气温度、行驶速度这些状态型指标，由于它们的值往往是连续的，我们无法捕获其变动的原子事务操作，所以无法使用事务型事实表统计此类需求。而只能定期对其进行采样，构建周期型快照事实表。</p><h3 id="设计流程-1"><a href="#设计流程-1" class="headerlink" title="设计流程"></a><strong>设计流程</strong></h3><p><strong>1)确定粒度</strong></p><p>​        周期型快照事实表的粒度可由采样周期和维度描述，故确定采样周期和维度后即可确定粒度。</p><p>​        采样周期通常选择每日。</p><p>​        维度可根据统计指标决定，例如指标为统计每个仓库中每种商品的库存，则可确定维度为仓库和商品。</p><p>​        确定完采样周期和维度后，即可确定该表粒度为每日-仓库-商品。</p><p><strong>2)确认事实</strong></p><p>​        事实也可根据统计指标决定，例如指标为统计每个仓库中每种商品的库存，则事实为商品库存。</p><h3 id="事实类型"><a href="#事实类型" class="headerlink" title="事实类型"></a>事实类型</h3><p>​        此处的事实类型是指度量值的类型，而非事实表的类型。事实（度量值）共分为三类，分别是可加事实，半可加事实和不可加事实。</p><p><strong>1）可加事实</strong></p><p>​        可加事实是指可以按照与事实表相关的所有维度进行累加，例如事务型事实表中的事实。</p><p><strong>2）半可加事实</strong></p><p>​        半可加事实是指只能按照与事实表相关的一部分维度进行累加，例如周期型快照事实表中的事实。以上述各仓库中各商品的库存每天快照事实表为例，这张表中的库存事实可以按照仓库或者商品维度进行累加，但是不能按照时间维度进行累加，因为将每天的库存累加起来是没有任何意义的。</p><p><strong>3）不可加事实</strong></p><p>​        不可加事实是指完全不具备可加性，例如比率型事实。不可加事实通常需要转化为可加事实，例如比率可转化为分子和分母。</p><h2 id="累计型快照事实表"><a href="#累计型快照事实表" class="headerlink" title="累计型快照事实表"></a><strong>累计型快照事实表</strong></h2><h3 id="概述-2"><a href="#概述-2" class="headerlink" title="概述"></a><strong>概述</strong></h3><p>​        累计快照事实表是基于一个业务流程中的多个关键业务过程联合处理而构建的事实表，如交易流程中的下单、支付、发货、确认收货业务过程。</p><p>累积型快照事实表通常具有多个日期字段，每个日期对应业务流程中的一个关键业务过程（里程碑）。</p><table><thead><tr><th>订单id</th><th>用户id</th><th>下单日期</th><th>支付日期</th><th>发货日期</th><th>确认收货日期</th><th>订单金额</th><th>支付金额</th></tr></thead><tbody><tr><td>1001</td><td>1234</td><td>2020-06-14</td><td>2020-06-15</td><td>2020-06-16</td><td>2020-06-17</td><td>1000</td><td>1000</td></tr></tbody></table><p>​        累积型快照事实表主要用于分析业务过程（里程碑）之间的时间间隔等需求。例如前文提到的用户下单到支付的平均时间间隔，使用累积型快照事实表进行统计，就能避免两个事务事实表的关联操作，从而变得十分简单高效。</p><h3 id="设计流程-2"><a href="#设计流程-2" class="headerlink" title="设计流程"></a><strong>设计流程</strong></h3><p>​        累积型快照事实表的设计流程同事务型事实表类似，也可采用以下四个步骤，下面重点描述与事务型事实表的不同之处。</p><p>​        <strong>选择业务过程→声明粒度→确认维度→确认事实。</strong></p><p><strong>1）选择业务过程</strong></p><p>​        选择一个业务流程中需要关联分析的多个关键业务过程，多个业务过程对应一张累积型快照事实表。</p><p><strong>2）声明粒度</strong></p><p>​        精确定义每行数据表示的是什么，尽量选择最小粒度。</p><p><strong>3）确认维度</strong></p><p>​        选择与各业务过程相关的维度，需要注意的是，每各业务过程均需要一个日期维度。</p><p><strong>4）确认事实</strong></p><p>​     选择各业务过程的度量值。</p>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;事实表概述&quot;&gt;&lt;a href=&quot;#事实表概述&quot; class=&quot;headerlink&quot; title=&quot;事实表概述&quot;&gt;&lt;/a&gt;事实表概述&lt;/h2&gt;&lt;p&gt;​        事实表作为数据仓库维度建模的核心，紧紧围绕着业务过程来设计。其包含与该业务过程有关的维度引用（维度表外键）以及该业务过程的度量（通常是可累加的数字类型字段）。&lt;/p&gt;
&lt;h3 id=&quot;事实表特点&quot;&gt;&lt;a href=&quot;#事实表特点&quot; class=&quot;headerlink&quot; title=&quot;事实表特点&quot;&gt;&lt;/a&gt;&lt;strong&gt;事实表特点&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;​        事实表通常比较“细长”，即列较少，但行较多，且行的增速快。&lt;/p&gt;
&lt;h3 id=&quot;事实表分类&quot;&gt;&lt;a href=&quot;#事实表分类&quot; class=&quot;headerlink&quot; title=&quot;事实表分类&quot;&gt;&lt;/a&gt;&lt;strong&gt;事实表分类&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;​        事实表有三种类型：分别是事务事实表、周期快照事实表和累积快照事实表，每种事实表都具有不同的特点和适用场景，下面逐个介绍。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="数据仓库" scheme="http://xubatian.cn/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>数据仓库原理与实现: 数据仓库建模概述</title>
    <link href="http://xubatian.cn/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%BB%BA%E6%A8%A1%E6%A6%82%E8%BF%B0/"/>
    <id>http://xubatian.cn/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93%E5%BB%BA%E6%A8%A1%E6%A6%82%E8%BF%B0/</id>
    <published>2022-02-16T05:25:20.000Z</published>
    <updated>2022-02-16T05:29:59.177Z</updated>
    
    <content type="html"><![CDATA[<h1 id="数据仓库建模概述"><a href="#数据仓库建模概述" class="headerlink" title="数据仓库建模概述"></a>数据仓库建模概述</h1><h2 id="数据仓库建模的意义"><a href="#数据仓库建模的意义" class="headerlink" title="数据仓库建模的意义"></a>数据仓库建模的意义</h2><p>​        如果把数据看作图书馆里的书，我们希望看到它们在书架上分门别类地放置；如果把数据看作城市的建筑，我们希望城市规划布局合理；如果把数据看作电脑文件和文件夹，我们希望按照自己的习惯有很好的文件夹组织方式，而不是糟糕混乱的桌面，经常为找一个文件而不知所措。</p><p>数据模型就是数据组织和存储方法，它强调从业务、数据存取和使用角度合理存储数据。只有将数据有序的组织和存储起来之后，数据才能得到高性能、低成本、高效率、高质量的使用。</p><p>高性能：良好的数据模型能够帮助我们快速查询所需要的数据。</p><p>低成本：良好的数据模型能减少重复计算，实现计算结果的复用，降低计算成本。</p><p>高效率：良好的数据模型能极大的改善用户使用数据的体验，提高使用数据的效率。</p><p>高质量：良好的数据模型能改善数据统计口径的混乱，减少计算错误的可能性。</p><span id="more"></span><h2 id="数据仓库建模方法论"><a href="#数据仓库建模方法论" class="headerlink" title="数据仓库建模方法论"></a>数据仓库建模方法论</h2><h3 id="ER模型"><a href="#ER模型" class="headerlink" title="ER模型"></a>ER模型</h3><p>​        数据仓库之父Bill Inmon提出的建模方法是从全企业的高度，用实体关系（Entity Relationship，ER）模型来描述企业业务，并用规范化的方式表示出来，在范式理论上符合3NF。</p><p><strong>1）实体关系模型</strong><br>        实体关系模型将复杂的数据抽象为两个概念——实体和关系。实体表示一个对象，例如学生、班级，关系是指两个实体之间的关系，例如学生和班级之间的从属关系。</p><p><strong>2）数据库规范化</strong><br>        数据库规范化是使用一系列范式设计数据库（通常是关系型数据库）的过程，其目的是减少数据冗余，增强数据的一致性。<br>这一系列范式就是指在设计关系型数据库时，需要遵从的不同的规范。关系型数据库的范式一共有六种，分别是第一范式（1NF）、第二范式（2NF）、第三范式（3NF）、巴斯-科德范式（BCNF）、第四范式(4NF）和第五范式（5NF）。遵循的范式级别越高，数据冗余性就越低。</p><p>下图为一个采用Bill Inmon倡导的建模方法构建的模型，从图中可以看出，较为松散、零碎，物理表数量多。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216132807.png"></p><p>​        这种建模方法的出发点是整合数据，其目的是将整个企业的数据进行组合和合并，并进行规范处理，减少数据冗余性，保证数据的一致性。这种模型并不适合直接用于分析统计。</p><h3 id="维度模型"><a href="#维度模型" class="headerlink" title="维度模型"></a>维度模型</h3><p>​        数据仓库领域的令一位大师——Ralph Kimball倡导的建模方法为维度建模。维度模型将复杂的业务通过事实和维度两个概念进行呈现。事实通常对应业务过程，而维度通常对应业务过程发生时所处的环境。</p><p><strong>注</strong>：业务过程可以概括为一个个不可拆分的行为事件，例如电商交易中的下单，取消订单，付款，退单等，都是业务过程。</p><p>​        下图为一个典型的维度模型，其中位于中心的SalesOrder为事实表，其中保存的是下单这个业务过程的所有记录。位于周围每张表都是维度表，包括Date（日期），Customer（顾客），Product（产品），Location（地区）等，这些维度表就组成了每个订单发生时所处的环境，即何人、何时、在何地下单了何种产品。从图中可以看出，模型相对清晰、简洁。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216132909.png"></p><p>​        维度建模以数据分析作为出发点，为数据分析服务，因此它关注的重点的用户如何更快的完成需求分析以及如何实现较好的大规模复杂查询的响应性能。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;数据仓库建模概述&quot;&gt;&lt;a href=&quot;#数据仓库建模概述&quot; class=&quot;headerlink&quot; title=&quot;数据仓库建模概述&quot;&gt;&lt;/a&gt;数据仓库建模概述&lt;/h1&gt;&lt;h2 id=&quot;数据仓库建模的意义&quot;&gt;&lt;a href=&quot;#数据仓库建模的意义&quot; class=&quot;headerlink&quot; title=&quot;数据仓库建模的意义&quot;&gt;&lt;/a&gt;数据仓库建模的意义&lt;/h2&gt;&lt;p&gt;​        如果把数据看作图书馆里的书，我们希望看到它们在书架上分门别类地放置；如果把数据看作城市的建筑，我们希望城市规划布局合理；如果把数据看作电脑文件和文件夹，我们希望按照自己的习惯有很好的文件夹组织方式，而不是糟糕混乱的桌面，经常为找一个文件而不知所措。&lt;/p&gt;
&lt;p&gt;数据模型就是数据组织和存储方法，它强调从业务、数据存取和使用角度合理存储数据。只有将数据有序的组织和存储起来之后，数据才能得到高性能、低成本、高效率、高质量的使用。&lt;/p&gt;
&lt;p&gt;高性能：良好的数据模型能够帮助我们快速查询所需要的数据。&lt;/p&gt;
&lt;p&gt;低成本：良好的数据模型能减少重复计算，实现计算结果的复用，降低计算成本。&lt;/p&gt;
&lt;p&gt;高效率：良好的数据模型能极大的改善用户使用数据的体验，提高使用数据的效率。&lt;/p&gt;
&lt;p&gt;高质量：良好的数据模型能改善数据统计口径的混乱，减少计算错误的可能性。&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="数据仓库" scheme="http://xubatian.cn/tags/%E6%95%B0%E6%8D%AE%E4%BB%93%E5%BA%93/"/>
    
  </entry>
  
  <entry>
    <title>Flink 原理与实现: Flink SQL CDC</title>
    <link href="http://xubatian.cn/Flink-%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-Flink-SQL-CDC/"/>
    <id>http://xubatian.cn/Flink-%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-Flink-SQL-CDC/</id>
    <published>2022-02-15T16:47:32.000Z</published>
    <updated>2022-02-15T16:58:42.361Z</updated>
    
    <content type="html"><![CDATA[<p>摘要：20年7月，Flink 1.11 新版发布，在生态及易用性上有大幅提升，其中 Table &amp; SQL 开始支持 Change Data Capture（CDC）。CDC 被广泛使用在复制数据、更新缓存、微服务间同步数据、审计日志等场景，本文由社区由曾庆东同学分享，主要介绍 Flink SQL CDC 在生产环境的落地实践以及总结的实战经验</p><p>Tips：点击下方链接可查看社区直播的 Flink SQL CDC 相关视频～<br><a href="https://flink-learning.org.cn/developers/flink-training-course3/">https://flink-learning.org.cn/developers/flink-training-course3/</a></p><span id="more"></span><h1 id="01-项目背景"><a href="#01-项目背景" class="headerlink" title="01 项目背景"></a><strong>01 项目背景</strong></h1><p>本人目前参与的项目属于公司里面数据密集、计算密集的一个重要项目，需要提供高效且准确的 OLAP 服务，提供灵活且实时的报表。业务数据存储在 MySQL  中，通过主从复制同步到报表库。作为集团级公司，数据增长多而且快，出现了多个千万级、亿级的大表。为了实现各个维度的各种复杂的报表业务，有些千万级大表仍然需要进行 Join，计算规模非常惊人，经常不能及时响应请求。</p><p>随着数据量的日益增长和实时分析的需求越来越大，急需对系统进行流式计算、实时化改造。正是在这个背景下，开始了我们与 Flink SQL CDC 的故事。</p><h1 id="02-解决方案"><a href="#02-解决方案" class="headerlink" title="02 解决方案"></a><strong>02 解决方案</strong></h1><p>针对平台现在存在的问题，我们提出了把报表的数据实时化的方案。该方案主要通过 Flink SQL CDC + Elasticsearch 实现。Flink SQL 支持 CDC 模式的数据同步，将 MySQL  中的全增量数据实时地采集、预计算、并同步到 Elasticsearch 中，Elasticsearch  作为我们的实时报表和即席分析引擎。项目整体架构图如下所示：</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005047.png"></p><p>实时报表实现具体思路是，使用 Flink CDC 读取全量数据，全量数据同步完成后，Flink CDC 会无缝切换至 MySQL 的 binlog  位点继续消费增量的变更数据，且保证不会多消费一条也不会少消费一条。读取到的账单和订单的全增量数据会与产品表做关联补全信息，并做一些预聚合，然后将聚合结果输出到 Elasticsearch，前端页面只需要到 Elasticsearch 通过精准匹配（terms）查找数据，或者再使用 agg  做高维聚合统计得到多个服务中心的报表数据。</p><p>从整体架构中，可以看到，Flink SQL 及其 CDC 功能在我们的架构中扮演着核心角色。我们采用 Flink SQL CDC，而不是 Canal + Kafka  的传统架构，主要原因还是因为其依赖组件少，维护成本低，开箱即用，上手容易。具体来说 Flink SQL CDC  是一个集采集、计算、传输于一体的工具，其吸引我们的优点有：</p><p>① 减少维护的组件、简化实现链路； </p><p>② 减少端到端延迟； </p><p>③ 减轻维护成本和开发成本； </p><p>④ 支持 Exactly Once 的读取和计算（由于我们是账务系统，所以数据一致性非常重要）； </p><p>⑤ 数据不落地，减少存储成本； </p><p>⑥ 支持全量和增量流式读取；</p><p>有关 Flink SQL CDC 的介绍和教程，可以观看 Apache Flink 社区发布的相关视频：</p><p><a href="https://www.bilibili.com/video/BV1zt4y1D7kt/">https://www.bilibili.com/video/BV1zt4y1D7kt/</a></p><p>项目使用的是 flink-cdc-connectors 中提供的 mysql-cdc 组件。这是一个 Flink 数据源，支持对 MySQL  数据库的全量和增量读取。它在扫描全表前会先加一个全局读锁，然后获取此时的 binlog  position，紧接着释放全局读锁。随后开始扫描全表，当全表快照读取完后，会从之前获取的 binlog position  获取增量的变更记录。因此这个读锁是非常轻量的，持锁时间非常短，不会对线上业务造成太大影响。更多信息可以参考  flink-cdc-connectors 项目官网：<a href="https://github.com/ververica/flink-cdc-connectors%E3%80%82">https://github.com/ververica/flink-cdc-connectors。</a></p><h1 id="03-项目运行环境与现状"><a href="#03-项目运行环境与现状" class="headerlink" title="03 项目运行环境与现状"></a><strong>03 项目运行环境与现状</strong></h1><p>我们在生产环境搭建了 Hadoop + Flink + Elasticsearch 分布式环境，采用的 Flink on YARN 的 per-job  模式运行，使用 RocksDB 作为 state backend，HDFS 作为 checkpoint 持久化地址，并且做好了 HDFS  的容错，保证 checkpoint 数据不丢失。我们使用 SQL Client 提交作业，所有作业统一使用纯 SQL，没有写一行 Java  代码。</p><p>目前已上线了 3 个基于 Flink CDC 的作业，已稳定在线上运行了两个星期，并且业务产生的订单实收和账单实收数据能实时聚合输出到  Elasticsearch，输出的数据准确无误。现在也正在对其他报表采用 Flink SQL CDC  进行实时化改造，替换旧的业务系统，让系统数据更实时。</p><h1 id="04-具体实现"><a href="#04-具体实现" class="headerlink" title="04 具体实现"></a><strong>04 具体实现</strong></h1><p>① 进入 Flink/bin，使用 ./sql-client.sh embedded 启动 SQL CLI 客户端。 </p><p>② 使用 DDL 创建 Flink Source 和 Sink 表。这里创建的表字段个数不一定要与 MySQL 的字段个数和顺序一致，只需要挑选 MySQL 表中业务需要的字段即可，并且字段类型保持一致。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br></pre></td><td class="code"><pre><span class="line">-- 在Flink创建账单实收source表</span><br><span class="line">CREATE TABLE bill_info (</span><br><span class="line">  billCode STRING,</span><br><span class="line">  serviceCode STRING,</span><br><span class="line">  accountPeriod STRING,</span><br><span class="line">  subjectName STRING ,</span><br><span class="line">  subjectCode STRING,</span><br><span class="line">  occurDate TIMESTAMP,</span><br><span class="line">  amt  DECIMAL(11,2),</span><br><span class="line">  status STRING,</span><br><span class="line">  proc_time AS PROCTIME() -–使用维表时需要指定该字段</span><br><span class="line">) WITH (</span><br><span class="line">  &#x27;connector&#x27; = &#x27;mysql-cdc&#x27;, -- 连接器</span><br><span class="line">  &#x27;hostname&#x27; = &#x27;******&#x27;,   --mysql地址</span><br><span class="line">  &#x27;port&#x27; = &#x27;3307&#x27;,  -- mysql端口</span><br><span class="line">  &#x27;username&#x27; = &#x27;******&#x27;,  --mysql用户名</span><br><span class="line">  &#x27;password&#x27; = &#x27;******&#x27;,  -- mysql密码</span><br><span class="line">  &#x27;database-name&#x27; = &#x27;cdc&#x27;, --  数据库名称</span><br><span class="line">  &#x27;table-name&#x27; = &#x27;***&#x27;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 在Flink创建订单实收source表</span><br><span class="line">CREATE TABLE order_info (</span><br><span class="line">  orderCode STRING,</span><br><span class="line">  serviceCode STRING,</span><br><span class="line">  accountPeriod STRING,</span><br><span class="line">  subjectName STRING ,</span><br><span class="line">  subjectCode STRING,</span><br><span class="line">  occurDate TIMESTAMP,</span><br><span class="line">  amt  DECIMAL(11, 2),</span><br><span class="line">  status STRING,</span><br><span class="line">  proc_time AS PROCTIME()  -–使用维表时需要指定该字段</span><br><span class="line">) WITH (</span><br><span class="line">  &#x27;connector&#x27; = &#x27;mysql-cdc&#x27;,</span><br><span class="line">  &#x27;hostname&#x27; = &#x27;******&#x27;,</span><br><span class="line">  &#x27;port&#x27; = &#x27;3307&#x27;,</span><br><span class="line">  &#x27;username&#x27; = &#x27;******&#x27;,</span><br><span class="line">  &#x27;password&#x27; = &#x27;******&#x27;,</span><br><span class="line">  &#x27;database-name&#x27; = &#x27;cdc&#x27;,</span><br><span class="line">  &#x27;table-name&#x27; = &#x27;***&#x27;,</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建科目维表</span><br><span class="line">CREATE TABLE subject_info (</span><br><span class="line">  code VARCHAR(32) NOT NULL,</span><br><span class="line">  name VARCHAR(64) NOT NULL,</span><br><span class="line">  PRIMARY KEY (code) NOT ENFORCED  --指定主键</span><br><span class="line">) WITH (</span><br><span class="line">  &#x27;connector&#x27; = &#x27;jdbc&#x27;,</span><br><span class="line">  &#x27;url&#x27; = &#x27;jdbc:mysql://xxxx:xxxx/spd?useSSL=false&amp;autoReconnect=true&#x27;,</span><br><span class="line">  &#x27;driver&#x27; = &#x27;com.mysql.cj.jdbc.Driver&#x27;,</span><br><span class="line">  &#x27;table-name&#x27; = &#x27;***&#x27;,</span><br><span class="line">  &#x27;username&#x27; = &#x27;******&#x27;,</span><br><span class="line">  &#x27;password&#x27; = &#x27;******&#x27;,</span><br><span class="line">  &#x27;lookup.cache.max-rows&#x27; = &#x27;3000&#x27;,</span><br><span class="line">  &#x27;lookup.cache.ttl&#x27; = &#x27;10s&#x27;,</span><br><span class="line">  &#x27;lookup.max-retries&#x27; = &#x27;3&#x27;</span><br><span class="line">);</span><br><span class="line"></span><br><span class="line">-- 创建实收分布结果表，把结果写到 Elasticsearch</span><br><span class="line">CREATE TABLE income_distribution (</span><br><span class="line">  serviceCode STRING,</span><br><span class="line">  accountPeriod STRING,</span><br><span class="line">  subjectCode STRING,</span><br><span class="line">  subjectName STRING,</span><br><span class="line">  amt  DECIMAL(13,2),</span><br><span class="line">  PRIMARY KEY (serviceCode, accountPeriod, subjectCode) NOT ENFORCED</span><br><span class="line">) WITH (</span><br><span class="line">  &#x27;connector&#x27; = &#x27;elasticsearch-7&#x27;,</span><br><span class="line">  &#x27;hosts&#x27; = &#x27;http://xxxx:9200&#x27;,</span><br><span class="line">  &#x27;index&#x27; = &#x27;income_distribution&#x27;,</span><br><span class="line">  &#x27;sink.bulk-flush.backoff.strategy&#x27; = &#x27;EXPONENTIAL&#x27;</span><br><span class="line">);</span><br></pre></td></tr></table></figure><p>以上的建表 DDL 分别创建了订单实收 source 表、账单实收 source 表、产品科目维表和 Elasticsearch  结果表。建表完成后，Flink 是不会马上去同步 MySQL 的数据，而是等到用户提交了一个 insert 作业后才会执行同步数据，并且  Flink 不会存储数据。我们的第一个作业是计算收入分布，数据来源于 bill_info 和 order_info 两张 MySQL  表，并且账单实收表和订单实收表都需要关联维表数据获取应收科目的最新中文名称，按照服务中心、账期、科目代码和科目名称进行分组计算实收金额的 sum 值，实收分布具体 DML 如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">INSERT INTO income_distribution</span><br><span class="line">SELECT t1.serviceCode, t1.accountPeriod, t1.subjectCode, t1.subjectName, SUM(amt) AS amt </span><br><span class="line">FROM (</span><br><span class="line">  SELECT b.serviceCode, b.accountPeriod, b.subjectCode, s.name AS subjectName, SUM(amt) AS amt </span><br><span class="line">  FROM bill_info AS b</span><br><span class="line">  JOIN subject_info FOR SYSTEM_TIME AS OF b.proc_time s ON b.subjectCode = s.code </span><br><span class="line">  GROUP BY b.serviceCode, b.accountPeriod, b.subjectCode, s.name</span><br><span class="line">UNION ALL</span><br><span class="line">  SELECT b.serviceCode, b.accountPeriod, b.subjectCode, s.name AS subjectName, SUM(amt) AS amt</span><br><span class="line">  FROM order_info AS b</span><br><span class="line">  JOIN subject_info FOR SYSTEM_TIME AS OF b.proc_time s ON b.subjectCode = s.code </span><br><span class="line">  GROUP BY b.serviceCode, b.accountPeriod, b.subjectCode, s.name</span><br><span class="line">) AS t1</span><br><span class="line">GROUP BY t1.serviceCode, t1.accountPeriod, t1.subjectCode, t1.subjectName;</span><br></pre></td></tr></table></figure><p>Flink SQL 的维表 JOIN 和双流 JOIN 写法上不太一样，对于维表，还需要在 Flink source table 上添加一个  proctime 字段 proc_time AS PROCTIME()，关联的时候使用 FOR SYSTEM_TIME AS OF 的 SQL  语法查询时态表，意思是关联查询最新版本的维表数据。关于维表 JOIN 的使用可参阅：<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/zh/dev/table/streaming/joins.html%E3%80%82">https://ci.apache.org/projects/flink/flink-docs-release-1.11/zh/dev/table/streaming/joins.html。</a></p><p>③ 在 SQL Client 执行以上作业后，YARN 会创建一个 Flink 集群运行作业，并且用户可以在 Hadoop  上查看到执行作业的所有信息，并且能进入 Flink 的 Web UI 页面查看 Flink 作业详情，以下是 Hadoop 所有作业情况。</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005207.png"></p><p>④ 作业提交后，Flink SQL CDC 会扫描指定的 MySQL 表，在这期间 Flink 也会进行  checkpoint，所以需要按照上文所述的配置 checkpoint 的重试策略和重试次数。当数据被读取进 Flink 后，Flink  会流式地进行作业逻辑的计算，实时统计出聚合结果输出到 Elasticsearch（sink 端）。相当于我们使用 Flink 在 MySQL 的表上维护了一个实时的物化视图，并将这个实时物化视图的结果存在了 Elasticsearch 中。在  Elasticsearch 中使用 GET /income_distribution/_search{ “query”:  {“match_all”: {}}} 命令查看输出的实收分布结果，如下图：</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005222.png"></p><p>通过图中的结果可以看出聚合结果被实时的计算出来，并写到了 Elasticsearch 中了。</p><h1 id="05-踩过的坑和学到的经验"><a href="#05-踩过的坑和学到的经验" class="headerlink" title="05 踩过的坑和学到的经验"></a><strong>05 踩过的坑和学到的经验</strong></h1><h2 id="1-Flink-作业原来运行在-standalone-session-模式下，提交多个-Flink-作业会导致作业失败报错。"><a href="#1-Flink-作业原来运行在-standalone-session-模式下，提交多个-Flink-作业会导致作业失败报错。" class="headerlink" title="1. Flink 作业原来运行在 standalone session 模式下，提交多个 Flink 作业会导致作业失败报错。"></a><strong>1. Flink 作业原来运行在 standalone session 模式下，提交多个 Flink 作业会导致作业失败报错。</strong></h2><ul><li><strong>原因：</strong>因为 standalone session 模式下启动多个作业会导致多个作业的 Task 共享一个 JVM，可能会导致一些不稳定的问题。并且排查问题时，多个作业的日志混在一个 TaskManager 中，增加了排查的难度。</li></ul><ul><li><strong>解决方法：</strong>采用 YARN 的 per-job 模式启动多个作业，能有更好的隔离性。</li></ul><h2 id="2-SELECT-elasticsearch-table-报以下错误："><a href="#2-SELECT-elasticsearch-table-报以下错误：" class="headerlink" title="2. SELECT elasticsearch table 报以下错误："></a><strong>2. SELECT elasticsearch table 报以下错误：</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005300.png"></p><ul><li><strong>原因：</strong>Elasticsearch connector 目前只支持了 sink，不支持 source 。所以不能 SELECT elasticsearch table。</li></ul><h2 id="3-在-flink-conf-yaml-里修改默认并行度，但是在-Web-UI-看到作业的并行度还是-1，并行度修改不生效。"><a href="#3-在-flink-conf-yaml-里修改默认并行度，但是在-Web-UI-看到作业的并行度还是-1，并行度修改不生效。" class="headerlink" title="3. 在 flink-conf.yaml 里修改默认并行度，但是在 Web UI 看到作业的并行度还是 1，并行度修改不生效。"></a><strong>3. 在 flink-conf.yaml 里修改默认并行度，但是在 Web UI 看到作业的并行度还是 1，并行度修改不生效。</strong></h2><ul><li><strong>解决办法：</strong>在使用 SQL Client 时 sql-client-defaults.yaml 中的并行度配置的优先级更高。在  sql-client-defaults.yaml 中修改并行度，或者删除 sql-client-defaults.yaml  中的并行度配置。更建议采用后者。</li></ul><h2 id="4-Flink-作业在扫描-MySQL-全量数据时，checkpoint-超时，出现作业-failover，如下图："><a href="#4-Flink-作业在扫描-MySQL-全量数据时，checkpoint-超时，出现作业-failover，如下图：" class="headerlink" title="4. Flink 作业在扫描 MySQL 全量数据时，checkpoint 超时，出现作业 failover，如下图："></a><strong>4. Flink 作业在扫描 MySQL 全量数据时，checkpoint 超时，出现作业 failover，如下图：</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005324.png"></p><ul><li><strong>原因：</strong>Flink CDC 在 scan 全表数据（我们的实收表有千万级数据）需要小时级的时间（受下游聚合反压影响），而在 scan 全表过程中是没有  offset 可以记录的（意味着没法做 checkpoint），但是 Flink 框架任何时候都会按照固定间隔时间做  checkpoint，所以此处 mysql-cdc source 做了比较取巧的方式，即在 scan 全表的过程中，会让执行中的  checkpoint 一直等待甚至超时。超时的 checkpoint 会被仍未认为是 failed checkpoint，默认配置下，这会触发  Flink 的 failover 机制，而默认的 failover 机制是不重启。所以会造成上面的现象。</li></ul><ul><li><strong>解决办法：</strong>在 flink-conf.yaml 配置 failed checkpoint 容忍次数，以及失败重启策略，如下：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">execution.checkpointing.interval: 10min   # checkpoint间隔时间</span><br><span class="line">execution.checkpointing.tolerable-failed-checkpoints: 100  # checkpoint 失败容忍次数</span><br><span class="line">restart-strategy: fixed-delay  # 重试策略</span><br><span class="line">restart-strategy.fixed-delay.attempts: 2147483647   # 重试次数</span><br></pre></td></tr></table></figure><p>目前 Flink 社区也有一个 issue（FLINK-18578）来支持 source 主动拒绝 checkpoint 的机制，将来基于该机制，能比较优雅地解决这个问题。</p><h2 id="5-Flink-怎么样开启-YARN-的-per-job-模式？"><a href="#5-Flink-怎么样开启-YARN-的-per-job-模式？" class="headerlink" title="5. Flink 怎么样开启 YARN 的 per-job 模式？"></a><strong>5. Flink 怎么样开启 YARN 的 per-job 模式？</strong></h2><ul><li><strong>解决方法：</strong>在 flink-conf.yaml 中配置 execution.target: yarn-per-job。</li></ul><h2 id="6-进入-SQL-Client-创建-table-后，在另外一个节点进入-SQL-Client-查询不到-table。"><a href="#6-进入-SQL-Client-创建-table-后，在另外一个节点进入-SQL-Client-查询不到-table。" class="headerlink" title="6. 进入 SQL Client 创建 table 后，在另外一个节点进入 SQL Client 查询不到 table。"></a><strong>6. 进入 SQL Client 创建 table 后，在另外一个节点进入 SQL Client 查询不到 table。</strong></h2><ul><li><strong>原因：</strong>因为 SQL Client 默认的 Catalog 是在 in-memory 的，不是持久化 Catalog，所以这属于正常现象，每次启动 Catalog 里面都是空的。</li></ul><h2 id="7-作业在运行时-Elasticsearch-报如下错误："><a href="#7-作业在运行时-Elasticsearch-报如下错误：" class="headerlink" title="7. 作业在运行时 Elasticsearch 报如下错误："></a><strong>7. 作业在运行时 Elasticsearch 报如下错误：</strong></h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Caused by: org.apache.Flink.elasticsearch7.shaded.org.elasticsearch.ElasticsearchException: Elasticsearch exception [type=illegal_argument_exception, reason=mapper [amt] cannot be changed from type [long] to [float]]</span><br></pre></td></tr></table></figure><ul><li><strong>原因：</strong>数据库表的字段 amt 的类型是 decimal，DDL 创建输出到 es 的 amt 字段的类型也是 decimal，因为输出到 es  的第一条数据的amt如果是整数，比如是 10，输出到 es 的类型是 long 类型的，es client 会自动创建 es 的索引并且设置  amt 字段为 long 类型的格式，那么如果下一次输出到 es 的 amt 是非整数 10.1，那么输出到 es  的时候就会出现类型不匹配的错误。</li></ul><ul><li><strong>解决方法：</strong>手动生成 es 索引和 mapping 的信息，指定好 decimal 类型的数据格式是 saclefloat，但是在 DDL 处仍然可以保留该字段类型是 decimal。</li></ul><h2 id="8-作业在运行时-mysql-cdc-source-报如下错误："><a href="#8-作业在运行时-mysql-cdc-source-报如下错误：" class="headerlink" title="8. 作业在运行时 mysql cdc source 报如下错误："></a><strong>8. 作业在运行时 mysql cdc source 报如下错误：</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005414.png"></p><ul><li><strong>原因：</strong>因为数据库中别的表做了字段修改，CDC source 同步到了 ALTER DDL 语句，但是解析失败抛出的异常。</li></ul><ul><li><strong>解决方法：</strong>在 flink-cdc-connectors 最新版本中已经修复该问题（跳过了无法解析的 DDL）。升级 connector jar 包到最新版本 1.1.0：flink-sql-connector-mysql-cdc-1.1.0.jar，替换 flink/lib 下的旧包。</li></ul><h2 id="9-扫描全表阶段慢，在-Web-UI-出现如下现象："><a href="#9-扫描全表阶段慢，在-Web-UI-出现如下现象：" class="headerlink" title="9. 扫描全表阶段慢，在 Web UI 出现如下现象："></a><strong>9. 扫描全表阶段慢，在 Web UI 出现如下现象：</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005428.png"></p><ul><li><strong>原因：</strong>扫描全表阶段慢不一定是 cdc source 的问题，可能是下游节点处理太慢反压了。</li></ul><ul><li><strong>解决方法：</strong>通过 Web UI 的反压工具排查发现，瓶颈主要在聚合节点上。通过在 sql-client-defaults.yaml 文件配上 MiniBatch 相关参数和开启 distinct 优化（我们的聚合中有 count distinct），作业的 scan 效率得到了很大的提升，从原先的 10 小时，提升到了 1 小时。关于性能调优的参数可以参阅：<a href="https://ci.apache.org/projects/flink/flink-docs-release-1.11/zh/dev/table/tuning/streaming_aggregation_optimization.html%E3%80%82">https://ci.apache.org/projects/flink/flink-docs-release-1.11/zh/dev/table/tuning/streaming_aggregation_optimization.html。</a></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">configuration:</span><br><span class="line">  table.exec.mini-batch.enabled: true</span><br><span class="line">  table.exec.mini-batch.allow-latency: 2s</span><br><span class="line">  table.exec.mini-batch.size: 5000</span><br><span class="line">  table.optimizer.distinct-agg.split.enabled: true</span><br></pre></td></tr></table></figure><h2 id="10-CDC-source-扫描-MySQL-表期间，发现无法往该表-insert-数据。"><a href="#10-CDC-source-扫描-MySQL-表期间，发现无法往该表-insert-数据。" class="headerlink" title="10. CDC source 扫描 MySQL 表期间，发现无法往该表 insert 数据。"></a><strong>10. CDC source 扫描 MySQL 表期间，发现无法往该表 insert 数据。</strong></h2><ul><li><strong>原因：</strong>由于使用的 MySQL 用户未授权 RELOAD 权限，导致无法获取全局读锁（FLUSH TABLES WITH READ LOCK）， CDC  source 就会退化成表级读锁，而使用表级读锁需要等到全表 scan 完，才能释放锁，所以会发现持锁时间过长的现象，影响其他业务写入数据。</li></ul><ul><li><strong>解决方法：</strong>给使用的 MySQL 用户授予 RELOAD  权限即可。所需的权限列表详见文档：<a href="https://github.com/ververica/flink-cdc-connectors/wiki/mysql-cdc-connector#setup-mysql-server%E3%80%82%E5%A6%82%E6%9E%9C%E5%87%BA%E4%BA%8E%E6%9F%90%E4%BA%9B%E5%8E%9F%E5%9B%A0%E6%97%A0%E6%B3%95%E6%8E%88%E4%BA%88">https://github.com/ververica/flink-cdc-connectors/wiki/mysql-cdc-connector#setup-mysql-server。如果出于某些原因无法授予</a> RELOAD 权限，也可以显式配上 ‘debezium.snapshot.locking.mode’ =  ‘none’来避免所有锁的获取，但要注意只有当快照期间表的 schema 不会变更才安全。</li></ul><h2 id="11-多个作业共用同一张-source-table-时，没有修改-server-id-导致读取出来的数据有丢失。"><a href="#11-多个作业共用同一张-source-table-时，没有修改-server-id-导致读取出来的数据有丢失。" class="headerlink" title="11. 多个作业共用同一张 source table 时，没有修改 server id 导致读取出来的数据有丢失。"></a><strong>11. 多个作业共用同一张 source table 时，没有修改 server id 导致读取出来的数据有丢失。</strong></h2><ul><li><strong>原因：</strong>MySQL binlog 数据同步的原理是，CDC source 会伪装成 MySQL 集群的一个 slave（使用指定的 server id 作为唯一  id），然后从 MySQL 拉取 binlog 数据。如果一个 MySQL 集群中有多个 slave 有同样的  id，就会导致拉取数据错乱的问题。</li></ul><ul><li><strong>解决方法：</strong>默认会随机生成一个 server id，容易有碰撞的风险。所以建议使用动态参数（table hint）在 query 中覆盖 server id。如下所示：</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">SELECT *</span><br><span class="line">FROM bill_info /*+ OPTIONS(&#x27;server-id&#x27;=&#x27;123456&#x27;) */ ;</span><br></pre></td></tr></table></figure><h2 id="12-在启动作业时，YARN-接收了任务，但作业一直未启动："><a href="#12-在启动作业时，YARN-接收了任务，但作业一直未启动：" class="headerlink" title="12. 在启动作业时，YARN 接收了任务，但作业一直未启动："></a><strong>12. 在启动作业时，YARN 接收了任务，但作业一直未启动：</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005503.png"></p><ul><li><strong>原因：</strong>Queue Resource Limit for AM 超过了限制资源限制。默认的最大内存是 30G (集群内存) * 0.1 = 3G，而每个 JM 申请 2G 内存，当提交第二个任务时，资源就不够了。</li></ul><ul><li><strong>解决方法：</strong>调大 AM 的 resource limit，在 capacity-scheduler.xml 配置  yarn.scheduler.capacity.maximum-am-resource-percent，代表AM的占总资源的百分比，默认为0.1，改成0.3（根据服务器的性能灵活配置）。</li></ul><h2 id="13-AM-进程起不来，一直被-kill-掉。"><a href="#13-AM-进程起不来，一直被-kill-掉。" class="headerlink" title="13. AM 进程起不来，一直被 kill 掉。"></a><strong>13. AM 进程起不来，一直被 kill 掉。</strong></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216005522.png"></p><ul><li><strong>原因：</strong>386.9 MB of 1 GB physical memory used; 2.1 GB of 2.1 GB virtual memory  use。默认物理内存是 1GB，动态申请到了 1GB，其中使用了386.9 MB。物理内存 x 2.1=虚拟内存，1GBx2.1≈2.1GB  ，2.1GB 虚拟内存已经耗尽，当虚拟内存不够时候，AM 的 container 就会自杀。</li></ul><ul><li><strong>解决方法：</strong>两个解决方案，或调整 yarn.nodemanager.vmem-pmem-ratio 值大点，或 yarn.nodemanager.vmem-check-enabled=false，关闭虚拟内存检查。参考：<a href="https://blog.csdn.net/lzxlfly/article/details/89175452%E3%80%82">https://blog.csdn.net/lzxlfly/article/details/89175452。</a></li></ul><h1 id="06-总结"><a href="#06-总结" class="headerlink" title="06 总结"></a><strong>06 总结</strong></h1><p>为了提升了实时报表服务的可用性和实时性，一开始我们采用了 Canal+Kafka+Flink 的方案，可是发现需要写比较多的 Java 代码，而且还需要处理好 DataStream 和 Table  的转换以及 binlong 位置的获取，开发难度相对较大。另外，需要维护 Kafka 和 Canal  这两个组件的稳定运行，对于我们小团队来说成本也不小。由于我们公司已经有基于 Flink 的任务在线上运行，因此采用 Flink SQL CDC  就成了顺理成章的事情。基于 Flink SQL CDC 的方案只需要编写 SQL ，不用写一行 Java  代码就能完成实时链路的打通和实时报表的计算，对于我们来说非常的简单易用，而且在线上运行的稳定性和性能表现也让我们满意。</p><p>知识源于积累,登峰造极源于自律!</p><p>好文章就得收藏慢慢品, 文章转载于: <a href="https://mp.weixin.qq.com/s/Mfn-fFegb5wzI8BIHhNGvQ">https://mp.weixin.qq.com/s/Mfn-fFegb5wzI8BIHhNGvQ</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;摘要：20年7月，Flink 1.11 新版发布，在生态及易用性上有大幅提升，其中 Table &amp;amp; SQL 开始支持 Change Data Capture（CDC）。CDC 被广泛使用在复制数据、更新缓存、微服务间同步数据、审计日志等场景，本文由社区由曾庆东同学分享，主要介绍 Flink SQL CDC 在生产环境的落地实践以及总结的实战经验&lt;/p&gt;
&lt;p&gt;Tips：点击下方链接可查看社区直播的 Flink SQL CDC 相关视频～&lt;br&gt;&lt;a href=&quot;https://flink-learning.org.cn/developers/flink-training-course3/&quot;&gt;https://flink-learning.org.cn/developers/flink-training-course3/&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="Flink" scheme="http://xubatian.cn/tags/Flink/"/>
    
  </entry>
  
  <entry>
    <title>央视直播</title>
    <link href="http://xubatian.cn/%E5%A4%AE%E8%A7%86%E7%9B%B4%E6%92%AD/"/>
    <id>http://xubatian.cn/%E5%A4%AE%E8%A7%86%E7%9B%B4%E6%92%AD/</id>
    <published>2022-02-15T16:06:42.000Z</published>
    <updated>2022-02-15T16:32:40.565Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关注央视网-关注国家最新动态"><a href="#关注央视网-关注国家最新动态" class="headerlink" title="关注央视网,关注国家最新动态"></a><a href="https://2022.cctv.com/live/cctv1/index.shtml?spm=C73465.PnE5ZJN2e0Bi.EHVA0D7NetYz.39">关注央视网,关注国家最新动态</a></h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220216000755.png"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;关注央视网-关注国家最新动态&quot;&gt;&lt;a href=&quot;#关注央视网-关注国家最新动态&quot; class=&quot;headerlink&quot; title=&quot;关注央视网,关注国家最新动态&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://2022.cctv.com/live/cctv1/in</summary>
      
    
    
    
    <category term="轻松一刻" scheme="http://xubatian.cn/categories/%E8%BD%BB%E6%9D%BE%E4%B8%80%E5%88%BB/"/>
    
    
    <category term="轻松一刻" scheme="http://xubatian.cn/tags/%E8%BD%BB%E6%9D%BE%E4%B8%80%E5%88%BB/"/>
    
  </entry>
  
  <entry>
    <title>Spark原理与实现: Spark SQL编程</title>
    <link href="http://xubatian.cn/Spark%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-Spark-SQL%E7%BC%96%E7%A8%8B/"/>
    <id>http://xubatian.cn/Spark%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-Spark-SQL%E7%BC%96%E7%A8%8B/</id>
    <published>2022-02-15T15:27:25.000Z</published>
    <updated>2022-02-15T15:44:49.053Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Spark-SQL编程"><a href="#Spark-SQL编程" class="headerlink" title="Spark SQL编程"></a>Spark SQL编程</h1><p>注意: 建表一定是数据集,对数据集进行建表即用df. 而执行SQL是spark.sql()</p><h1 id="SparkSession新的起始点"><a href="#SparkSession新的起始点" class="headerlink" title="SparkSession新的起始点"></a>SparkSession新的起始点</h1><p>​        在老的版本中，SparkSQL提供两种SQL查询起始点：一个叫SQLContext，用于Spark自己提供的SQL查询；一个叫HiveContext，用于连接Hive的查询。<br>​        现在是使用的是SparkSession了.实际上就是将两个结合了.所以你很方便的去查寻一个json文件,也可以查询一个hive数据.统一的数据入口<br>​        SparkSession是Spark最新的SQL查询起始点，实质上是SQLContext和HiveContext的组合，所以在SQLContex和HiveContext上可用的API在SparkSession上同样是可以使用的。SparkSession内部封装了sparkContext，所以计算实际上是由sparkContext完成的。<br>在Spark SQL中SparkSession是创建DataFrame和执行SQL的入口</p><span id="more"></span><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232827.png"></p><p>DataFrame和dataset可以相互转换. DataFrame是Dataset里面的一种特殊形式</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232850.png"></p><p>ResultSet():这个方法很恶心,就是编译期不做类型校验,但是你一运行就会报类型转换异常</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232913.png"></p><h1 id="DataFrame"><a href="#DataFrame" class="headerlink" title="DataFrame"></a>DataFrame</h1><h2 id="创建"><a href="#创建" class="headerlink" title="创建"></a>创建</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">在Spark SQL中SparkSession是创建DataFrame和执行SQL的入口，所以DataFrame的创建是来自于sparkSession.从sparkSession中去找.而sparkSession是依赖于sparkContext来构建的.它里面放了一个sparkcontext对象,你可以拿出来. 你也可以直接通过SparkConf来创建一个SparkSession.但是这种方式它里面也是在构建sparkSession之前构建了SparkContext. 因为SparkContext是用于跟Spark集群连接的.</span><br><span class="line"></span><br><span class="line">创建DataFrame有三种方式：</span><br><span class="line">1.通过Spark的数据源进行创建；</span><br><span class="line">2.从一个存在的RDD进行转换；</span><br><span class="line">3.还可以从Hive Table进行查询返回。</span><br></pre></td></tr></table></figure><p>1）从Spark数据源进行创建<br>（1）查看Spark数据源进行创建的文件格式</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; spark.read.</span><br><span class="line">csv   format   jdbc   json   load   option   options   orc   parquet   schema   table   text   textFile</span><br></pre></td></tr></table></figure><p>（2）读取json文件创建DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;/opt/module/spark/examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215233030.png"></p><p>（3）展示结果</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.show   这里面用的比较多的行动算子,我们之前写sparkCore是用collect的这种方式展现的是有结构信息的</span><br><span class="line">+----+-------+</span><br><span class="line">| age|   name|</span><br><span class="line">+----+-------+</span><br><span class="line">|null|Michael|</span><br><span class="line">|  30|   Andy|</span><br><span class="line">|  19| Justin|</span><br><span class="line">+----+-------+</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215233059.png"></p><p>2）从RDD进行转换<br>      后面讨论<br>3）从Hive Table进行查询返回<br>     后面讨论</p><h2 id="SQL风格语法-主要"><a href="#SQL风格语法-主要" class="headerlink" title="SQL风格语法(主要)"></a>SQL风格语法(主要)</h2><p>1）创建一个DataFrame(注意在DataSet里面定义的一些函数,我DataFrame也是可以用的)</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;/opt/module/spark/examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>2）对DataFrame创建一个临时表<br>View(视图),视图和table(表)有什么区别呢?视图使用来查的, 而表是用来增删改查的.因为当前的分布式数据集RDD具有不可变性.</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.createOrReplaceTempView(&quot;people&quot;)  //参数是视图名</span><br></pre></td></tr></table></figure><p>3）通过SQL语句实现查询全表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val sqlDF = spark.sql(&quot;SELECT * FROM people&quot;)</span><br><span class="line">sqlDF: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>4）结果展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; sqlDF.show</span><br><span class="line">+----+-------+</span><br><span class="line">| age|   name|</span><br><span class="line">+----+-------+</span><br><span class="line">|null|Michael|</span><br><span class="line">|  30|   Andy|</span><br><span class="line">|  19| Justin|</span><br><span class="line">+----+-------+</span><br></pre></td></tr></table></figure><p>注意：普通临时表是Session范围内的，如果想应用范围内有效，可以使用全局临时表。使用全局临时表时需要全路径访问，如：global_temp.people</p><p>5）对于DataFrame创建一个全局表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;SELECT * FROM global_temp.people&quot;).show()</span><br><span class="line">+----+-------+</span><br><span class="line">| age|   name|</span><br><span class="line">+----+-------+</span><br><span class="line">|null|Michael|</span><br><span class="line">|  30|   Andy|</span><br><span class="line">|  19| Justin|</span><br><span class="line"></span><br><span class="line">scala&gt; spark.newSession().sql(&quot;SELECT * FROM global_temp.people&quot;).show()</span><br><span class="line">+----+-------+</span><br><span class="line">| age|   name|</span><br><span class="line">+----+-------+</span><br><span class="line">|null|Michael|</span><br><span class="line">|  30|   Andy|</span><br><span class="line">|  19| Justin|</span><br><span class="line">+----+-------+</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215233353.png"></p><h2 id="DSL风格语法-次要-DSL风格叫领域特定语言"><a href="#DSL风格语法-次要-DSL风格叫领域特定语言" class="headerlink" title="DSL风格语法(次要) (DSL风格叫领域特定语言)"></a>DSL风格语法(次要) (DSL风格叫领域特定语言)</h2><p>DSL风格叫领域特定语言,就是说,他只能在sparkSQL当中能用,换一个地方就不能用了.很恶心.<br>DSL语言风格就是使用select,filter,map等这些函数.</p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215233442.png"></p><p>1）创建一个DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;/opt/module/spark/examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>2）查看DataFrame的Schema信息</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.printSchema</span><br><span class="line">root</span><br><span class="line"> |-- age: long (nullable = true)</span><br><span class="line"> |-- name: string (nullable = true)</span><br></pre></td></tr></table></figure><p>3）只查看”name”列数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.select(&quot;name&quot;).show()</span><br><span class="line">+-------+</span><br><span class="line">|   name|</span><br><span class="line">+-------+</span><br><span class="line">|Michael|</span><br><span class="line">|   Andy|</span><br><span class="line">| Justin|</span><br><span class="line">+-------+</span><br></pre></td></tr></table></figure><p>4）查看”name”列数据以及”age+1”数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.select($&quot;name&quot;, $&quot;age&quot; + 1).show()</span><br><span class="line">+-------+---------+</span><br><span class="line">|   name|(age + 1)|</span><br><span class="line">+-------+---------+</span><br><span class="line">|Michael|     null|</span><br><span class="line">|   Andy|       31|</span><br><span class="line">| Justin|       20|</span><br><span class="line">+-------+---------+</span><br></pre></td></tr></table></figure><p>5）查看”age”大于”21”的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.filter($&quot;age&quot; &gt; 21).show()</span><br><span class="line">+---+----+</span><br><span class="line">|age|name|</span><br><span class="line">+---+----+</span><br><span class="line">| 30|Andy|</span><br><span class="line">+---+----+</span><br></pre></td></tr></table></figure><p>6）按照”age”分组，查看数据条数</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.groupBy(&quot;age&quot;).count().show()</span><br><span class="line">+----+-----+</span><br><span class="line">| age|count|</span><br><span class="line">+----+-----+</span><br><span class="line">|  19|     1|</span><br><span class="line">|null|     1|</span><br><span class="line">|  30|     1|</span><br><span class="line">+----+-----+</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>创建DataFrame有三种方式：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">4.通过Spark的数据源进行创建；</span><br><span class="line">5.从一个存在的RDD进行转换；</span><br><span class="line">6.还可以从Hive Table进行查询返回。</span><br></pre></td></tr></table></figure><h2 id="RDD转换为DataFrame"><a href="#RDD转换为DataFrame" class="headerlink" title="RDD转换为DataFrame"></a>RDD转换为DataFrame</h2><p>注意：如果需要RDD与DF(DataFrame)或者DS(DataSet)之间操作，那么都需要引入 import spark.implicits._  （spark不是包名，而是sparkSession对象的名称）</p><p>前置条件：导入隐式转换并创建一个RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; import spark.implicits._</span><br><span class="line">import spark.implicits._</span><br><span class="line"></span><br><span class="line">scala&gt; val peopleRDD = sc.textFile(&quot;examples/src/main/resources/people.txt&quot;)</span><br><span class="line">peopleRDD: org.apache.spark.rdd.RDD[String] = examples/src/main/resources/people.txt MapPartitionsRDD[3] at textFile at &lt;console&gt;:27</span><br></pre></td></tr></table></figure><p>1）通过手动确定转换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; peopleRDD.map&#123;x=&gt;val para = x.split(&quot;,&quot;);(para(0),para(1).trim.toInt)&#125;.toDF(&quot;name&quot;,&quot;age&quot;)</span><br><span class="line">res1: org.apache.spark.sql.DataFrame = [name: string, age: int]</span><br></pre></td></tr></table></figure><p>2）通过反射确定（需要用到样例类）<br>（1）创建一个样例类,样例类其实就是和Java中的类一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; case class People(name:String, age:Int)</span><br></pre></td></tr></table></figure><p>（2）根据样例类将RDD转换为DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; peopleRDD.map&#123; x =&gt; val para = x.split(&quot;,&quot;);People(para(0),para(1).trim.toInt)&#125;.toDF</span><br><span class="line">res2: org.apache.spark.sql.DataFrame = [name: string, age: int]</span><br></pre></td></tr></table></figure><p>3）通过编程的方式（了解）<br>（1）导入所需的类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; import org.apache.spark.sql.types._</span><br><span class="line">import org.apache.spark.sql.types._</span><br></pre></td></tr></table></figure><p>（2）创建Schema</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val structType: StructType = StructType(StructField(&quot;name&quot;, StringType) :: StructField(&quot;age&quot;, IntegerType) :: Nil)</span><br><span class="line">structType: org.apache.spark.sql.types.StructType = StructType(StructField(name,StringType,true), StructField(age,IntegerType,true))</span><br></pre></td></tr></table></figure><p>（3）导入所需的类型</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; import org.apache.spark.sql.Row</span><br><span class="line">import org.apache.spark.sql.Row</span><br></pre></td></tr></table></figure><p>（4）根据给定的类型创建二元组RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val data = peopleRDD.map&#123; x =&gt; val para = x.split(&quot;,&quot;);Row(para(0),para(1).trim.toInt)&#125;</span><br><span class="line">data: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[6] at map at &lt;console&gt;:33</span><br></pre></td></tr></table></figure><p>（5）根据数据及给定的schema创建DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val dataFrame = spark.createDataFrame(data, structType)</span><br><span class="line">dataFrame: org.apache.spark.sql.DataFrame = [name: string, age: int]</span><br></pre></td></tr></table></figure><h2 id="DataFrame转换为RDD"><a href="#DataFrame转换为RDD" class="headerlink" title="DataFrame转换为RDD"></a>DataFrame转换为RDD</h2><p>直接调用rdd即可<br>1）创建一个DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;/opt/module/spark/examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>2）将DataFrame转换为RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val dfToRDD = df.rdd</span><br><span class="line">dfToRDD: org.apache.spark.rdd.RDD[org.apache.spark.sql.Row] = MapPartitionsRDD[19] at rdd at &lt;console&gt;:29</span><br></pre></td></tr></table></figure><p>3）打印RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; dfToRDD.collect</span><br><span class="line">res13: Array[org.apache.spark.sql.Row] = Array([Michael, 29], [Andy, 30], [Justin, 19])</span><br></pre></td></tr></table></figure><h1 id="DataSet"><a href="#DataSet" class="headerlink" title="DataSet"></a>DataSet</h1><p>DataSet是具有强类型的数据集合，需要提供对应的类型信息。</p><h2 id="创建-1"><a href="#创建-1" class="headerlink" title="创建"></a>创建</h2><p>1）创建一个样例类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; case class Person(name: String, age: Long)</span><br><span class="line">defined class Person</span><br></pre></td></tr></table></figure><p>2）创建DataSet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val caseClassDS = Seq(Person(&quot;Andy&quot;, 32)).toDS()</span><br><span class="line">caseClassDS: org.apache.spark.sql.Dataset[Person] = [name: string, age: bigint]</span><br></pre></td></tr></table></figure><h2 id="RDD转换为DataSet"><a href="#RDD转换为DataSet" class="headerlink" title="RDD转换为DataSet"></a>RDD转换为DataSet</h2><p>SparkSQL能够自动将包含有case类的RDD转换成DataFrame，case类定义了table的结构，case类属性通过反射变成了表的列名。Case类可以包含诸如Seqs或者Array等复杂的结构。<br>1）创建一个RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val peopleRDD = sc.textFile(&quot;examples/src/main/resources/people.txt&quot;)</span><br><span class="line">peopleRDD: org.apache.spark.rdd.RDD[String] = examples/src/main/resources/people.txt MapPartitionsRDD[3] at textFile at &lt;console&gt;:27</span><br></pre></td></tr></table></figure><p>2）创建一个样例类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; case class Person(name: String, age: Long)</span><br><span class="line">defined class Person</span><br></pre></td></tr></table></figure><p>3）将RDD转化为DataSet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; peopleRDD.map(line =&gt; &#123;val para = line.split(&quot;,&quot;);Person(para(0),para(1).trim.toInt)&#125;).toDS</span><br><span class="line">res8: org.apache.spark.sql.Dataset[Person] = [name: string, age: bigint]</span><br></pre></td></tr></table></figure><h2 id="DataSet转换为RDD"><a href="#DataSet转换为RDD" class="headerlink" title="DataSet转换为RDD"></a>DataSet转换为RDD</h2><p>调用rdd方法即可。<br>1）创建一个DataSet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val DS = Seq(Person(&quot;Andy&quot;, 32)).toDS()</span><br><span class="line">DS: org.apache.spark.sql.Dataset[Person] = [name: string, age: bigint]</span><br></pre></td></tr></table></figure><p>2）将DataSet转换为RDD</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; DS.rdd</span><br><span class="line">res11: org.apache.spark.rdd.RDD[Person] = MapPartitionsRDD[15] at rdd at &lt;console&gt;:28</span><br></pre></td></tr></table></figure><h2 id="DataFrame与DataSet的互操作"><a href="#DataFrame与DataSet的互操作" class="headerlink" title="DataFrame与DataSet的互操作"></a>DataFrame与DataSet的互操作</h2><h3 id="DataFrame转DataSet"><a href="#DataFrame转DataSet" class="headerlink" title="DataFrame转DataSet"></a>DataFrame转DataSet</h3><p>1）创建一个DateFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>2）创建一个样例类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; case class Person(name: String, age: Long)</span><br><span class="line">defined class Person</span><br></pre></td></tr></table></figure><p>3）将DataFrame转化为DataSet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.as[Person]</span><br><span class="line">res14: org.apache.spark.sql.Dataset[Person] = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><h3 id="Dataset转DataFrame"><a href="#Dataset转DataFrame" class="headerlink" title="Dataset转DataFrame"></a>Dataset转DataFrame</h3><p>1）创建一个样例类</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; case class Person(name: String, age: Long)</span><br><span class="line">defined class Person</span><br></pre></td></tr></table></figure><p>2）创建DataSet</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val ds = Seq(Person(&quot;Andy&quot;, 32)).toDS()</span><br><span class="line">ds: org.apache.spark.sql.Dataset[Person] = [name: string, age: bigint]</span><br></pre></td></tr></table></figure><p>3）将DataSet转化为DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = ds.toDF</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [name: string, age: bigint]</span><br></pre></td></tr></table></figure><p>4）展示</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.show</span><br><span class="line">+----+---+</span><br><span class="line">|name|age|</span><br><span class="line">+----+---+</span><br><span class="line">|Andy| 32|</span><br><span class="line">+----+---+</span><br></pre></td></tr></table></figure><p>这种方法就是在给出每一列的类型后，使用as方法，转成Dataset，这在数据类型是DataFrame又需要针对各个字段处理时极为方便。在使用一些特殊的操作时，一定要加上 import spark.implicits._ 不然toDF、toDS无法使用。</p><h2 id="RDD、DataFrame和DataSet"><a href="#RDD、DataFrame和DataSet" class="headerlink" title="RDD、DataFrame和DataSet"></a>RDD、DataFrame和DataSet</h2><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215234017.png"></p><p>在SparkSQL中Spark为我们提供了两个新的抽象，分别是DataFrame和DataSet。他们和RDD有什么区别呢？首先从版本的产生上来看:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">RDD (Spark1.0) —&gt; Dataframe(Spark1.3) —&gt; Dataset(Spark1.6)</span><br><span class="line">如果同样的数据都给到这三个数据结构，他们分别计算之后，都会给出相同的结果。不同是的他们的执行效率和执行方式。在后期的Spark版本中，DataSet有可能会逐步取代RDD和DataFrame成为唯一的API接口。</span><br></pre></td></tr></table></figure><h3 id="三者的共性"><a href="#三者的共性" class="headerlink" title="三者的共性"></a>三者的共性</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">（1）RDD、DataFrame、DataSet全都是spark平台下的分布式弹性数据集，为处理超大型数据提供便利;</span><br><span class="line">（2）三者都有惰性机制，在进行创建、转换，如map方法时，不会立即执行，只有在遇到Action如foreach时，三者才会开始遍历运算;</span><br><span class="line">（3）三者有许多共同的函数，如filter，排序等;</span><br><span class="line">（4）在对DataFrame和Dataset进行操作许多操作都需要这个包:import spark.implicits._（在创建好SparkSession对象后尽量直接导入）,DataFrame和DataSet特别是和RDD进行操作的时候,则需要引入一个隐式转换.   因为这个spark session对象是由我们启动的spark-shell来给我们创建的,这个spark-shell窗口在启动的时候就已经将隐式转换导入进来了. 那就算把RDD在代码里面转成了样例类对象了,你调用.toDS调用不出来. 因为你没有加隐式转换.  而且这个隐式转换mport spark.implicits._  这个spark看起来像包,但是他不是, 这个spark是sparkSession的对象的对象 </span><br></pre></td></tr></table></figure><h3 id="三者的互相转化"><a href="#三者的互相转化" class="headerlink" title="三者的互相转化"></a>三者的互相转化</h3><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215234137.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">RDD到DataFrame或者到dataSet,以及DataFrame到DataSet,这个过程我们认为是由简单到复杂,需要加东西的过程. 这一套过程都需要用到一个样例类. </span><br><span class="line">RDD到DataFrame用的是.toDF</span><br><span class="line">RDD到DataSet用的是.toDS</span><br><span class="line">DataFrame到DataSet用的是.as[样例类]</span><br><span class="line"></span><br><span class="line">DataFrame和dataSet到RDD或者Dataset到DataFrame 这是简的过程</span><br><span class="line">DataFrame和DataSet到RDD直接使用.rdd 即可</span><br><span class="line">DataSet到DataFrame使用.toDF</span><br></pre></td></tr></table></figure><h3 id="IDEA创建SparkSQL程序"><a href="#IDEA创建SparkSQL程序" class="headerlink" title="IDEA创建SparkSQL程序"></a>IDEA创建SparkSQL程序</h3><p>1）添加依赖</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;dependency&gt;</span><br><span class="line">&lt;groupId&gt;org.apache.spark&lt;/groupId&gt;</span><br><span class="line">&lt;artifactId&gt;spark-sql_2.11&lt;/artifactId&gt;</span><br><span class="line">&lt;version&gt;2.1.1&lt;/version&gt;</span><br><span class="line">&lt;/dependency&gt;</span><br></pre></td></tr></table></figure><p>2）代码实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line">import org.apache.spark.&#123;SparkConf, SparkContext&#125;</span><br><span class="line"></span><br><span class="line">object HelloWorld &#123;</span><br><span class="line"></span><br><span class="line">  def main(args: Array[String]) &#123;</span><br><span class="line"></span><br><span class="line">    //创建SparkConf()并设置App名称</span><br><span class="line">    val spark = SparkSession</span><br><span class="line">      .builder()</span><br><span class="line"></span><br><span class="line">.master(&quot;local[*]&quot;)</span><br><span class="line">      .appName(&quot;HelloWorld&quot;)</span><br><span class="line">      //.config(&quot;spark.some.config.option&quot;, &quot;some-value&quot;)</span><br><span class="line">      .getOrCreate()</span><br><span class="line"></span><br><span class="line">//导入隐式转换</span><br><span class="line">import spark.implicits._</span><br><span class="line"></span><br><span class="line">//读取本地文件，创建DataFrame</span><br><span class="line">val df = spark.read.json(&quot;examples/src/main/resources/people.json&quot;)</span><br><span class="line"></span><br><span class="line">//打印</span><br><span class="line">df.show()</span><br><span class="line"></span><br><span class="line">//DSL风格：查询年龄在21岁以上的</span><br><span class="line">df.filter($&quot;age&quot; &gt; 21).show()</span><br><span class="line"></span><br><span class="line">//创建临时表</span><br><span class="line">df.createOrReplaceTempView(&quot;persons&quot;)</span><br><span class="line"></span><br><span class="line">//SQL风格：查询年龄在21岁以上的</span><br><span class="line">spark.sql(&quot;SELECT * FROM persons where age &gt; 21&quot;).show()</span><br><span class="line"></span><br><span class="line">//关闭连接</span><br><span class="line">spark.stop()</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="用户自定义函数"><a href="#用户自定义函数" class="headerlink" title="用户自定义函数"></a>用户自定义函数</h2><p>在Shell窗口中可以通过spark.udf功能用户可以自定义函数。</p><h3 id="UDF"><a href="#UDF" class="headerlink" title="UDF"></a>UDF</h3><p>1）创建DataFrame</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; val df = spark.read.json(&quot;examples/src/main/resources/people.json&quot;)</span><br><span class="line">df: org.apache.spark.sql.DataFrame = [age: bigint, name: string]</span><br></pre></td></tr></table></figure><p>2）打印数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.show()</span><br><span class="line">+----+-------+</span><br><span class="line">| age|   name|</span><br><span class="line">+----+-------+</span><br><span class="line">|null|Michael|</span><br><span class="line">|  30|   Andy|</span><br><span class="line">|  19| Justin|</span><br><span class="line">+----+-------+</span><br></pre></td></tr></table></figure><p>3）注册UDF，功能为在数据前添加字符串<br>因为自定义函数,最终是在SQL里面去用,所以你得有函数名addName,  后面要有函数如何添加? 相当于你在hive当中自定义的函数. </p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; spark.udf.register(&quot;addName&quot;, (x:String)=&gt; &quot;Name:&quot;+x)</span><br><span class="line">res5: org.apache.spark.sql.expressions.UserDefinedFunction = UserDefinedFunction(&lt;function1&gt;,StringType,Some(List(StringType)))</span><br></pre></td></tr></table></figure><p>4）创建临时表</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; df.createOrReplaceTempView(&quot;people&quot;)</span><br></pre></td></tr></table></figure><p>5）应用UDF</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">scala&gt; spark.sql(&quot;Select addName(name), age from people&quot;).show()</span><br><span class="line">+-----------------+----+</span><br><span class="line">|UDF:addName(name)| age|</span><br><span class="line">+-----------------+----+</span><br><span class="line">|     Name:Michael|null|</span><br><span class="line">|        Name:Andy|  30|</span><br><span class="line">|      Name:Justin|  19|</span><br><span class="line">+-----------------+----+</span><br></pre></td></tr></table></figure><h3 id="UDAF"><a href="#UDAF" class="headerlink" title="UDAF"></a>UDAF</h3><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">自定义UDAF函数,多进一出,聚合函数.</span><br><span class="line">多进:关心进来的数据是什么样子的</span><br><span class="line">出:出去看你做什么事情</span><br><span class="line">对于Spark程序和MR程序,他是一行一行读取的.</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">强类型的Dataset和弱类型的DataFrame都提供了相关的聚合函数， 如 count()，countDistinct()，avg()，max()，min()。除此之外，用户可以设定自己的自定义聚合函数。通过继承UserDefinedAggregateFunction来实现用户自定义聚合函数。</span><br></pre></td></tr></table></figure><p>1）需求：实现求平均工资的自定义聚合函数。<br>2）代码实现</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import org.apache.spark.sql.expressions.MutableAggregationBuffer</span><br><span class="line">import org.apache.spark.sql.expressions.UserDefinedAggregateFunction</span><br><span class="line">import org.apache.spark.sql.types._</span><br><span class="line">import org.apache.spark.sql.Row</span><br><span class="line">import org.apache.spark.sql.SparkSession</span><br><span class="line"></span><br><span class="line">object MyAverage extends UserDefinedAggregateFunction &#123;</span><br><span class="line"></span><br><span class="line">// 聚合函数输入参数的数据类型</span><br><span class="line">def inputSchema: StructType = StructType(StructField(&quot;inputColumn&quot;, LongType) :: Nil)</span><br><span class="line"></span><br><span class="line">// 聚合缓冲区中值得数据类型</span><br><span class="line">def bufferSchema: StructType = &#123;</span><br><span class="line">StructType(StructField(&quot;sum&quot;, LongType) :: StructField(&quot;count&quot;, LongType) :: Nil)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 返回值的数据类型</span><br><span class="line">def dataType: DataType = DoubleType</span><br><span class="line"></span><br><span class="line">// 对于相同的输入是否一直返回相同的输出。</span><br><span class="line">def deterministic: Boolean = true</span><br><span class="line"></span><br><span class="line">// 初始化</span><br><span class="line">def initialize(buffer: MutableAggregationBuffer): Unit = &#123;</span><br><span class="line"></span><br><span class="line">// 存工资的总额</span><br><span class="line">buffer(0) = 0L</span><br><span class="line"></span><br><span class="line">// 存工资的个数</span><br><span class="line">buffer(1) = 0L</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 同一个分区数据合并</span><br><span class="line">def update(buffer: MutableAggregationBuffer, input: Row): Unit = &#123;</span><br><span class="line">if (!input.isNullAt(0)) &#123;</span><br><span class="line">buffer(0) = buffer.getLong(0) + input.getLong(0)</span><br><span class="line">buffer(1) = buffer.getLong(1) + 1</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 不同分区间数据合并</span><br><span class="line">def merge(buffer1: MutableAggregationBuffer, buffer2: Row): Unit = &#123;</span><br><span class="line">buffer1(0) = buffer1.getLong(0) + buffer2.getLong(0)</span><br><span class="line">buffer1(1) = buffer1.getLong(1) + buffer2.getLong(1)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 计算最终结果</span><br><span class="line">def evaluate(buffer: Row): Double = buffer.getLong(0).toDouble / buffer.getLong(1)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>3）函数使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">// 注册函数</span><br><span class="line">spark.udf.register(&quot;myAverage&quot;, MyAverage)</span><br><span class="line"></span><br><span class="line">val df = spark.read.json(&quot;examples/src/main/resources/employees.json&quot;)</span><br><span class="line">df.createOrReplaceTempView(&quot;employees&quot;)</span><br><span class="line">df.show()</span><br><span class="line">// +-------+------+</span><br><span class="line">// |   name|salary|</span><br><span class="line">/ +-------+------+</span><br><span class="line">// |Michael|  3000|</span><br><span class="line">// |   Andy|  4500|</span><br><span class="line">// | Justin|  3500|</span><br><span class="line">// |  Berta|  4000|</span><br><span class="line">// +-------+------+</span><br><span class="line"></span><br><span class="line">val result = spark.sql(&quot;SELECT myAverage(salary) as average_salary FROM employees&quot;)</span><br><span class="line">result.show()</span><br><span class="line">// +--------------+</span><br><span class="line">// |average_salary|</span><br><span class="line">// +--------------+</span><br><span class="line">// |        3750.0 |</span><br><span class="line">// +--------------+</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;Spark-SQL编程&quot;&gt;&lt;a href=&quot;#Spark-SQL编程&quot; class=&quot;headerlink&quot; title=&quot;Spark SQL编程&quot;&gt;&lt;/a&gt;Spark SQL编程&lt;/h1&gt;&lt;p&gt;注意: 建表一定是数据集,对数据集进行建表即用df. 而执行SQL是spark.sql()&lt;/p&gt;
&lt;h1 id=&quot;SparkSession新的起始点&quot;&gt;&lt;a href=&quot;#SparkSession新的起始点&quot; class=&quot;headerlink&quot; title=&quot;SparkSession新的起始点&quot;&gt;&lt;/a&gt;SparkSession新的起始点&lt;/h1&gt;&lt;p&gt;​        在老的版本中，SparkSQL提供两种SQL查询起始点：一个叫SQLContext，用于Spark自己提供的SQL查询；一个叫HiveContext，用于连接Hive的查询。&lt;br&gt;​        现在是使用的是SparkSession了.实际上就是将两个结合了.所以你很方便的去查寻一个json文件,也可以查询一个hive数据.统一的数据入口&lt;br&gt;​        SparkSession是Spark最新的SQL查询起始点，实质上是SQLContext和HiveContext的组合，所以在SQLContex和HiveContext上可用的API在SparkSession上同样是可以使用的。SparkSession内部封装了sparkContext，所以计算实际上是由sparkContext完成的。&lt;br&gt;在Spark SQL中SparkSession是创建DataFrame和执行SQL的入口&lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="spark" scheme="http://xubatian.cn/tags/spark/"/>
    
    <category term="spark SQL" scheme="http://xubatian.cn/tags/spark-SQL/"/>
    
  </entry>
  
  <entry>
    <title>Spark原理与实现: SparkSQL的概述</title>
    <link href="http://xubatian.cn/Spark%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-SparkSQL%E7%9A%84%E6%A6%82%E8%BF%B0/"/>
    <id>http://xubatian.cn/Spark%E5%8E%9F%E7%90%86%E4%B8%8E%E5%AE%9E%E7%8E%B0-SparkSQL%E7%9A%84%E6%A6%82%E8%BF%B0/</id>
    <published>2022-02-15T15:13:48.000Z</published>
    <updated>2022-02-15T15:22:27.156Z</updated>
    
    <content type="html"><![CDATA[<h1 id="什么是Spark-SQL"><a href="#什么是Spark-SQL" class="headerlink" title="什么是Spark SQL"></a>什么是Spark SQL</h1><p>​        Spark SQL是Spark用来处理结构化数据的一个模块，它提供了2个编程抽象：DataFrame和DataSet，并且作为分布式SQL查询引擎的作用。</p><p>​        我们已经学习了Hive，它是将Hive SQL转换成MapReduce然后提交到集群上执行，大大简化了编写MapReduc的程序的复杂性，由于MapReduce这种计算模型执行效率比较慢。所有Spark SQL的应运而生，它是将Spark SQL转换成SparkCore来运行，然后提交到集群执行，执行效率非常快！</p><p>​        Spark SQL其实和hive替代MapReduce一样的. </p><span id="more"></span><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215231509.png"></p><h1 id="Spark-SQL的特点"><a href="#Spark-SQL的特点" class="headerlink" title="Spark SQL的特点"></a>Spark SQL的特点</h1><p><strong>1）易整合</strong></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215231741.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">集成</span><br><span class="line">SQL查询与Spark程序无缝结合。</span><br><span class="line">Spark SQL允许您使用SQL或familliar DataFrame API在Spark程序中查询结构化数据。适用于Java、Scala、Python和R</span><br></pre></td></tr></table></figure><p><strong>2）统一的数据访问方式</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">以前我们读hive,读JDBC,读Json都是要创建对象的,现在我们统一有一个对象 </span><br><span class="line">直接用Spark session这个对象来读这个数据就可以了</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215231819.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">统一的数据访问</span><br><span class="line">以同样的方式连接到任何数据源。</span><br><span class="line">DataFrames和SQL提供了一种通用的方法来访问各种数据源，包括Hive、Avro、Parquet、ORC、JSON和JDBC。您甚至可以跨这些源联接数据。</span><br><span class="line"></span><br><span class="line">查询和连接不同的数据源。</span><br></pre></td></tr></table></figure><p><strong>3）兼容Hive</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">spark内置hive的数据库是der, 所以我们换成外部的hive,用外部的hive也比较简单,我不需要告诉他计算引擎MR在哪,只需要告诉他元数据信息就可以了,你能让spark通过元数据找到实际数据所在地就行了,元数据在hive当中存在哪呢?在mysql当中,hive不是天生就存在mysql当中的,是有一个配置文件告诉他的,如果说你的spark sql想用之前hive里面的数据很简单,你把配置文件hive-site.xml配置给他移到spark.conf里面就够了,然后你一打开他就完成了之前和你hive数据的对接了</span><br><span class="line"></span><br><span class="line">Spark当中有一个内置的hive,你不用外部hive的元数据,spark内部hive自己管理是可以的但是默认的数据库是der. </span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215231853.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">具有和Hive的兼容性</span><br><span class="line"> 运行未修改的Hive查询现有数据</span><br><span class="line"> Spark SQL重用Hive前端和substore，使您与现有的Hive数据、查询和UDF完全兼容。 简单地安装在Hive旁边</span><br><span class="line"></span><br><span class="line">Spark SQL可以使用现有的Hive metastore，SerDes和UDFs</span><br></pre></td></tr></table></figure><p><strong>4）标准的数据连接</strong></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215231918.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">标准的连接</span><br><span class="line">通过JDBC或ODBC连接。服务器模式为商业智能工具提供了行业标准的JDBC和ODBC连接</span><br><span class="line"></span><br><span class="line">使用现有的BI工具查询大数据</span><br></pre></td></tr></table></figure><h1 id="什么是DataFrame-数据框"><a href="#什么是DataFrame-数据框" class="headerlink" title="什么是DataFrame(数据框)"></a>什么是DataFrame(数据框)</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">在Spark中，DataFrame是一种以RDD为基础的分布式数据集，类似于传统数据库中的二维表格。</span><br><span class="line">DataFrame与RDD的主要区别在于:</span><br><span class="line">DataFrame带有schema元信息，即DataFrame所表示的二维表数据集的每一列都带有名称和类型。这使得Spark SQL得以洞察更多的结构信息，从而对藏于DataFrame背后的数据源以及作用于DataFrame之上的变换进行了针对性的优化，最终达到大幅提升运行时效率的目标。反观RDD，由于无从得知所存数据元素的具体内部结构，Spark Core只能在stage层面进行简单、通用的流水线优化。</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232009.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ataFrame也是懒执行的，但性能上比RDD要高，主要原因：高在哪呢?主要就是他有优化器</span><br><span class="line">优化的执行计划，即查询计划通过Spark catalyst optimiser进行优化。比如下面一个例子:</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232035.png"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">ResultSet():这个方法很恶心,就是编译期不做类型校验,但是你一运行就会报类型转换异常</span><br><span class="line"></span><br><span class="line">上图这个例子在做什么事情呢? </span><br><span class="line">RDD.join(...)filter(....).   对于RDD里面的操作,因为当前的数据集,我是单独的对Event进行过滤的,不是对join出来的,我累加一个和进行过滤的. 如果说你是两个表join. 一个表的某一列加另外一个表的某一列,在这个结果集进行过滤. 那你只能先join再过滤. 但是现在是对表当中的原始数据进行过滤. 其实他在优化的时候做到了一个东西叫谓词下推技术.</span><br><span class="line">谓词下推的基本思想即：</span><br><span class="line">将过滤表达式尽可能移动至靠近数据源的位置，以使真正执行时能直接跳过无关的数据。</span><br><span class="line">就是说在SQL的整个优化过程当中,他将能够提前过滤的数据先自己放在前面去执行. 他自己就能做这个事情.这就叫优化器. 那你SQL写出来之后呢,人家就把你数据先给你过滤出来.先去执行.</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232054.png"></p><h1 id="什么是DataSet"><a href="#什么是DataSet" class="headerlink" title="什么是DataSet"></a>什么是DataSet</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">DataSet是分布式数据集合。DataSet是Spark 1.6中添加的一个新抽象，是DataFrame的一个扩展。它提供了RDD的优势（强类型，使用强大的lambda函数的能力）以及Spark SQL优化执行引擎的优点。而对于SparkSQl的Setframe来说,我们可以说DataFrame是弱类型的.因为他在编译期间不做类型检查.这就给用户带来很不舒服. 而dataSet是可以放一个泛型为具体的样例类.痛过样例类来获取他的一个属性.那这个类型在编译期间是一定能够检查的.</span><br><span class="line">DataFrame虽然有结构信息,但是他在编译器的时候不用,而dataSet他也是有结构信息,但是他在编译期间的时候就给他用上了.这就是DataFrame和dataSet的主要区别. DataFrame只是dataSet的一个特殊形式.</span><br><span class="line">DataSet也可以使用功能性的转换（操作map，flatMap，filter等等）。</span><br><span class="line">1）是DataFrame API的一个扩展，是SparkSQL最新的数据抽象；</span><br><span class="line">2）用户友好的API风格，既具有类型安全检查也具有DataFrame的查询优化特性；</span><br><span class="line">3）用样例类来对DataSet中定义数据的结构信息，样例类中每个属性的名称直接映射到DataSet中的字段名称；</span><br><span class="line">4）DataSet是强类型的。比如可以有DataSet[Car]，DataSet[Person]里面必须放具体的类。</span><br></pre></td></tr></table></figure><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232124.png"></p><p><img src="https://xubatian.oss-cn-hangzhou.aliyuncs.com/xubatian_blogs_img2/20220215232144.png"></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;什么是Spark-SQL&quot;&gt;&lt;a href=&quot;#什么是Spark-SQL&quot; class=&quot;headerlink&quot; title=&quot;什么是Spark SQL&quot;&gt;&lt;/a&gt;什么是Spark SQL&lt;/h1&gt;&lt;p&gt;​        Spark SQL是Spark用来处理结构化数据的一个模块，它提供了2个编程抽象：DataFrame和DataSet，并且作为分布式SQL查询引擎的作用。&lt;/p&gt;
&lt;p&gt;​        我们已经学习了Hive，它是将Hive SQL转换成MapReduce然后提交到集群上执行，大大简化了编写MapReduc的程序的复杂性，由于MapReduce这种计算模型执行效率比较慢。所有Spark SQL的应运而生，它是将Spark SQL转换成SparkCore来运行，然后提交到集群执行，执行效率非常快！&lt;/p&gt;
&lt;p&gt;​        Spark SQL其实和hive替代MapReduce一样的. &lt;/p&gt;</summary>
    
    
    
    <category term="大数据" scheme="http://xubatian.cn/categories/%E5%A4%A7%E6%95%B0%E6%8D%AE/"/>
    
    
    <category term="spark" scheme="http://xubatian.cn/tags/spark/"/>
    
    <category term="spark SQL" scheme="http://xubatian.cn/tags/spark-SQL/"/>
    
  </entry>
  
</feed>
